{"version":3,"sources":["Traduccion/traduccion.tsx","xqueryAST/ExpresionesXpath/Primitivo.tsx","xpathAST/Expresiones/Primitivo.tsx","xqueryAST/manejadores/ManejadorXquery.tsx","xqueryAST/AmbientesXquery/EntornoXQuery.tsx","xmlAST/ClaseError.tsx","Optimizador/Asignacion.tsx","Optimizador/Condicional.tsx","Grammar/xmlGrammar.js","xmlAST/Entorno.tsx","xmlAST/Simbolo.tsx","Reportes/xmlReport.js","Reportes/NodoCST.tsx","Grammar/XPATHparser.js","xpathAST/Expresiones/Acceso.tsx","xpathAST/Expresiones/Aritmetico.tsx","xpathAST/Expresiones/Logica.tsx","xpathAST/Expresiones/Path.tsx","xpathAST/Expresiones/Relacional.tsx","Grammar/xQueryGrammar.js","xqueryAST/ExpresionesXpath/Acceso.tsx","xqueryAST/ExpresionesXpath/Aritmetico.tsx","xqueryAST/ExpresionesXpath/Logica.tsx","xqueryAST/ExpresionesXpath/Path.tsx","xqueryAST/ExpresionesXpath/Relacional.tsx","xqueryAST/ExpresionesXquery/For.tsx","xqueryAST/ExpresionesXquery/Let.tsx","xqueryAST/ExpresionesXquery/MultiXpaths.tsx","xqueryAST/ExpresionesXquery/Return.tsx","xqueryAST/ExpresionesXquery/XqueryPath.tsx","Grammar/C3DGrammar.js","Traduccion/xml3d.tsx","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx","Optimizador/OptimizadorMirilla.tsx","Optimizador/Optimizado.tsx"],"names":["traduccion","content","this","t","i","toString","printString","metodoConsultaXPATH","compararCadenas3d","etiquetaTexto","etiquetaApertura","etiquetaCierre","etiquetaUnitaria","verificarAtributo","etiquetaAtributo","tranlate","etiquetaCounter","stackCounter","tipoPrimitivo","Primitivo","line","column","valor","entXquery","ent","simboloPadre","NUMBER","value","Number","type","STRING","String","undefined","pos","last","Error","texto","setTranslate","SP","ManejadorXquery","salida","salidaTexto","listNodes","element","NODO","concatenar","construirNodos","push","unirSalida","entPadre","tab","atributos","listaSimbolos","atri","identificador","replaceAll","listaEntornos","length","entActual","resp","EntornoXQuery","anterior","variables","Map","id","set","has","nvoValor","Array","from","entries","entry","ClaseError","tipo","error","linea","columna","crearTextoReporteErrorXML","listaErr","key","Asignacion","indice","operador1","signo","operador2","Condicional","operando1","comparacion","operando2","xmlGrammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","parser","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","listaErrores","ast","encoding","$","first_line","first_column","Entorno","Simbolo","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","loc","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","console","log","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","listaE","SP_ID","SP_VAL","asignarPosEnts","asignarPosSimb","idAtrubito","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","NodoCST","txtGramProdAux","txtGramRegSemAux","ReporteGramatical","ReporteCST","lista","44","nuevo","nombre","listaNodos","Nombre","crearTextoGraphvizCST","padre","crearTextoGraphvizRepGram","producciones","reglas","XPATHparser","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","29","30","31","32","33","34","35","36","37","38","39","40","41","43","45","46","47","xpath","tipoQuery","Path","Acceso","Aritmetico","operacionAritmetica","SUMA","RESTA","MULT","DIV","MOD","Relacional","operacionRelacional","IGUAL","DIFERENCIACION","MENOR","MENORIGUAL","MAYOR","MAYORIGUAL","Logica","operacionLogica","AND","OR","28","42","tmp","tipoAcceso","predicados","SP_id","SP_tipoAcceso","GraficarAST","hijoIzq","hijoDer","tipoOperacion","sym","valorIzq","execute","valorDer","RESP","BOOL","result","L_Accesos","tipoPath","nuevaL_Accesos","newL_Acc","acceso","insertarConsulta","validarAntecesores","getQuery","metodoCompararCadenas","validarPredicadosRaiz","posActAcceso","metodoVerificarAtributo","getAtributo","validarPredicadosAtri","crearAtributoEtiqueta","entChiild","construirTodosAtributos","crearPrintString","construirTodosTextos","validarPredicadosNodos","crearEtiquetaApertura","crearEtiquetaCierre","crearEtiquetaTexto","charCodeAt","valIzq","valDer","validar","xQueryGrammar","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","48","49","50","52","53","54","55","57","59","60","63","64","65","66","67","68","69","71","73","75","77","78","MultiXpaths","For","Let","Return","XqueryPath","61","62","51","70","72","74","76","56","58","executeXquery","entChild","idIn","idAt","select","where","orderBy","orden","ret","entAct","RaizXML","nvoEnt","validarWhere","guaradarVar","buildXquery","idVar","path","existeVar","paths","L_Xqueys","Xquery","accesos","varFind","getVar","c3dgrammar","textoaux","Optim","GenerarGraphviz","textrep","textGraphviz","Reset","Optimizado","TextGraphviz","Optimizar","90","151","OptimizadorMirilla","traducirXml","traducirXmlRecursive","simbolo","parseXPATH","parseXQuery","parseC3D","Main","consoleResult","xml","xquery","repcsttxt","repgramtxt","repErrorXML","repErrorXPATH","repTablaSimbolos","repAstXpath","graphvizContent","repOptimizaciones","traducir","querysXpath","respuesta","query","setState","getTranslate","astXquery","nvoEntorno","optimizar","optimizado","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","Row","Col","xs","md","Form","Control","placeholder","Button","variant","as","rows","Group","name","size","Graphviz","dot","height","width","zoom","readOnly","Component","App","basename","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","asigact","regla","original","Resultado","ReporteCodigo","NuevoVal","Objeto","Regla6_7_8_9","Regla10_11_12_13","Regla14","Regla15","Regla16","Regla1","Regla3","parseInt"],"mappings":"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AE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIyM,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIuF,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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","file":"static/js/main.8fadcfba.chunk.js","sourcesContent":["export class traduccion {\r\n    static t: number = -1;\r\n    static stackCounter: number = -1;\r\n    static etiquetaCounter: number = 0;\r\n    static tranlate: string = \"\";\r\n    //static printString: boolean = false;\r\n    //static metodostring:string = \"\";\r\n    static metodoConsultaXPATH:string = \"\";\r\n    static compararCadenas3d:string=\"\";\r\n    static etiquetaTexto:string=\"\";\r\n    static etiquetaApertura:string=\"\";\r\n    static etiquetaCierre:string=\"\";\r\n    static etiquetaUnitaria:string=\"\";\r\n    static etiquetaAtributo:string=\"\";\r\n    static verificarAtributo:string=\"\";\r\n    static printString:string=\"\";\r\n\r\n    public static getTranslate(): string {\r\n        var content: string = \"\";\r\n        content += \"//Header\\t--------------\\n\";\r\n        content += \"#include <stdio.h>\\n\\n\";\r\n        content += \"double heap[30101999];\\n\";\r\n        content += \"double stack[30101999];\\n\\n\";\r\n        content += \"double S;\\n\";\r\n        content += \"double H;\\n\\n\";\r\n        if (this.t > 0) {\r\n            content += \"double \";\r\n            for (let i = 0; i < this.t+1; i++) {\r\n                content += \"t\" + i.toString();\r\n                if (i < this.t) {\r\n                    content += \", \";\r\n                }\r\n            }\r\n            content += \";\\n\\n\";\r\n        }\r\n        //content += this.metodostring;\r\n        content += this.printString;\r\n        content += this.metodoConsultaXPATH;\r\n        content += this.compararCadenas3d;\r\n        content += this.etiquetaTexto;\r\n        content += this.etiquetaApertura;\r\n        content += this.etiquetaCierre;\r\n        content += this.etiquetaUnitaria;\r\n        content += this.verificarAtributo;\r\n        content += this.etiquetaAtributo;\r\n        content += \"//Metodo Main\\t--------------\\n\";\r\n        content += \"void main(){\\n\";\r\n        content += \"S = 0; H = 0;\\n\\n\";\r\n        content += this.tranlate;\r\n        content += \"\\nL0:\\n\";\r\n        content += \"\\nreturn;\\n\";\r\n        content += \"}\";\r\n        return content;\r\n    }\r\n\r\n    public static setTranslate(content: string) {\r\n        this.tranlate += content + \"\\n\";\r\n    }\r\n\r\n    /*public static setPrintString(content:string) {\r\n        this.metodostring += content + \"\\n\";\r\n    }*/\r\n\r\n    public static setConsultaXPATH(content:string) {\r\n        this.metodoConsultaXPATH += content + \"\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO comparar cadenas****************************\r\n    public static metodoCompararCadenas() {\r\n        this.compararCadenas3d += \"//Metodo Comparar cadenas\\t--------------\\n\\n\";\r\n        this.compararCadenas3d += \"void compararCadenas() {\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.t++;\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"!=t\"+(traduccion.t-1)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-5)+\" = t\"+(traduccion.t-5)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==t\"+(traduccion.t-2)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-2)+\":\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 1;\\n\";\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.compararCadenas3d += \"return;\\n\";\r\n        this.compararCadenas3d += \"}\\n\\n\";\r\n        //traduccion.t++;\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir nodo Texto**********\r\n    public static crearEtiquetaTexto() {\r\n        this.etiquetaTexto += \"//Metodo etiqueta texto\\t--------------\\n\\n\";\r\n        this.etiquetaTexto += \"void crearEtiquetaTexto() {\\n\";\r\n        //Obtiene posiciones\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir NODOTEXTO\r\n        this.etiquetaTexto += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimirt </\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)60);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)47);\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-5)+\" = S + 1;\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4) + \" = stack[(int)t\"+(traduccion.t-5)+\"];\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1) + \" = heap[(int)t\"+(traduccion.t-4)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t-1)+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4)+\" = t\"+(traduccion.t-4)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imrprimir >\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)62);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)10);\\n\";\r\n        this.etiquetaTexto += \"return;\\n\";\r\n        this.etiquetaTexto += \"}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta apertura*********************\r\n    public static crearEtiquetaApertura() {\r\n        this.etiquetaApertura += \"//Metodo Etiqueta apertura\\t--------------\\n\\n\";\r\n        this.etiquetaApertura += \"void crearEtiquetaApertura() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaApertura += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaApertura += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaApertura += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta cierre*********************\r\n    public static crearEtiquetaCierre() {\r\n        this.etiquetaCierre += \"//Metodo Etiqueta Cierre\\t--------------\\n\\n\";\r\n        this.etiquetaCierre += \"void crearEtiquetaCierre() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\"; \r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaCierre += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaCierre += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\";   \r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\";  \r\n        this.etiquetaCierre += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static crearAtributoEtiqueta() {\r\n        this.etiquetaAtributo += \"//Metodo Obtener Atributo\\t--------------\\n\";\r\n        this.etiquetaAtributo += \"void crearAtributoEtiqueta() {\\n\";\r\n        //Obetener posiciones----------\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo+= \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir espacio en blanco-----------\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)32);\\t\\t// \\' \\'\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        //this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\"= t\"+ (traduccion.t-3)+\" + 1;\\n\"\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir =\"\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)61);\\t\\t// =\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        //Obtener ID2\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-2)+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir \" y fin\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        this.etiquetaAtributo += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static metodoVerificarAtributo() {\r\n        this.verificarAtributo += \"//Metodo verificar atributo\\t--------------\\n\\n\";\r\n        this.verificarAtributo += \"void verificarAtributo() {\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";        \r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"if(t\"+(traduccion.t)+\"==64) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 1;\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.verificarAtributo += \"return;\\n\";\r\n        this.verificarAtributo += \"}\\n\\n\";\r\n    }\r\n\r\n    public static crearPrintString() {\r\n        traduccion.printString += \"//Metodo printString\\t--------------\\n\\n\";\r\n        traduccion.printString += \"void printString() {\\n\";\r\n        traduccion.t++;\r\n        traduccion.printString += \"t\"+traduccion.t+\" = S+1;\\n\";\r\n        traduccion.t++;\r\n        traduccion.printString += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        traduccion.t++;\r\n        traduccion.printString += \"L\"+traduccion.etiquetaCounter+\":\\n\"; //L0\r\n        traduccion.printString += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        traduccion.printString += \"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\\n\"; //L1\r\n        traduccion.printString += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        traduccion.printString += \"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\\n\";\r\n        traduccion.printString += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        traduccion.printString += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.printString += \"return;\\n\";\r\n        traduccion.printString += \"}\\n\\n\";\r\n    }\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements ExpressionXquery{\r\n    \r\n    constructor (\r\n    public line : Number, \r\n    public column : Number, \r\n    public valor : any, \r\n    public tipoPrimitivo? : tipoPrimitivo) {}\r\n    \r\n    \r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo) : Retorno {\r\n        \r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING };\r\n        }else if (this.valor === \"position\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.pos, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.pos, type: tipoPrimitivo.NUMBER}\r\n            }\r\n\r\n        }else if (this.valor === \"last\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.last, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.last, type: tipoPrimitivo.NUMBER}\r\n            }\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    ATRI,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public valor: any,\r\n        public tipoPrimitivo?: tipoPrimitivo) { }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo numero\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(this.valor) + \";\");\r\n            //###############################################################################################################\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n        } else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING, SP: -1 };\r\n        } else if (this.valor === \"position\") {\r\n\r\n            if (simboloPadre !== undefined) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo posicion\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(simboloPadre.pos) + \";\");\r\n                //###############################################################################################################\r\n                return { value: simboloPadre.pos, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            } else {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo posicion\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(ent.pos) + \";\");\r\n                //###############################################################################################################\r\n                return { value: ent.pos, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            }\r\n\r\n        } else if (this.valor === \"last\") {\r\n\r\n            if (simboloPadre !== undefined) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo last\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(simboloPadre.last) + \";\");\r\n                //###############################################################################################################\r\n                return { value: simboloPadre.last, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            } else {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo last\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(ent.last) + \";\");\r\n                //###############################################################################################################\r\n                return { value: ent.last, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\n\r\nexport class ManejadorXquery {\r\n\r\n    static unirSalida (salida : string[]) : string{\r\n\r\n        let salidaTexto : string = \"\"\r\n        for (const element of salida) {\r\n            salidaTexto += element\r\n        }\r\n        return salidaTexto;\r\n    }\r\n\r\n    static buildXquery (listNodes: Retorno[]) : string{\r\n\r\n        var content : string [] = []\r\n        for (const element of listNodes) {\r\n            \r\n            if (element.type === tipoPrimitivo.NODO){\r\n                ManejadorXquery.concatenar(content, this.construirNodos(element.value, \"\"));\r\n            }else {\r\n                content.push(element.value+ \"\\n\");\r\n            }\r\n        }\r\n        return this.unirSalida(content);\r\n    }\r\n\r\n    static construirNodos(entPadre: Entorno, tab : string): string [] {\r\n\r\n        var atributos = \"\";\r\n        var content : string[] = [];\r\n\r\n        for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n            atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n        }\r\n\r\n        //construyo Nodos\r\n        if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n            content.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n        }\r\n        else if(entPadre.listaEntornos.length > 0){\r\n\r\n            content.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                ManejadorXquery.concatenar(content, this.construirNodos(entActual, tab + \"   \"));              \r\n            }\r\n            content.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n        \r\n        } else{\r\n            content.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n        }\r\n        return content;\r\n    }\r\n\r\n    static concatenar (content : any[], resp: any[]) {\r\n\r\n        for (const element of resp) {\r\n            content.push(element);\r\n        }\r\n    }\r\n\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\n\r\nexport class EntornoXQuery {\r\n\r\n    private variables: Map<string, Retorno>;\r\n    //public funciones: Map<string, InsFuncion>;\r\n\r\n    constructor (public anterior: EntornoXQuery | null){\r\n        this.variables = new Map();\r\n    }\r\n\r\n    public guaradarVar(id: string, valor: Retorno){\r\n        this.variables.set(id, valor);\r\n    }\r\n\r\n    public existeVar (id : string): boolean{\r\n        return this.variables.has(id);\r\n    }\r\n\r\n    public actualizarVar(id : string, nvoValor : Retorno){\r\n\r\n        for (let entry of Array.from(this.variables.entries())) {\r\n            let key = entry[0];\r\n            if (key === id) {\r\n                entry[1] = nvoValor;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getVar(id : string) : Retorno | null{\r\n\r\n        for (let entry of Array.from(this.variables.entries())) {\r\n            let key = entry[0];\r\n            if (key === id) {\r\n                return entry[1];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","export class Asignacion{\r\n    indice:string;\r\n    operador1:string;\r\n    signo:string;\r\n    operador2:string;\r\n\r\n    constructor(indice:string,operador1:string,signo:string,operador2:string){\r\n        this.indice = indice;\r\n        this.operador1 = operador1;\r\n        this.signo = signo;\r\n        this.operador2 = operador2;\r\n    }\r\n\r\n}","export class Condicional{\r\n    operando1:string;\r\n    comparacion:string;\r\n    operando2:string;\r\n\r\n    constructor(operando1:string,comparacion:string,operando2:string){\r\n        this.operando1 = operando1;\r\n        this.comparacion = comparacion;\r\n        this.operando2 = operando2;\r\n    }\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\nthis.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],true);\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n            this.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],true);\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 11:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 12:\r\n\r\n            this.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 13:\r\n\r\n            listaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\n        \r\nbreak;\r\ncase 15: case 17:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column,true);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last : number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n        this.asignarPosEnts();\r\n        this.asignarPosSimb();\r\n    }\r\n    \r\n    private asignarPosEnts(){\r\n        for (let index = 0; index < this.listaEntornos.length; index++) {\r\n            this.listaEntornos[index].last = this.listaEntornos.length\r\n            this.listaEntornos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    private asignarPosSimb(){\r\n        for (let index = 0; index < this.listaSimbolos.length; index++) {\r\n            this.listaSimbolos[index].last = this.listaSimbolos.length;\r\n            this.listaSimbolos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last: number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n    }\r\n\r\n\r\n\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReport = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\r\ndefaultActions: {24:[2,14],44:[2,13]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReport;\r\nexports.Parser = xmlReport.Parser;\r\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[5,6],$V3=[1,20],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,23],$Vf=[1,24],$Vg=[5,6,8,10,13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vh=[1,27],$Vi=[5,6,8,10,13,18,27,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vj=[1,48],$Vk=[1,41],$Vl=[1,42],$Vm=[1,43],$Vn=[1,44],$Vo=[1,45],$Vp=[1,46],$Vq=[1,62],$Vr=[1,60],$Vs=[1,61],$Vt=[1,63],$Vu=[1,64],$Vv=[1,65],$Vw=[1,66],$Vx=[1,67],$Vy=[1,68],$Vz=[1,69],$VA=[1,70],$VB=[1,71],$VC=[1,72],$VD=[13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$VE=[18,29,30,31,34,35,36,37,38,39,40,41],$VF=[13,18,29,30,31,32,34,35,36,37,38,39,40,41],$VG=[18,29,34,35,40,41],$VH=[18,29,34,35,36,37,38,39,40,41];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"MULTIPATH\":4,\"EOF\":5,\"|\":6,\"PATH\":7,\"/\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"..\":15,\"text\":16,\"(\":17,\")\":18,\"node\":19,\"child\":20,\"::\":21,\"descendant\":22,\"PREDICADOS\":23,\"@\":24,\"attribute\":25,\"PREDI\":26,\"[\":27,\"EXP\":28,\"]\":29,\"+\":30,\"-\":31,\"div\":32,\"mod\":33,\"=\":34,\"!=\":35,\"<\":36,\"<=\":37,\">\":38,\">=\":39,\"and\":40,\"or\":41,\"VALOR\":42,\"cadena\":43,\"scadena\":44,\"number\":45,\"position\":46,\"last\":47,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"|\",8:\"/\",10:\"//\",12:\"id\",13:\"*\",14:\".\",15:\"..\",16:\"text\",17:\"(\",18:\")\",19:\"node\",20:\"child\",21:\"::\",22:\"descendant\",24:\"@\",25:\"attribute\",27:\"[\",29:\"]\",30:\"+\",31:\"-\",32:\"div\",33:\"mod\",34:\"=\",35:\"!=\",36:\"<\",37:\"<=\",38:\">\",39:\">=\",40:\"and\",41:\"or\",43:\"cadena\",44:\"scadena\",45:\"number\",46:\"position\",47:\"last\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,1],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,2],[11,4],[11,4],[11,4],[11,4],[11,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,4],[11,4],[11,1],[23,2],[23,1],[26,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[42,3],[42,1],[42,1],[42,1],[42,3],[42,3],[42,1],[42,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n                                                    var listaErroresTemp = listaErrores;\r\n                                                    listaErrores = [];\r\n                                                    return {xpath: $$[$0-1],listaErrores:listaErroresTemp}\r\n                                                    \r\nbreak;\r\ncase 2:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 3: case 8: case 35:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 4:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 5:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 6:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 7:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 9:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 10:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 20:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 24:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 25:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 33:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 34:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 36: case 51:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 37:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 38:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 39:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 41:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 42:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 43:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 44:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 45:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 46:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 47:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 48:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 49:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 50:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 52: case 53:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 54:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 55: case 56:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 57:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                 this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 58:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                 this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:$V0,10:$V1},{1:[3]},{5:[1,6],6:[1,7]},o($V2,[2,3]),{2:$V3,9:8,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,9:21,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{1:[2,1]},{7:22,8:$V0,10:$V1},o($V2,[2,4],{8:$Ve,10:$Vf}),o($Vg,[2,8]),o($Vg,[2,9],{23:25,26:26,27:$Vh}),o($Vg,[2,10],{26:26,23:28,27:$Vh}),o($Vg,[2,11]),o($Vg,[2,12]),{17:[1,29]},{17:[1,30]},{21:[1,31]},{21:[1,32]},{12:[1,33],13:[1,34]},{21:[1,35]},o($Vg,[2,33]),o($V2,[2,5],{8:$Ve,10:$Vf}),o($V2,[2,2]),{2:$V3,11:36,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,11:37,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,19],{26:38,27:$Vh}),o($Vi,[2,35]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:39,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($Vg,[2,20],{26:38,27:$Vh}),{18:[1,49]},{18:[1,50]},{12:[1,51],13:[1,52]},{12:[1,53],13:[1,54]},o($Vg,[2,25],{26:26,23:55,27:$Vh}),o($Vg,[2,26],{26:26,23:56,27:$Vh}),{12:[1,57],13:[1,58]},o($Vg,[2,6]),o($Vg,[2,7]),o($Vi,[2,34]),{13:$Vq,29:[1,59],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},o($VD,[2,50]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:73,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($VD,[2,52]),o($VD,[2,53]),o($VD,[2,54]),{17:[1,74]},{17:[1,75]},o($VD,[2,57],{8:$Ve,10:$Vf}),{2:$V3,9:76,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,13]),o($Vg,[2,14]),o($Vg,[2,15],{26:26,23:77,27:$Vh}),o($Vg,[2,16],{26:26,23:78,27:$Vh}),o($Vg,[2,17],{26:26,23:79,27:$Vh}),o($Vg,[2,18],{26:26,23:80,27:$Vh}),o($Vg,[2,29],{26:38,27:$Vh}),o($Vg,[2,30],{26:38,27:$Vh}),o($Vg,[2,27],{26:26,23:81,27:$Vh}),o($Vg,[2,28],{26:26,23:82,27:$Vh}),o($Vi,[2,36]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:83,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:84,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:85,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:86,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:87,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:88,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:89,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:90,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:91,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:92,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:93,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:94,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:95,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{13:$Vq,18:[1,96],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},{18:[1,97]},{18:[1,98]},o($VD,[2,58],{8:$Ve,10:$Vf}),o($Vg,[2,21],{26:38,27:$Vh}),o($Vg,[2,22],{26:38,27:$Vh}),o($Vg,[2,23],{26:38,27:$Vh}),o($Vg,[2,24],{26:38,27:$Vh}),o($Vg,[2,31],{26:38,27:$Vh}),o($Vg,[2,32],{26:38,27:$Vh}),o($VE,[2,37],{13:$Vq,32:$Vt,33:$Vu}),o($VE,[2,38],{13:$Vq,32:$Vt,33:$Vu}),o($VF,[2,39],{33:$Vu}),o($VF,[2,40],{33:$Vu}),o($VD,[2,41]),o($VG,[2,42],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VG,[2,43],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VH,[2,44],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,45],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,46],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,47],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o([18,29,40,41],[2,48],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o([18,29,41],[2,49],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB}),o($VD,[2,51]),o($VD,[2,55]),o($VD,[2,56])],\r\ndefaultActions: {6:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 43;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 44;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 8\r\nbreak;\r\ncase 18:return 15\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 24\r\nbreak;\r\ncase 21:return 27\r\nbreak;\r\ncase 22:return 29\r\nbreak;\r\ncase 23:return 17\r\nbreak;\r\ncase 24:return 18\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 6\r\nbreak;\r\ncase 27:return 30\r\nbreak;\r\ncase 28:return 31\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 32\r\nbreak;\r\ncase 31:return 34\r\nbreak;\r\ncase 32:return 35\r\nbreak;\r\ncase 33:return 37\r\nbreak;\r\ncase 34:return 39\r\nbreak;\r\ncase 35:return 36\r\nbreak;\r\ncase 36:return 38\r\nbreak;\r\ncase 37:return 41\r\nbreak;\r\ncase 38:return 40\r\nbreak;\r\ncase 39:return 33\r\nbreak;\r\ncase 40:return 21\r\nbreak;\r\ncase 41:return 20\r\nbreak;\r\ncase 42:return 25\r\nbreak;\r\ncase 43:return 22\r\nbreak;\r\ncase 44:return 16\r\nbreak;\r\ncase 45:return 47 \r\nbreak;\r\ncase 46:return 46\r\nbreak;\r\ncase 47:return 45\r\nbreak;\r\ncase 48:return 12\r\nbreak;\r\ncase 49:return 5\r\nbreak;\r\ncase 50:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:[\" \"]+)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparser;\r\nexports.Parser = XPATHparser.Parser;\r\nexports.parse = function () { return XPATHparser.parse.apply(XPATHparser, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    SP_id:number;\r\n    SP_tipoAcceso:number;\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[],\r\n    public tipoQuery ?: string ){\r\n        this.SP_id = -1;\r\n        this.SP_tipoAcceso = -1\r\n    } \r\n\r\n    public setipoQuery(tipo: string){\r\n        this.tipoQuery = tipo;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public hijoIzq: Expression,\r\n        public hijoDer: Expression,\r\n        public tipoOperacion: operacionAritmetica,\r\n        public sym: string) { }\r\n\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP || valorDer.type === tipoPrimitivo.RESP) {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorDer.type + \", tipo valor2 \" + valorDer.type + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n        } else if ((valorIzq.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.STRING) && this.tipoOperacion === operacionAritmetica.SUMA) {\r\n            return { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.STRING, SP: -1 };\r\n        } else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n\r\n            if (this.tipoOperacion === operacionAritmetica.SUMA) {\r\n\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//SUMA ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" + t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n\r\n                return { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n            } else if (this.tipoOperacion === operacionAritmetica.RESTA) {\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//RESTA ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" - t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n\r\n                return { value: (valorIzq.value - valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n            } else if (this.tipoOperacion === operacionAritmetica.MULT) {\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//MULTIPLICACION ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" * t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n                return { value: (valorIzq.value * valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };;\r\n            } else if (this.tipoOperacion === operacionAritmetica.DIV) {\r\n\r\n                if (Number(valorDer.value) >= 0) {\r\n\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//DIVISION ARITMETICA\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" / t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n\r\n\r\n                    return { value: (valorIzq.value / valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n                } else {\r\n                    throw new Error(\"Error Semantico: El valor \" + valorDer + \", debe ser mayor o igual que cero,  Linea: \" + this.line + \"Column: \" + this.column);\r\n                }\r\n\r\n            } else if (this.tipoOperacion === operacionAritmetica.MOD) {\r\n                return { value: (valorIzq.value % valorDer.value), type: tipoPrimitivo.NUMBER, SP: -1 };\r\n            } else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorDer.type + \", tipo valor2 \" + valorDer.type + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public hijoIzq: Expression,\r\n        public hijoDer: Expression,\r\n        public tipoOperacion: operacionLogica,\r\n        public sym: string) { }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.BOOL) {\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//INGRESANDO VALOR LOGICO\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 0;\");\r\n                //###############################################################################################################\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//INGRESANDO VALOR LOGICO\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                //###############################################################################################################\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n            }\r\n\r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL) {\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//OPREACION LOGICA AND\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorIzq.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorDer.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" && t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n                } else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//OPREACION LOGICA AND\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorIzq.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorDer.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" && t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \" + this.line + \"Column: \" + this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \" + valorDer.type + \"Linea: \" + this.line + \"Column: \" + this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorIzq.type + \"Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso } from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n//import { traducirXmlRecursive } from '../../Traduccion/xml3d';\r\n\r\nexport class Path implements Expression {\r\n\r\n    salida: any[];\r\n    nuevaL_Accesos: Acceso[];\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public L_Accesos: Acceso[],\r\n        public tipoPath?: string\r\n    ) {\r\n        this.salida = [];\r\n        this.nuevaL_Accesos = [];\r\n    }\r\n\r\n    private validarAntecesores(): Acceso[] {\r\n\r\n        let newL_Acc: Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n\r\n            if (acceso.tipoAcceso === 'padre') {\r\n\r\n                if (newL_Acc.length > 0) {\r\n                    newL_Acc.pop()\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \" + acceso.line + \"column: \" + acceso.column);\r\n                }\r\n            } else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    private unirSalida(): string {\r\n\r\n        let salida: string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno { //      /biblio\r\n        this.insertarConsulta();\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\") {\r\n\r\n            if (this.L_Accesos.length > 0 && ent.listaEntornos.length > 0) {\r\n\r\n                if (ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\") {//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n                    //TRADUCCION3D######################################################################################\r\n                    if (traduccion.compararCadenas3d === \"\") {\r\n                        traduccion.metodoCompararCadenas();\r\n                    }\r\n                    traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + ent.SP_ID + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[0].SP_id + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"compararCadenas();\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                    traduccion.t++;\r\n                    //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                    traduccion.setTranslate(\"if(t\" + (traduccion.t - 1) + \"!=1) goto L0;\");\r\n                    traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                    //#####################################################################################################\r\n\r\n                    if (this.validarPredicadosRaiz(ent, 0)) {\r\n\r\n                        if (this.L_Accesos.length > 1) { //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(ent, 1);\r\n                        } else {\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                } else if (this.L_Accesos[0].tipoQuery === 'absoluta') {\r\n                    this.getQuery(ent, 0);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            this.salida = [];\r\n            this.getQuery(ent, 0, simboloPadre);\r\n            return { value: this.salida, type: tipoPrimitivo.RESP , SP: -1};\r\n        }\r\n        return { value: this.unirSalida(), type: tipoPrimitivo.STRING , SP: -1};\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number, simboloPadre?: Simbolo) {\r\n\r\n        if (simboloPadre !== undefined) { // si la consulta es una sub consulta y el padre es un atributo --> /id[subconsulta]\r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" || this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n\r\n                if (this.L_Accesos.length < posActAcceso + 1) {\r\n                    this.getQuery(entPadre, posActAcceso + 1, simboloPadre);\r\n                } else {\r\n\r\n                    if (this.tipoPath === \"sub\") {\r\n                        this.salida.push({ value: simboloPadre.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                    } else {\r\n\r\n                        if (this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n                            this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\n\");\r\n                        } else {\r\n                            this.salida.push(simboloPadre.identificador + \" = \\\"\" + simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }\r\n\r\n        } else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\") {\r\n\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.verificarAtributo === \"\") {\r\n                    traduccion.metodoVerificarAtributo();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Validando que sea atributo\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[posActAcceso].SP_id + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"verificarAtributo();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n                //#######################################################################################################\r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if (atri != null) {\r\n\r\n                    if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                        if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                        } else {\r\n\r\n                            if (this.tipoPath === \"sub\") {\r\n                                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                            } else {\r\n                                if (traduccion.etiquetaAtributo === \"\") {\r\n                                    traduccion.crearAtributoEtiqueta();\r\n                                }\r\n                                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n                                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    for (const entChiild of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entChiild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\") {\r\n\r\n                if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    this.construirTodosAtributos(entPadre);\r\n\r\n                } else {\r\n\r\n                    if (entPadre.listaSimbolos.length > 0) {\r\n\r\n                        for (const atri of entPadre.listaSimbolos) {\r\n\r\n                            if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                                } else {\r\n\r\n                                    if (this.tipoPath === \"sub\") {\r\n                                        this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                                    } else {\r\n                                        this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === 'texto') {\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'relativa') {\r\n\r\n                        if (entPadre.texto !== '') {\r\n                            //TRADUCCION3D##########################################################################################\r\n                            if (traduccion.printString === \"\") {\r\n                                traduccion.crearPrintString();\r\n                            }\r\n                            traduccion.setTranslate(\"\\n\\n//Imprimiendo solo contenido de nodo\\t--------------\\n\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"printString();\");\r\n                            traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                            //#######################################################################################################\r\n                            this.salida.push(entPadre.texto + '\\n');\r\n                        }\r\n\r\n                    } else {\r\n                        this.construirTodosTextos(entPadre);\r\n                    }\r\n\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto del nodo ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\") {\r\n\r\n                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entPadre, posActAcceso + 1);\r\n                } else {\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                            if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entActual, posActAcceso + 1);\r\n                            } else {\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (entActual.identificador === this.L_Accesos[posActAcceso].id) {//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n\r\n                            //TRADUCCION3D######################################################################################\r\n                            if (traduccion.compararCadenas3d === \"\") {\r\n                                traduccion.metodoCompararCadenas();\r\n                            }\r\n                            traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entActual.SP_ID + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[posActAcceso].SP_id + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"compararCadenas();\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                            traduccion.t++;\r\n                            //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                            traduccion.setTranslate(\"if(t\" + (traduccion.t - 1) + \"!=1) goto L0;\");\r\n                            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                            //####################################################################################################\r\n\r\n                            if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entActual, posActAcceso + 1);\r\n                                } else {\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        } else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta') {\r\n                            this.getQuery(entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \" + this.L_Accesos[posActAcceso].tipoAcceso + \" del acceso: \" + this.L_Accesos[posActAcceso].tipoAcceso + \" no se reconoce como valido, \" +\r\n                    \"linea: \" + this.L_Accesos[posActAcceso].line + \" comlumna: \" + this.L_Accesos[posActAcceso].column);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre: Entorno) {\r\n\r\n        if (entPadre.texto !== '') {\r\n            //TRADUCCION3D##########################################################################################\r\n            if (traduccion.printString === \"\") {\r\n                traduccion.crearPrintString();\r\n            }\r\n            traduccion.setTranslate(\"\\n\\n//Imprimiendo solo contenido de nodo\\t--------------\\n\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"printString();\");\r\n            traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n            //#######################################################################################################\r\n            this.salida.push(entPadre.texto + '\\n');\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos(entPadre: Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos) {\r\n\r\n            if (this.tipoPath === \"sub\") {\r\n                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n            } else {\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaAtributo === \"\") {\r\n                    traduccion.crearAtributoEtiqueta();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //######################################################################################################\r\n                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n            }\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre: Entorno, tab: string) {\r\n\r\n        if (this.tipoPath === \"sub\") {\r\n\r\n            /*if (entPadre.listaEntornos.length > 0 || (entPadre.listaEntornos.length === 0 && entPadre.texto === '')) {\r\n                this.salida.push({ value: entPadre.identificador, type: tipoPrimitivo.NODO })\r\n            } else {\r\n                this.salida.push({ value: entPadre.texto, type: tipoPrimitivo.STRING });\r\n            }*/\r\n            this.salida.push({ value: entPadre, type: tipoPrimitivo.NODO })\r\n\r\n        } else {\r\n\r\n            if (traduccion.etiquetaApertura === \"\") {\r\n                traduccion.crearEtiquetaApertura();\r\n            }\r\n            traduccion.setTranslate(\"\\n//Inicia Etiqueta apertura\\t--------------\\n\\n\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n            traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"crearEtiquetaApertura();\");\r\n            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos += atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"  \";\r\n                if (traduccion.etiquetaAtributo === \"\") {\r\n                    traduccion.crearAtributoEtiqueta();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n            }\r\n\r\n            //construyo Nodos\r\n            if (entPadre.listaEntornos.length === 0 && entPadre.texto === '') {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if (entPadre.listaEntornos.length > 0) {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab + \"</\" + entPadre.identificador + \">\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaCierre === \"\") {\r\n                    traduccion.crearEtiquetaCierre();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo etiqueta cierre\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearEtiquetaCierre();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //#######################################################################################################\r\n            } else {\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaTexto === \"\") {\r\n                    traduccion.crearEtiquetaTexto();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo nodo Texto\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                //traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearEtiquetaTexto();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\" + entPadre.texto + \"</\" + entPadre.identificador + \">\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private validarPredicadosAtri(entPadre: Entorno, simboloPadre: Simbolo, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value !== 1) {\r\n                    return false;\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n\r\n    public insertarConsulta() {\r\n        traduccion.setTranslate(\"//Ingresando consulta Xpath\\t--------------\");\r\n\r\n        for (const key of this.L_Accesos) {\r\n            traduccion.stackCounter++;\r\n            key.SP_id = traduccion.stackCounter;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n            traduccion.setTranslate(\"\\n//Ingresando acceso\\t--------------\");\r\n            if (key.tipoAcceso === \"atributo\") {\r\n                traduccion.setTranslate(\"heap[(int)H] = 64;\\t\\t//Caracter @\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n            for (let i = 0; i < key.id.length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + key.id.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + key.id[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === key.id.length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n\r\n\r\n            traduccion.setTranslate(\"\\n//Ingresando tipo de acceso\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            key.SP_tipoAcceso = traduccion.stackCounter;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n            for (let i = 0; i < key.tipoAcceso.length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + key.tipoAcceso.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + key.tipoAcceso[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === key.tipoAcceso.length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq.value.identificador, valDer.value.identificador)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                        }\r\n                    }else if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                        if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valIzq.value.texto, valDer.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                            }\r\n                        }\r\n                    }\r\n                    else if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valDer.value.texto, valIzq.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (this.validar(valIzq.value, valDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                    if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valIzq.value.texto, valorDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                        }\r\n                    }\r\n                }else {\r\n                   \r\n                    if (this.validar(valIzq.value, valorDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                    if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valDer.value.texto, valorIzq.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                        }\r\n                    }\r\n                }else {\r\n                    \r\n                    if (this.validar(valorIzq.value, valDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1};\r\n            \r\n        } else {\r\n            return { value: this.validar(valorIzq.value, valorDer.value), type: tipoPrimitivo.BOOL, SP: -1}\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : String, valorDer: String): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq == valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq != valorDer;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq < valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq <= valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq > valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq >= valorDer;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xQueryGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,15],$V3=[1,16],$V4=[1,17],$V5=[1,13],$V6=[1,14],$V7=[5,6],$V8=[5,6,60],$V9=[5,6,36],$Va=[1,33],$Vb=[1,23],$Vc=[1,24],$Vd=[1,31],$Ve=[1,25],$Vf=[1,26],$Vg=[1,27],$Vh=[1,28],$Vi=[1,29],$Vj=[1,30],$Vk=[1,32],$Vl=[1,44],$Vm=[1,45],$Vn=[1,48],$Vo=[1,43],$Vp=[1,46],$Vq=[5,6,27,29,33,36,60],$Vr=[1,51],$Vs=[1,52],$Vt=[5,6,27,29,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,55,57,60,75],$Vu=[1,55],$Vv=[1,68],$Vw=[1,69],$Vx=[1,70],$Vy=[1,71],$Vz=[1,72],$VA=[1,73],$VB=[1,74],$VC=[1,75],$VD=[1,76],$VE=[1,77],$VF=[1,78],$VG=[1,79],$VH=[1,80],$VI=[5,6,29,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53],$VJ=[5,6,27,29,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,55,57,60,73,75],$VK=[1,89],$VL=[1,90],$VM=[1,88],$VN=[1,91],$VO=[1,95],$VP=[1,92],$VQ=[1,93],$VR=[6,36],$VS=[5,6,21,22,27,29,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53],$VT=[1,128],$VU=[1,129],$VV=[1,130],$VW=[1,131],$VX=[1,132],$VY=[1,133],$VZ=[1,134],$V_=[1,135],$V$=[1,136],$V01=[1,137],$V11=[1,138],$V21=[1,139],$V31=[1,140],$V41=[38,39,40,41,42,43,44,45,46,47,48,49,50,53,75],$V51=[5,6,29,33,36,38,39,43,44,45,46,47,48,49,50,53],$V61=[5,6,29,33,36,38,39,40,41,43,44,45,46,47,48,49,50,53],$V71=[5,6,29,33,36,43,44,49,50,53],$V81=[5,6,29,33,36,43,44,45,46,47,48,49,50,53],$V91=[1,160],$Va1=[1,161],$Vb1=[1,162],$Vc1=[1,184],$Vd1=[1,183],$Ve1=[27,29,33],$Vf1=[1,186],$Vg1=[1,187],$Vh1=[5,6,21,22,27,29,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,55,57],$Vi1=[38,39,43,44,45,46,47,48,49,50,53,75],$Vj1=[38,39,40,41,43,44,45,46,47,48,49,50,53,75],$Vk1=[43,44,49,50,53,75],$Vl1=[43,44,45,46,47,48,49,50,53,75];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"LQUERYS\":4,\"EOF\":5,\",\":6,\"QUERY\":7,\"cadena\":8,\"scadena\":9,\"MULTIPATH\":10,\"XQUERY\":11,\"FOR\":12,\"LET\":13,\"RETURN\":14,\"for\":15,\"$\":16,\"id\":17,\"in\":18,\"TIPOPATH\":19,\"ORDERBY\":20,\"ascending\":21,\"descending\":22,\"WHERE\":23,\"at\":24,\"XQUERYPATH\":25,\"PATH\":26,\"where\":27,\"EXPXQUERY\":28,\"order\":29,\"by\":30,\"let\":31,\":=\":32,\"return\":33,\"{\":34,\"LEXPSRET\":35,\"}\":36,\"EXPRET\":37,\"+\":38,\"-\":39,\"*\":40,\"div\":41,\"mod\":42,\"=\":43,\"!=\":44,\"<\":45,\"<=\":46,\">\":47,\">=\":48,\"and\":49,\"or\":50,\"VALOREXPXQUERY\":51,\"(\":52,\")\":53,\"number\":54,\"/\":55,\"LACCESOSXQUERY\":56,\"//\":57,\"ACCESOXQUERY\":58,\"@\":59,\"|\":60,\"LACCESOS\":61,\"ACCESO\":62,\".\":63,\"..\":64,\"text\":65,\"node\":66,\"child\":67,\"::\":68,\"descendant\":69,\"PREDICADOS\":70,\"attribute\":71,\"PREDI\":72,\"[\":73,\"EXP\":74,\"]\":75,\"VALOR\":76,\"position\":77,\"last\":78,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\",\",8:\"cadena\",9:\"scadena\",15:\"for\",16:\"$\",17:\"id\",18:\"in\",21:\"ascending\",22:\"descending\",24:\"at\",27:\"where\",29:\"order\",30:\"by\",31:\"let\",32:\":=\",33:\"return\",34:\"{\",36:\"}\",38:\"+\",39:\"-\",40:\"*\",41:\"div\",42:\"mod\",43:\"=\",44:\"!=\",45:\"<\",46:\"<=\",47:\">\",48:\">=\",49:\"and\",50:\"or\",52:\"(\",53:\")\",54:\"number\",55:\"/\",57:\"//\",59:\"@\",60:\"|\",63:\".\",64:\"..\",65:\"text\",66:\"node\",67:\"child\",68:\"::\",69:\"descendant\",71:\"attribute\",73:\"[\",75:\"]\",77:\"position\",78:\"last\"},\r\nproductions_: [0,[3,2],[3,1],[4,3],[4,1],[7,1],[7,1],[7,1],[7,1],[11,1],[11,1],[11,1],[12,6],[12,7],[12,8],[12,8],[12,7],[12,8],[12,9],[12,9],[12,9],[12,10],[12,11],[12,11],[12,10],[12,11],[12,12],[12,12],[19,1],[19,1],[23,2],[20,3],[13,5],[13,5],[14,4],[14,2],[35,3],[35,1],[37,1],[37,1],[37,1],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[51,3],[51,1],[51,1],[51,1],[51,1],[25,4],[25,4],[25,2],[56,3],[56,3],[56,1],[58,1],[58,1],[58,2],[58,2],[10,3],[10,1],[26,2],[26,2],[61,3],[61,3],[61,1],[62,1],[62,1],[62,1],[62,1],[62,3],[62,3],[62,3],[62,3],[62,3],[62,3],[62,2],[62,2],[62,4],[62,4],[62,4],[62,4],[62,2],[62,2],[62,3],[62,3],[62,3],[62,3],[62,4],[62,4],[62,1],[70,2],[70,1],[72,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,3],[74,1],[76,3],[76,1],[76,1],[76,1],[76,3],[76,3],[76,1],[76,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\nreturn $$[$0-1];\r\nbreak;\r\ncase 2:\r\nreturn $$[$0];\r\nbreak;\r\ncase 3: case 36: case 70:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 4: case 37: case 65: case 71: case 76: case 103:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 5: case 6: case 56: case 57: case 120: case 121:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 7:\r\nthis.$ = new MultiXpaths(_$[$0].first_line, _$[$0].first_column, $$[$0]);\r\nbreak;\r\ncase 8: case 9: case 10: case 11: case 28: case 29: case 30: case 31: case 38: case 39: case 40: case 54: case 118:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 12:\r\nthis.$ = new For(_$[$0-5].first_line, _$[$0-5].first_column, $$[$0-3], \"\", $$[$0-1], null, null, \"\", $$[$0]);\r\nbreak;\r\ncase 13:\r\nthis.$ = new For(_$[$0-6].first_line, _$[$0-6].first_column, $$[$0-4], \"\", $$[$0-2], null, $$[$0-1], \"\", $$[$0]);\r\nbreak;\r\ncase 14: case 15:\r\nthis.$ = new For(_$[$0-7].first_line, _$[$0-7].first_column, $$[$0-5], \"\", $$[$0-3], null, $$[$0-2], $$[$0-1], $$[$0]);\r\nbreak;\r\ncase 16:\r\nthis.$ = new For(_$[$0-6].first_line, _$[$0-6].first_column, $$[$0-4], \"\", $$[$0-2], $$[$0-1], null, \"\", $$[$0]);\r\nbreak;\r\ncase 17:\r\nthis.$ = new For(_$[$0-7].first_line, _$[$0-7].first_column, $$[$0-5], \"\", $$[$0-3], $$[$0-2], $$[$0-1], \"\", $$[$0]);\r\nbreak;\r\ncase 18: case 19:\r\nthis.$ = new For(_$[$0-8].first_line, _$[$0-8].first_column, $$[$0-6], \"\", $$[$0-4], $$[$0-3], $$[$0-2], $$[$0-1], $$[$0]);\r\nbreak;\r\ncase 20:\r\nthis.$ = new For(_$[$0-8].first_line, _$[$0-8].first_column, $$[$0-6], $$[$0-3], $$[$0-1], null, null, \"\", $$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new For(_$[$0-9].first_line, _$[$0-9].first_column, $$[$0-7], $$[$0-4], $$[$0-2], null, $$[$0-1], \"\", $$[$0]);\r\nbreak;\r\ncase 22: case 23:\r\nthis.$ = new For(_$[$0-10].first_line, _$[$0-10].first_column, $$[$0-8], $$[$0-5], $$[$0-3], null, $$[$0-2], $$[$0-1], $$[$0]);\r\nbreak;\r\ncase 24:\r\nthis.$ = new For(_$[$0-9].first_line, _$[$0-9].first_column, $$[$0-7], $$[$0-4], $$[$0-2], $$[$0-1], null, \"\", $$[$0]);\r\nbreak;\r\ncase 25:\r\nthis.$ = new For(_$[$0-10].first_line, _$[$0-10].first_column, $$[$0-8], $$[$0-5], $$[$0-3], $$[$0-2], $$[$0-1], \"\", $$[$0]);\r\nbreak;\r\ncase 26: case 27:\r\nthis.$ = new For(_$[$0-11].first_line, _$[$0-11].first_column, $$[$0-9], $$[$0-6], $$[$0-4], $$[$0-3], $$[$0-2], $$[$0-1], $$[$0]);\r\nbreak;\r\ncase 32: case 33:\r\nthis.$ = new Let(_$[$0-4].first_line, _$[$0-4].first_column, $$[$0-2], $$[$0]);\r\nbreak;\r\ncase 34:\r\nthis.$ = new Return (_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1]);\r\nbreak;\r\ncase 35:\r\nthis.$ = new Return (_$[$0-1].first_line, _$[$0-1].first_column, [$$[$0]]);\r\nbreak;\r\ncase 41: case 105:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 42: case 106:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 43: case 107:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 44: case 108:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 45: case 109:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 46: case 110:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 47: case 111:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 48: case 112:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 49: case 113:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 50: case 114:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 51: case 115:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 52: case 116:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 53: case 117:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 55: case 104: case 119:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 58: case 122:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 59:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 60:\r\n$$[$0][0].tipoQuery = 'relativa';\r\n                                                             this.$ = new XqueryPath(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], new Path(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'sub'));\r\nbreak;\r\ncase 61:\r\n$$[$0][0].tipoQuery = 'absoluta';\r\n                                                             this.$ = new XqueryPath(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], new Path(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'sub'));\r\nbreak;\r\ncase 62:\r\nthis.$ = new XqueryPath(_$[$0].first_line, _$[$0].first_column, $$[$0], new Path(_$[$0].first_line, _$[$0].first_column, [], 'sub'));\r\nbreak;\r\ncase 63: case 64:\r\n$$[$0].tipoQuery = 'relativa'; $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 66: case 77:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 67: case 78:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 68: case 93:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 69: case 94:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 72:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 73:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 74:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 75:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 79:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 80:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 81:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 82:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 83:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 84:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 85:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 86:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 87:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 88:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 89:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 90:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 91:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 92:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 95:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 96:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 97:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 98:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 99:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 100:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 101:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 102:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 123: case 124:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 125:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 126:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,5:[1,3],7:4,8:$V0,9:$V1,10:7,11:8,12:10,13:11,14:12,15:$V2,26:9,31:$V3,33:$V4,55:$V5,57:$V6},{1:[3]},{5:[1,18],6:[1,19]},{1:[2,2]},o($V7,[2,4]),o($V7,[2,5]),o($V7,[2,6]),o($V7,[2,7],{60:[1,20]}),o($V7,[2,8]),o($V8,[2,71]),o($V9,[2,9]),o($V9,[2,10]),o($V9,[2,11]),{2:$Va,17:$Vb,40:$Vc,59:$Vd,61:21,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk},{2:$Va,17:$Vb,40:$Vc,59:$Vd,61:34,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk},{16:[1,35]},{16:[1,36]},{8:$Vl,9:$Vm,11:39,12:10,13:11,14:12,15:$V2,16:$Vn,25:47,26:41,28:40,31:$V3,33:$V4,34:[1,37],37:38,51:42,52:$Vo,54:$Vp,55:$V5,57:$V6},{1:[2,1]},{7:49,8:$V0,9:$V1,10:7,11:8,12:10,13:11,14:12,15:$V2,26:9,31:$V3,33:$V4,55:$V5,57:$V6},{26:50,55:$V5,57:$V6},o($Vq,[2,72],{55:$Vr,57:$Vs}),o($Vt,[2,76]),o($Vt,[2,77],{70:53,72:54,73:$Vu}),o($Vt,[2,78],{72:54,70:56,73:$Vu}),o($Vt,[2,79]),o($Vt,[2,80]),{52:[1,57]},{52:[1,58]},{68:[1,59]},{68:[1,60]},{17:[1,61],40:[1,62]},{68:[1,63]},o($Vt,[2,101]),o($Vq,[2,73],{55:$Vr,57:$Vs}),{17:[1,64]},{17:[1,65]},{8:$Vl,9:$Vm,11:39,12:10,13:11,14:12,15:$V2,16:$Vn,25:47,26:41,28:40,31:$V3,33:$V4,35:66,37:67,51:42,52:$Vo,54:$Vp,55:$V5,57:$V6},o($V9,[2,35]),o($V9,[2,38]),o($V9,[2,39],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,43:$VA,44:$VB,45:$VC,46:$VD,47:$VE,48:$VF,49:$VG,50:$VH}),o($V9,[2,40]),o($VI,[2,54]),{8:$Vl,9:$Vm,16:$Vn,25:47,28:81,51:42,52:$Vo,54:$Vp},o($VI,[2,56]),o($VI,[2,57]),o($VI,[2,58]),o($VI,[2,59]),{17:[1,82]},o($V7,[2,3]),o($V8,[2,70]),{2:$Va,17:$Vb,40:$Vc,59:$Vd,62:83,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk},{2:$Va,17:$Vb,40:$Vc,59:$Vd,62:84,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk},o($Vt,[2,87],{72:85,73:$Vu}),o($VJ,[2,103]),{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:86,76:87,77:$VP,78:$VQ},o($Vt,[2,88],{72:85,73:$Vu}),{53:[1,96]},{53:[1,97]},{17:[1,98],40:[1,99]},{17:[1,100],40:[1,101]},o($Vt,[2,93],{72:54,70:102,73:$Vu}),o($Vt,[2,94],{72:54,70:103,73:$Vu}),{17:[1,104],40:[1,105]},{18:[1,106],24:[1,107]},{32:[1,108]},{6:[1,110],36:[1,109]},o($VR,[2,37]),{8:$Vl,9:$Vm,16:$Vn,25:47,28:111,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:112,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:113,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:114,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:115,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:116,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:117,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:118,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:119,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:120,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:121,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:122,51:42,52:$Vo,54:$Vp},{8:$Vl,9:$Vm,16:$Vn,25:47,28:123,51:42,52:$Vo,54:$Vp},{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,43:$VA,44:$VB,45:$VC,46:$VD,47:$VE,48:$VF,49:$VG,50:$VH,53:[1,124]},o($VS,[2,62],{55:[1,125],57:[1,126]}),o($Vt,[2,74]),o($Vt,[2,75]),o($VJ,[2,102]),{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX,43:$VY,44:$VZ,45:$V_,46:$V$,47:$V01,48:$V11,49:$V21,50:$V31,75:[1,127]},o($V41,[2,118]),{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:141,76:87,77:$VP,78:$VQ},o($V41,[2,120]),o($V41,[2,121]),o($V41,[2,122]),{52:[1,142]},{52:[1,143]},o($V41,[2,125],{55:$Vr,57:$Vs}),{2:$Va,17:$Vb,40:$Vc,59:$Vd,61:144,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk},o($Vt,[2,81]),o($Vt,[2,82]),o($Vt,[2,83],{72:54,70:145,73:$Vu}),o($Vt,[2,84],{72:54,70:146,73:$Vu}),o($Vt,[2,85],{72:54,70:147,73:$Vu}),o($Vt,[2,86],{72:54,70:148,73:$Vu}),o($Vt,[2,97],{72:85,73:$Vu}),o($Vt,[2,98],{72:85,73:$Vu}),o($Vt,[2,95],{72:54,70:149,73:$Vu}),o($Vt,[2,96],{72:54,70:150,73:$Vu}),{16:$Vn,19:151,25:152,26:153,55:$V5,57:$V6},{16:[1,154]},{8:$Vl,9:$Vm,16:$Vn,25:47,26:156,28:155,51:42,52:$Vo,54:$Vp,55:$V5,57:$V6},o($V9,[2,34]),{8:$Vl,9:$Vm,11:39,12:10,13:11,14:12,15:$V2,16:$Vn,25:47,26:41,28:40,31:$V3,33:$V4,37:157,51:42,52:$Vo,54:$Vp,55:$V5,57:$V6},o($V51,[2,41],{40:$Vx,41:$Vy,42:$Vz}),o($V51,[2,42],{40:$Vx,41:$Vy,42:$Vz}),o($V61,[2,43],{42:$Vz}),o($V61,[2,44],{42:$Vz}),o($VI,[2,45]),o($V71,[2,46],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,45:$VC,46:$VD,47:$VE,48:$VF}),o($V71,[2,47],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,45:$VC,46:$VD,47:$VE,48:$VF}),o($V81,[2,48],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz}),o($V81,[2,49],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz}),o($V81,[2,50],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz}),o($V81,[2,51],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz}),o([5,6,29,33,36,49,50,53],[2,52],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,43:$VA,44:$VB,45:$VC,46:$VD,47:$VE,48:$VF}),o([5,6,29,33,36,50,53],[2,53],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,43:$VA,44:$VB,45:$VC,46:$VD,47:$VE,48:$VF,49:$VG}),o($VI,[2,55]),{17:$V91,40:$Va1,56:158,58:159,59:$Vb1},{17:$V91,40:$Va1,56:163,58:159,59:$Vb1},o($VJ,[2,104]),{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:164,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:165,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:166,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:167,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:168,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:169,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:170,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:171,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:172,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:173,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:174,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:175,76:87,77:$VP,78:$VQ},{2:$Va,8:$VK,9:$VL,17:$Vb,40:$Vc,52:$VM,54:$VN,57:$VO,59:$Vd,61:94,62:22,63:$Ve,64:$Vf,65:$Vg,66:$Vh,67:$Vi,69:$Vj,71:$Vk,74:176,76:87,77:$VP,78:$VQ},{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX,43:$VY,44:$VZ,45:$V_,46:$V$,47:$V01,48:$V11,49:$V21,50:$V31,53:[1,177]},{53:[1,178]},{53:[1,179]},o($V41,[2,126],{55:$Vr,57:$Vs}),o($Vt,[2,89],{72:85,73:$Vu}),o($Vt,[2,90],{72:85,73:$Vu}),o($Vt,[2,91],{72:85,73:$Vu}),o($Vt,[2,92],{72:85,73:$Vu}),o($Vt,[2,99],{72:85,73:$Vu}),o($Vt,[2,100],{72:85,73:$Vu}),{14:180,20:181,23:182,27:$Vc1,29:$Vd1,33:$V4},o($Ve1,[2,28]),o($Ve1,[2,29]),{17:[1,185]},o($V9,[2,32],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,43:$VA,44:$VB,45:$VC,46:$VD,47:$VE,48:$VF,49:$VG,50:$VH}),o($V9,[2,33]),o($VR,[2,36]),o($VS,[2,60],{55:$Vf1,57:$Vg1}),o($Vh1,[2,65]),o($Vh1,[2,66]),o($Vh1,[2,67]),{17:[1,188],40:[1,189]},o($VS,[2,61],{55:$Vf1,57:$Vg1}),o($Vi1,[2,105],{40:$VV,41:$VW,42:$VX}),o($Vi1,[2,106],{40:$VV,41:$VW,42:$VX}),o($Vj1,[2,107],{42:$VX}),o($Vj1,[2,108],{42:$VX}),o($V41,[2,109]),o($Vk1,[2,110],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX,45:$V_,46:$V$,47:$V01,48:$V11}),o($Vk1,[2,111],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX,45:$V_,46:$V$,47:$V01,48:$V11}),o($Vl1,[2,112],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX}),o($Vl1,[2,113],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX}),o($Vl1,[2,114],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX}),o($Vl1,[2,115],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX}),o([49,50,53,75],[2,116],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX,43:$VY,44:$VZ,45:$V_,46:$V$,47:$V01,48:$V11}),o([50,53,75],[2,117],{38:$VT,39:$VU,40:$VV,41:$VW,42:$VX,43:$VY,44:$VZ,45:$V_,46:$V$,47:$V01,48:$V11,49:$V21}),o($V41,[2,119]),o($V41,[2,123]),o($V41,[2,124]),o($V9,[2,12]),{14:190,21:[1,191],22:[1,192],33:$V4},{14:193,20:194,29:$Vd1,33:$V4},{30:[1,195]},{8:$Vl,9:$Vm,16:$Vn,25:47,28:196,51:42,52:$Vo,54:$Vp},{18:[1,197]},{17:$V91,40:$Va1,58:198,59:$Vb1},{17:$V91,40:$Va1,58:199,59:$Vb1},o($Vh1,[2,68]),o($Vh1,[2,69]),o($V9,[2,13]),{14:200,33:$V4},{14:201,33:$V4},o($V9,[2,16]),{14:202,21:[1,203],22:[1,204],33:$V4},{16:$Vn,25:205},o([29,33],[2,30],{38:$Vv,39:$Vw,40:$Vx,41:$Vy,42:$Vz,43:$VA,44:$VB,45:$VC,46:$VD,47:$VE,48:$VF,49:$VG,50:$VH}),{16:$Vn,19:206,25:152,26:153,55:$V5,57:$V6},o($Vh1,[2,63]),o($Vh1,[2,64]),o($V9,[2,14]),o($V9,[2,15]),o($V9,[2,17]),{14:207,33:$V4},{14:208,33:$V4},o([21,22,33],[2,31]),{14:209,20:210,23:211,27:$Vc1,29:$Vd1,33:$V4},o($V9,[2,18]),o($V9,[2,19]),o($V9,[2,20]),{14:212,21:[1,213],22:[1,214],33:$V4},{14:215,20:216,29:$Vd1,33:$V4},o($V9,[2,21]),{14:217,33:$V4},{14:218,33:$V4},o($V9,[2,24]),{14:219,21:[1,220],22:[1,221],33:$V4},o($V9,[2,22]),o($V9,[2,23]),o($V9,[2,25]),{14:222,33:$V4},{14:223,33:$V4},o($V9,[2,26]),o($V9,[2,27])],\r\ndefaultActions: {3:[2,2],18:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xqueryAST/ExpresionesXpath/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xqueryAST/ExpresionesXpath/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xqueryAST/ExpresionesXpath/Logica\");\r\n    const {Path} = require(\"../xqueryAST/ExpresionesXpath/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xqueryAST/ExpresionesXpath/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xqueryAST/ExpresionesXpath/Relacional\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n\r\n    const {For} = require(\"../xqueryAST/ExpresionesXquery/For\");\r\n    const {Let} = require(\"../xqueryAST/ExpresionesXquery/Let\");\r\n    const {MultiXpaths} = require(\"../xqueryAST/ExpresionesXquery/MultiXpaths\");\r\n    const {Return} = require(\"../xqueryAST/ExpresionesXquery/Return\");\r\n    const {XqueryPath} = require(\"../xqueryAST/ExpresionesXquery/XqueryPath\");\r\n    \r\n    \r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:return 54\r\nbreak;\r\ncase 1:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 7: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 8:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 8;\r\n                  \r\nbreak;\r\ncase 9:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 15: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 16:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 9;\r\n                  \r\nbreak;\r\ncase 17:return 57\r\nbreak;\r\ncase 18:return 55\r\nbreak;\r\ncase 19:return 64\r\nbreak;\r\ncase 20:return 63\r\nbreak;\r\ncase 21:return 6\r\nbreak;\r\ncase 22:return 59\r\nbreak;\r\ncase 23:return 73\r\nbreak;\r\ncase 24:return 75\r\nbreak;\r\ncase 25:return 52\r\nbreak;\r\ncase 26:return 53\r\nbreak;\r\ncase 27:return 60\r\nbreak;\r\ncase 28:return 38\r\nbreak;\r\ncase 29:return 39\r\nbreak;\r\ncase 30:return 40\r\nbreak;\r\ncase 31:return 41\r\nbreak;\r\ncase 32:return 43\r\nbreak;\r\ncase 33:return 44\r\nbreak;\r\ncase 34:return 46\r\nbreak;\r\ncase 35:return 48\r\nbreak;\r\ncase 36:return 45\r\nbreak;\r\ncase 37:return 47\r\nbreak;\r\ncase 38:return 50\r\nbreak;\r\ncase 39:return 49\r\nbreak;\r\ncase 40:return 42\r\nbreak;\r\ncase 41:\r\nbreak;\r\ncase 42:\r\nbreak;\r\ncase 43:return 68\r\nbreak;\r\ncase 44:return 67\r\nbreak;\r\ncase 45:return 71\r\nbreak;\r\ncase 46:return 69\r\nbreak;\r\ncase 47:return 65\r\nbreak;\r\ncase 48:return 78 \r\nbreak;\r\ncase 49:return 77\r\nbreak;\r\ncase 50:return 21;\r\nbreak;\r\ncase 51:return 22;\r\nbreak;\r\ncase 52:return 30;\r\nbreak;\r\ncase 53:return 29;\r\nbreak;\r\ncase 54:return 27;\r\nbreak;\r\ncase 55:return 24;\r\nbreak;\r\ncase 56:return 18;\r\nbreak;\r\ncase 57:return 15;\r\nbreak;\r\ncase 58:return 33;\r\nbreak;\r\ncase 59:return 16;\r\nbreak;\r\ncase 60:return 31;\r\nbreak;\r\ncase 61:return 32;\r\nbreak;\r\ncase 62:return 17\r\nbreak;\r\ncase 63:return 5\r\nbreak;\r\ncase 64:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+[0-9]+)/i,/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:,)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?: )/i,/^(?:\\n)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:ascending\\b)/i,/^(?:descending\\b)/i,/^(?:by\\b)/i,/^(?:order\\b)/i,/^(?:where\\b)/i,/^(?:at\\b)/i,/^(?:in\\b)/i,/^(?:for\\b)/i,/^(?:return\\b)/i,/^(?:\\$)/i,/^(?:let\\b)/i,/^(?::=)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,9,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xQueryGrammar;\r\nexports.Parser = xQueryGrammar.Parser;\r\nexports.parse = function () { return xQueryGrammar.parse.apply(xQueryGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\n\r\nexport class Acceso {\r\n\r\n    SP_id:number;\r\n    SP_tipoAcceso:number;\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: ExpressionXquery[],\r\n    public tipoQuery ?: string ){\r\n        this.SP_id = -1;\r\n        this.SP_tipoAcceso = -1\r\n    } \r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"-> nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\"\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\nimport { Entorno } from '../../xmlAST/Entorno';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { tipoPrimitivo } from './Primitivo';\r\n\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements ExpressionXquery{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: ExpressionXquery,\r\n    public hijoDer: ExpressionXquery,\r\n    public tipoOperacion: operacionAritmetica,\r\n    public sym: string){}\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.executeXquery(entXquery, ent, simboloPadre);\r\n        let valorDer = this.hijoDer.executeXquery(entXquery, ent, simboloPadre);\r\n\r\n        if(valorIzq.type === tipoPrimitivo.RESP || valorDer.type === tipoPrimitivo.RESP){\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }else if((valorIzq.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.STRING) && this.tipoOperacion === operacionAritmetica.SUMA) {\r\n            return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.STRING };\r\n        }else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n           \r\n            if (this.tipoOperacion === operacionAritmetica.SUMA){\r\n                return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.RESTA){\r\n                return { value: (valorIzq.value - valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.MULT){\r\n                return { value: (valorIzq.value * valorDer.value) , type: tipoPrimitivo.NUMBER };;\r\n            }else if(this.tipoOperacion === operacionAritmetica.DIV){\r\n\r\n                if(Number(valorDer.value) >= 0){\r\n                    return { value: (valorIzq.value / valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: El valor \"+valorDer+\", debe ser mayor o igual que cero,  Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }else if (this.tipoOperacion === operacionAritmetica.MOD){\r\n                return  { value: (valorIzq.value % valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\nimport { Entorno } from '../../xmlAST/Entorno';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { tipoPrimitivo } from './Primitivo';\r\n\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements ExpressionXquery{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: ExpressionXquery,\r\n    public hijoDer: ExpressionXquery,\r\n    public tipoOperacion: operacionLogica,\r\n    public sym: string){}\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        if (this.hijoIzq != null && this.hijoDer != null){\r\n\r\n            let valorIzq = this.hijoIzq.executeXquery(entXquery, ent, simboloPadre);\r\n        \r\n            if (valorIzq.type === tipoPrimitivo.BOOL){\r\n\r\n                if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                    //console.log(\"pase por el corto circuito del and\")\r\n                    return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n                } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                    //console.log(\"pase por el corto circuito del or\")\r\n                    return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n                }\r\n                \r\n                let valorDer = this.hijoDer.executeXquery(entXquery, ent, simboloPadre);\r\n\r\n                if (valorDer.type === tipoPrimitivo.BOOL){\r\n\r\n                    if (this.tipoOperacion === operacionLogica.AND) {\r\n                        const result = valorIzq.value && valorDer.value;\r\n                        return { value: result, type: tipoPrimitivo.BOOL };\r\n                    }else if (this.tipoOperacion === operacionLogica.OR) {\r\n                        const result = valorIzq.value || valorDer.value;\r\n                        return { value: result, type: tipoPrimitivo.BOOL };\r\n                    }else {\r\n                        throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);;\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \"+valorDer.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorIzq.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"ERROR FATAL: no se pudo recuperar la consulta, linea: \"+this.line+\" column: \"+ this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        if (this.hijoIzq != null && this.hijoDer != null){\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n            texto = this.hijoIzq.GraficarAST(texto);\r\n            texto = this.hijoDer.GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n            return texto;\r\n        }else {\r\n            throw new Error(\"ERROR FATAL: no se pudo recuperar la consulta, linea: \"+this.line+\" column: \"+ this.column);\r\n        }\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso} from './Acceso';\r\nimport { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\n\r\nexport class Path implements ExpressionXquery{\r\n\r\n    salida: any[];\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public L_Accesos : Acceso [],\r\n    public tipoPath ?: string\r\n    ){\r\n        this.salida=[];\r\n    }   \r\n\r\n    \r\n    private validarAntecesores(): Acceso []{\r\n\r\n        let newL_Acc : Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n            \r\n            if (acceso.tipoAcceso === 'padre'){\r\n                \r\n                if (newL_Acc.length >0){\r\n                    newL_Acc.pop()\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \"+acceso.line+\"column: \"+acceso.column);\r\n                }\r\n            }else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent : Entorno, simboloPadre?:Simbolo) :Retorno {\r\n        \r\n        this.salida = [];\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\"){\r\n\r\n            if (ent.listaEntornos.length > 0 && this.L_Accesos.length > 0){\r\n\r\n                if (ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\") {//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n        \r\n                    if (this.validarPredicadosRaiz(entXquery, ent, 0)) {\r\n\r\n                        if(this.L_Accesos.length >  1){ //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(entXquery, ent, 1); \r\n                        }else{\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                }else if (this.L_Accesos[0].tipoQuery === 'absoluta'){\r\n                    this.getQuery(entXquery, ent, 0);\r\n                }\r\n            }\r\n        }else {\r\n\r\n            if (this.L_Accesos.length > 0){\r\n                this.getQuery(entXquery, ent, 0, simboloPadre);\r\n            }else {\r\n                this.construirNodos(ent, \"\")\r\n            }\r\n        } \r\n        return {value: this.salida, type: tipoPrimitivo.RESP};\r\n    }\r\n\r\n    private getQuery(entXquery: EntornoXQuery, entPadre: Entorno, posActAcceso: number, simboloPadre?:Simbolo) {\r\n        \r\n        if(simboloPadre !== undefined ){ // si la consulta es una sub consulta y el padre es un atributo --> /@id[subconsulta]\r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\"){\r\n\r\n                if(this.L_Accesos.length < posActAcceso + 1){\r\n                    this.getQuery(entXquery, entPadre, posActAcceso + 1, simboloPadre);\r\n                }else{\r\n\r\n                    //if (this.tipoPath === \"sub\"){\r\n                        this.salida.push({value : simboloPadre.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                    /*}else {\r\n                        this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                    }*/\r\n                } \r\n            }else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }  \r\n\r\n        }else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\"){\r\n               \r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if(atri != null){\r\n\r\n                    if (this.validarPredicadosAtri(entXquery, entPadre, atri, posActAcceso)){\r\n                    \r\n                        if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entXquery, entPadre, posActAcceso + 1, atri); \r\n                        }else{\r\n\r\n                            //if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n                            /*}else{\r\n                                this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                            }*/\r\n                        }\r\n                    }\r\n                }else if(entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta') {\r\n                    \r\n                    for (const entChild of entPadre.listaEntornos ) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entXquery, entChild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\"){\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1){\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n                    \r\n                        this.construirTodosAtributos(entPadre);\r\n                        \r\n                    }else {\r\n    \r\n                        if (entPadre.listaSimbolos.length > 0){\r\n    \r\n                            for (const atri of entPadre.listaSimbolos){\r\n        \r\n                                if (this.validarPredicadosAtri(entXquery, entPadre, atri, posActAcceso)){\r\n                                   \r\n                                    //if (this.tipoPath === \"sub\"){\r\n                                    this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n                                    /*}else{\r\n                                        this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                                    }*/\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    throw new Error(\"Error Semantico: no se puede mostrar todos los atributos del nodos descendientes ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso ==='texto'){\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1){\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n\r\n                        this.construirTodosTextos(entPadre);\r\n\r\n                    }else {\r\n                        \r\n                        if (entPadre.texto !== ''){\r\n                            //if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n                            /*}else {\r\n                                this.salida.push(entPadre.texto + '\\n');\r\n                            }*/\r\n                        }\r\n                    }\r\n                    \r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto de los nodo descendientes ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" ){\r\n\r\n                if(this.L_Accesos.length >  posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entXquery, entPadre, posActAcceso + 1); \r\n                }else{\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\"){\r\n\r\n                if(entPadre.listaEntornos.length > 0){\r\n                    \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        \r\n                        if (this.validarPredicadosNodos(entXquery, entPadre, entActual, posActAcceso)){\r\n                    \r\n                            if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entXquery, entActual, posActAcceso + 1); \r\n                            }else{\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\"){\r\n                \r\n                if(entPadre.listaEntornos.length > 0){\r\n                      \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n    \r\n                        if(entActual.identificador === this.L_Accesos[posActAcceso].id){//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n                    \r\n                            if (this.validarPredicadosNodos(entXquery, entPadre, entActual, posActAcceso)){\r\n        \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entXquery, entActual, posActAcceso + 1);\r\n                                }else{\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        }else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n                            this.getQuery(entXquery, entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \"+this.L_Accesos[posActAcceso].tipoAcceso+\" del acceso: \"+this.L_Accesos[posActAcceso].tipoAcceso+\" no se reconoce como valido, \" + \r\n                \"linea: \"+this.L_Accesos[posActAcceso].line+\" comlumna: \"+this.L_Accesos[posActAcceso].column);\r\n            }   \r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre:Entorno){\r\n        \r\n        if (entPadre.texto !== ''){\r\n            //if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n            /*}else {\r\n                this.salida.push(entPadre.texto + '\\n');\r\n            }*/\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos(entPadre:Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos){\r\n\r\n            //if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n            /*}else{\r\n                this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n            }*/\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre:Entorno, tab : string){\r\n\r\n        //if (this.tipoPath === \"sub\"){\r\n            this.salida.push({value : entPadre , type: tipoPrimitivo.NODO})\r\n        /*}else {\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n            }\r\n\r\n            //construyo Nodos\r\n            if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if(entPadre.listaEntornos.length > 0){\r\n\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n            \r\n            } else{\r\n                this.salida.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n            }\r\n\r\n        }*/\r\n    }\r\n\r\n    private validarPredicadosAtri(entXquery: EntornoXQuery, entPadre: Entorno, simboloPadre:Simbolo, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].executeXquery(entXquery ,entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n            \r\n        }\r\n        return true;\r\n    } \r\n\r\n    private validarPredicadosNodos(entXquery: EntornoXQuery, entPadre: Entorno, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].executeXquery(entXquery ,entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entXquery: EntornoXQuery, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].executeXquery(entXquery ,entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if ( result.value !== 1){\r\n                    return false;\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"-> nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n    /*private unirSalida () : string{\r\n\r\n        let salida : string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n    return {value: this.unirSalida(), type: tipoPrimitivo.STRING};*/\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements ExpressionXquery{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: ExpressionXquery,\r\n    public hijoDer: ExpressionXquery,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.executeXquery(entXquery, ent, simboloPadre);\r\n        let valorDer = this.hijoDer.executeXquery(entXquery, ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq.value.identificador, valDer.value.identificador)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }else if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                        if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valIzq.value.texto, valDer.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL}    \r\n                            }\r\n                        }\r\n                    }\r\n                    else if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valDer.value.texto, valIzq.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL}    \r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (this.validar(valIzq.value, valDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                    if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valIzq.value.texto, valorDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}    \r\n                        }\r\n                    }\r\n                }else {\r\n                   \r\n                    if (this.validar(valIzq.value, valorDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                    if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valDer.value.texto, valorIzq.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}    \r\n                        }\r\n                    }\r\n                }else {\r\n                    \r\n                    if (this.validar(valorIzq.value, valDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n            \r\n        } else {\r\n            return { value: this.validar(valorIzq.value, valorDer.value), type: tipoPrimitivo.BOOL}\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : String, valorDer: String): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq == valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq != valorDer;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq < valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq <= valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq > valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq >= valorDer;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { Path } from \"../ExpresionesXpath/Path\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class For implements ExpressionXquery{\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number, \r\n        public idIn: string,\r\n        public idAt: string, \r\n        public select: ExpressionXquery,\r\n        public where: ExpressionXquery | null,\r\n        public orderBy: ExpressionXquery | null,   \r\n        public orden: string,\r\n        public ret: ExpressionXquery){}\r\n    \r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n        \r\n        var nvoEnt: EntornoXQuery = new EntornoXQuery(entAct);\r\n\r\n        var result : Retorno[]= [];\r\n        var content: Retorno = this.select.executeXquery(entAct, RaizXML);\r\n\r\n        for (const element of content.value) {\r\n            \r\n            if (this.validarWhere(nvoEnt, RaizXML)){\r\n                nvoEnt.guaradarVar(this.idIn , element);\r\n                ManejadorXquery.concatenar(result, this.ret.executeXquery(nvoEnt, RaizXML).value);\r\n            }\r\n        }\r\n        return {value: ManejadorXquery.buildXquery(result), type : tipoPrimitivo.STRING}\r\n    }\r\n\r\n    private validarWhere(entAct: EntornoXQuery, RaizXML: Entorno) : boolean{\r\n\r\n        var result  = this.where?.executeXquery(entAct, RaizXML)\r\n        if (result != null){\r\n            \r\n            if (result.type === tipoPrimitivo.BOOL){\r\n                return result.value; \r\n            }else {\r\n                throw new Error(\"Error Semntico: la expresion de la sentencia where es de tipo : \"+result.type.toString()+\" y debe ser de tipo bool\");\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\n\r\nexport class Let implements ExpressionXquery{\r\n\r\n    constructor (\r\n        public line: Number,\r\n        public column: Number,\r\n        public idVar: string,\r\n        public path : ExpressionXquery){\r\n    }\r\n    \r\n    public executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n\r\n        if (!entAct.existeVar(this.idVar)){\r\n            \r\n            var content : Retorno = content = this.path.executeXquery(entAct, RaizXML); \r\n            entAct.guaradarVar(this.idVar, content);\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: Se encuentra en uso el id: \"+this.idVar+\", Linea: \"+this.line +\" Columna: \"+this.column );\r\n        }\r\n        return {value : \"\", type: tipoPrimitivo.STRING}\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { Path } from \"../ExpresionesXpath/Path\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class MultiXpaths implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: number,\r\n        public column: number,\r\n        public paths : Path[]){}\r\n    \r\n\r\n    public executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n       \r\n        var content : Retorno[] = [];\r\n        for (const path of this.paths) {\r\n            ManejadorXquery.concatenar(content, path.executeXquery(entAct, RaizXML).value);\r\n        }\r\n        return {value: ManejadorXquery.buildXquery(content), type : tipoPrimitivo.STRING}\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { Path } from \"../ExpresionesXpath/Path\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class Return implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: Number,\r\n        public column: Number, \r\n        public L_Xqueys: ExpressionXquery[]){}\r\n    \r\n\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n       \r\n        var content : Retorno[] = [];\r\n        \r\n        for (const Xquery of this.L_Xqueys) {\r\n            ManejadorXquery.concatenar(content, Xquery.executeXquery(entAct, RaizXML).value);\r\n        }\r\n        return {value: ManejadorXquery.buildXquery(content), type : tipoPrimitivo.STRING}\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { Path } from \"../ExpresionesXpath/Path\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class XqueryPath implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: number,\r\n        public column: number,\r\n        public idVar: string,\r\n        public accesos: Path){}\r\n   \r\n    public executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n        \r\n        var content : Retorno[] = [];\r\n        \r\n        var varFind = entAct.getVar(this.idVar);  \r\n        if (varFind != null){\r\n\r\n            if (varFind.type === tipoPrimitivo.RESP){\r\n\r\n                for (const element of varFind.value) {\r\n\r\n                    if (element.type === tipoPrimitivo.NODO){\r\n                        ManejadorXquery.concatenar(content, this.accesos.executeXquery(entAct, element.value).value) ;\r\n                    }else {\r\n                        content.push(element)\r\n                    }\r\n                }\r\n            }else {\r\n\r\n                if (varFind.type === tipoPrimitivo.NODO){\r\n                    ManejadorXquery.concatenar(content, this.accesos.executeXquery(entAct, varFind.value).value) ;\r\n                }else {\r\n                    content.push(varFind)\r\n                }\r\n            }\r\n\r\n            return {value : content, type: tipoPrimitivo.RESP}\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: No se encuentra el id: \"+this.idVar+\", Linea: \"+this.line +\" Columna: \"+this.column );\r\n        }\r\n    }\r\n    \r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n//return {value: ManejadorXquery.buildXquery(content), type : tipoPrimitivo.STRING}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar c3dgrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[25,35],$V2=[1,19],$V3=[1,25],$V4=[32,33],$V5=[30,35],$V6=[28,30],$V7=[1,52],$V8=[1,50],$V9=[1,51],$Va=[9,38,43,46,50,51],$Vb=[1,67],$Vc=[2,18],$Vd=[1,66],$Ve=[1,81],$Vf=[1,79],$Vg=[1,80],$Vh=[4,5,6,7,14,15,17,18,19,20,32],$Vi=[1,95],$Vj=[1,96],$Vk=[1,97],$Vl=[1,98],$Vm=[1,114],$Vn=[5,9,10],$Vo=[9,43,46,50,51];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"SIGNO\":3,\"+\":4,\"-\":5,\"*\":6,\"/\":7,\"VALOR\":8,\"id\":9,\"number\":10,\"[\":11,\"(\":12,\"int\":13,\")\":14,\"]\":15,\"COMPARACION\":16,\"=\":17,\"!\":18,\">\":19,\"<\":20,\"ASIGNACION\":21,\"INIT\":22,\"HEADER\":23,\"CONTENIDO\":24,\"EOF\":25,\"IMPORTS\":26,\"VARDEC\":27,\"#\":28,\".\":29,\"double\":30,\"TEMPDEC\":31,\";\":32,\",\":33,\"FUNCION\":34,\"void\":35,\"{\":36,\"CONTFUNC\":37,\"}\":38,\"ETIQUETA\":39,\"ETIQUETA2\":40,\"TEMPORAL\":41,\"IF\":42,\"return\":43,\"PRINTF\":44,\":\":45,\"goto\":46,\"CODMUERTO\":47,\"ETIQUETA3\":48,\"TEMPORAL2\":49,\"if\":50,\"printf\":51,\"dstring\":52,\"char\":53,\"sstring\":54,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"+\",5:\"-\",6:\"*\",7:\"/\",9:\"id\",10:\"number\",11:\"[\",12:\"(\",13:\"int\",14:\")\",15:\"]\",17:\"=\",18:\"!\",19:\">\",20:\"<\",25:\"EOF\",28:\"#\",29:\".\",30:\"double\",32:\";\",33:\",\",35:\"void\",36:\"{\",38:\"}\",43:\"return\",45:\":\",46:\"goto\",50:\"if\",51:\"printf\",52:\"dstring\",53:\"char\",54:\"sstring\"},\r\nproductions_: [0,[3,1],[3,1],[3,1],[3,1],[8,1],[8,1],[8,2],[8,7],[8,4],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[21,7],[21,4],[21,1],[22,3],[22,1],[23,2],[26,6],[26,8],[26,5],[26,7],[27,4],[27,3],[31,3],[31,6],[31,1],[31,4],[24,2],[24,1],[34,7],[37,2],[37,2],[37,2],[37,2],[37,3],[37,2],[37,5],[37,1],[37,1],[37,1],[37,2],[37,1],[37,4],[37,1],[41,6],[41,4],[39,2],[40,6],[40,5],[47,2],[47,2],[47,2],[47,3],[47,2],[47,5],[47,1],[47,1],[47,2],[47,1],[47,4],[47,1],[48,3],[49,6],[49,4],[42,9],[44,10],[44,10]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1: case 2: case 3: case 4: case 5: case 6: case 14: case 15: case 18:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 7: case 10: case 11: case 12: case 13:\r\nthis.$ = $$[$0-1]+$$[$0]\r\nbreak;\r\ncase 8: case 16:\r\nthis.$ = $$[$0-6]+$$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\r\nbreak;\r\ncase 9: case 17:\r\nthis.$ = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\r\nbreak;\r\ncase 19:\r\n\r\n        textoaux = texto;\r\n        texto = \"\";\r\n        Optim.GenerarGraphviz();\r\n        textrep = Optim.textGraphviz;\r\n        Optim.Reset();\r\n        return {Optimizado: textoaux, TextGraphviz: textrep};\r\n    \r\nbreak;\r\ncase 22: case 24:\r\ntexto += \"#\" + $$[$0-3] + \" <\" + $$[$0-1] + \">\\n\";\r\nbreak;\r\ncase 23: case 25:\r\ntexto += \"#\" + $$[$0-5] + \" <\" + $$[$0-3] + \".\" + $$[$0-1] + \">\\n\";\r\nbreak;\r\ncase 26:\r\n\r\n        texto += \"double \";\r\n        for(const key in $$[$0-1]) {\r\n            texto += $$[$0-1][key];\r\n        }\r\n        texto += \";\\n\";\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        texto += \"\\ndouble \";\r\n        for(const key in $$[$0-1]) {\r\n            texto += $$[$0-1][key];\r\n        }\r\n        texto += \";\\n\";\r\n    \r\nbreak;\r\ncase 28:\r\n$$[$0-2].push(\", \"+$$[$0]);this.$=$$[$0-2];\r\nbreak;\r\ncase 29:\r\n$$[$0-5].push(\", \"+$$[$0-3]+\"[\"+$$[$0-1]+\"]\");this.$=$$[$0-5];\r\nbreak;\r\ncase 30:\r\nthis.$=[$$[$0]]\r\nbreak;\r\ncase 31:\r\nthis.$=[$$[$0-3]+\"[\"+$$[$0-1]+\"]\"];\r\nbreak;\r\ncase 34:\r\n\r\n        texto += \"\\n\"+$$[$0-6]+\" \"+$$[$0-5]+$$[$0-4]+$$[$0-3]+\" \"+$$[$0-2]+\"\\n\";\r\n        for (const key in $$[$0-1]) {\r\n            texto += $$[$0-1][key];\r\n        }\r\n        texto += $$[$0]+\"\\n\";\r\n    \r\nbreak;\r\ncase 35: case 36: case 37: case 38: case 40: case 54: case 55: case 56: case 58:\r\n$$[$0-1].push($$[$0]);this.$=$$[$0-1];\r\nbreak;\r\ncase 39: case 57:\r\n$$[$0-2].push($$[$0-1]+$$[$0]+\"\\n\");this.$=$$[$0-2];\r\nbreak;\r\ncase 41: case 59:\r\n$$[$0-4].push($$[$0-3]+\"();\\n\");this.$=$$[$0-4];\r\nbreak;\r\ncase 42: case 43: case 44: case 46: case 48: case 60: case 61: case 63: case 65:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 45: case 62:\r\nthis.$=[$$[$0-1]+$$[$0]+\"\\n\"];\r\nbreak;\r\ncase 47: case 64:\r\nthis.$=[$$[$0-3]+\"();\\n\"];\r\nbreak;\r\ncase 49:\r\n\r\n        this.$ = Optim.Optimizar(new Asignacion($$[$0-5],$$[$0-3],$$[$0-2],$$[$0-1]));\r\n    \r\nbreak;\r\ncase 50: case 68:\r\nthis.$=$$[$0-3]+\" \"+$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 51:\r\nthis.$=$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 52:\r\n\r\n        this.$=$$[$0-5]+\" \"+$$[$0-4]+$$[$0-3]+\"\\n\"+$$[$0-1]+$$[$0]+\"\\n\";\r\n        for (const key in $$[$0-2]) {\r\n            texto += Optim.Optimizar($$[$0-2][key]);\r\n        }\r\n    \r\nbreak;\r\ncase 53:\r\nthis.$=$$[$0-4]+\" \"+$$[$0-3]+$$[$0-2]+\"\\n\"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 66:\r\nthis.$=$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 67:\r\nthis.$=$$[$0-5]+\" \"+$$[$0-4]+\" \"+$$[$0-3]+\" \"+$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 69:\r\n\r\n        this.$= Optim.Optimizar(new Condicional($$[$0-6],$$[$0-5],$$[$0-4])) +$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\n    \r\nbreak;\r\ncase 70: case 71:\r\nthis.$=$$[$0-9]+$$[$0-8]+$$[$0-7]+$$[$0-6]+\" \"+$$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\n}\r\n},\r\ntable: [{22:1,23:2,25:[1,3],26:4,28:[1,5]},{1:[3]},{24:6,34:7,35:$V0},{1:[2,20]},{27:9,28:[1,10],30:[1,11]},{9:[1,12]},{25:[1,13],34:14,35:$V0},o($V1,[2,33]),{9:[1,15]},{30:[1,16],35:[2,21]},{9:[1,17]},{9:$V2,31:18},{20:[1,20]},{1:[2,19]},o($V1,[2,32]),{12:[1,21]},{9:$V2,31:22},{20:[1,23]},{32:[1,24],33:$V3},o($V4,[2,30],{11:[1,26]}),{9:[1,27]},{14:[1,28]},{32:[1,29],33:$V3},{9:[1,30]},o($V5,[2,27]),{9:[1,31]},{10:[1,32]},{19:[1,33],29:[1,34]},{36:[1,35]},o($V5,[2,26]),{19:[1,36],29:[1,37]},o($V4,[2,28],{11:[1,38]}),{15:[1,39]},o($V6,[2,24]),{9:[1,40]},{9:[1,47],21:49,37:41,39:42,40:48,41:43,42:44,43:[1,45],44:46,46:$V7,50:$V8,51:$V9},o($V6,[2,22]),{9:[1,53]},{10:[1,54]},o($V4,[2,31]),{19:[1,55]},{9:[1,63],21:49,38:[1,56],39:57,40:58,41:59,42:60,43:[1,61],44:62,46:$V7,50:$V8,51:$V9},o($Va,[2,42]),o($Va,[2,43]),o($Va,[2,44]),{32:[1,64]},o($Va,[2,46]),{11:$Vb,12:[1,65],17:$Vc,45:$Vd},o($Va,[2,48]),{17:[1,68]},{12:[1,69]},{12:[1,70]},{9:[1,71]},{19:[1,72]},{15:[1,73]},o($V6,[2,25]),o($V1,[2,34]),o($Va,[2,35]),o($Va,[2,36]),o($Va,[2,37]),o($Va,[2,38]),{32:[1,74]},o($Va,[2,40]),{11:$Vb,12:[1,75],17:$Vc,45:$Vd},o($Va,[2,45]),{14:[1,76]},o($Va,[2,51]),{5:$Ve,8:78,9:$Vf,10:$Vg,12:[1,77]},{5:$Ve,8:82,9:$Vf,10:$Vg},{5:$Ve,8:83,9:$Vf,10:$Vg},{52:[1,84],54:[1,85]},{32:[1,86]},o($V6,[2,23]),o($V4,[2,29]),o($Va,[2,39]),{14:[1,87]},{32:[1,88]},{13:[1,89]},{15:[1,90]},o($Vh,[2,5],{11:[1,91]}),o($Vh,[2,6]),{10:[1,92]},{3:93,4:$Vi,5:$Vj,6:$Vk,7:$Vl,32:[1,94]},{16:99,17:[1,100],18:[1,101],19:[1,102],20:[1,103]},{33:[1,104]},{33:[1,105]},{9:[1,107],21:113,42:109,43:[1,110],44:111,46:$Vm,47:106,48:112,49:108,50:$V8,51:$V9},{32:[1,115]},o($Va,[2,47]),{14:[1,116]},{17:[2,17]},{5:$Ve,8:118,9:$Vf,10:$Vg,12:[1,117]},o($Vh,[2,7]),{5:$Ve,8:119,9:$Vf,10:$Vg},o($Va,[2,50]),o($Vn,[2,1]),o($Vn,[2,2]),o($Vn,[2,3]),o($Vn,[2,4]),{5:$Ve,8:120,9:$Vf,10:$Vg},{17:[1,121]},{17:[1,122]},o($Vn,[2,15],{17:[1,123]}),o($Vn,[2,14],{17:[1,124]}),{12:[1,125]},{12:[1,126]},{9:[1,127],21:113,42:130,43:[1,131],44:132,46:$Vm,48:128,49:129,50:$V8,51:$V9},{11:$Vb,12:[1,134],17:$Vc,45:[1,133]},o($Vo,[2,60]),o($Vo,[2,61]),{32:[1,135]},o($Vo,[2,63]),o($Vo,[2,65]),{17:[1,136]},{9:[1,137]},o($Va,[2,41]),{5:$Ve,8:138,9:$Vf,10:$Vg},{13:[1,139]},{15:[1,140]},{32:[1,141]},{14:[1,142]},o($Vn,[2,10]),o($Vn,[2,11]),o($Vn,[2,12]),o($Vn,[2,13]),{53:[1,143]},{53:[1,144]},{11:$Vb,12:[1,146],17:$Vc,45:[1,145]},o($Vo,[2,54]),o($Vo,[2,55]),o($Vo,[2,56]),{32:[1,147]},o($Vo,[2,58]),o($Va,[2,53]),{14:[1,148]},o($Vo,[2,62]),{5:$Ve,8:149,9:$Vf,10:$Vg},{32:[1,150]},{15:[1,151]},{14:[1,152]},o($Vh,[2,9]),o($Va,[2,49]),{46:[1,153]},{14:[1,154]},{14:[1,155]},o($Va,[2,52]),{14:[1,156]},o($Vo,[2,57]),{32:[1,157]},{3:158,4:$Vi,5:$Vj,6:$Vk,7:$Vl,32:[1,159]},o($Vo,[2,66]),{17:[2,16]},{5:$Ve,8:160,9:$Vf,10:$Vg},{9:[1,161]},{5:$Ve,8:162,9:$Vf,10:$Vg},{5:$Ve,8:163,9:$Vf,10:$Vg},{32:[1,164]},o($Vo,[2,64]),{5:$Ve,8:165,9:$Vf,10:$Vg},o($Vo,[2,68]),{15:[1,166]},{32:[1,167]},{14:[1,168]},{14:[1,169]},o($Vo,[2,59]),{32:[1,170]},o($Vh,[2,8]),o($Va,[2,69]),{32:[1,171]},{32:[1,172]},o($Vo,[2,67]),o($Va,[2,70]),o($Va,[2,71])],\r\ndefaultActions: {3:[2,20],13:[2,19],90:[2,17],151:[2,16]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {Asignacion} = require(\"../Optimizador/Asignacion\");\r\n    const {Condicional} = require(\"../Optimizador/Condicional\");\r\n    const {OptimizadorMirilla} = require(\"../Optimizador/OptimizadorMirilla\");\r\n    var texto = \"\";\r\n    var textoaux = \"\";\r\n    var Optim = new OptimizadorMirilla();\r\n    var textrep = \"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/*skip single line comments*/\r\nbreak;\r\ncase 1:/*skip multi line comments*/\r\nbreak;\r\ncase 2:/* skip whitespace */\r\nbreak;\r\ncase 3:return 45;\r\nbreak;\r\ncase 4:return 17;\r\nbreak;\r\ncase 5:return 4;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 6;\r\nbreak;\r\ncase 8:return 7;\r\nbreak;\r\ncase 9:return 32;\r\nbreak;\r\ncase 10:return 28;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 19;\r\nbreak;\r\ncase 13:return 29;\r\nbreak;\r\ncase 14:return 11;\r\nbreak;\r\ncase 15:return 15;\r\nbreak;\r\ncase 16:return 33;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:return 14;\r\nbreak;\r\ncase 19:return 36;\r\nbreak;\r\ncase 20:return 38;\r\nbreak;\r\ncase 21:return 18;\r\nbreak;\r\ncase 22:return '%';\r\nbreak;\r\ncase 23:return 30;\r\nbreak;\r\ncase 24:return 35;\r\nbreak;\r\ncase 25:return 43;\r\nbreak;\r\ncase 26:return 13;\r\nbreak;\r\ncase 27:return 50;\r\nbreak;\r\ncase 28:return 46;\r\nbreak;\r\ncase 29:return 51;\r\nbreak;\r\ncase 30:return 53;\r\nbreak;\r\ncase 31:return 52;\r\nbreak;\r\ncase 32:return 54;\r\nbreak;\r\ncase 33:return 9;\r\nbreak;\r\ncase 34:return 10;\r\nbreak;\r\ncase 35:return 'random';\r\nbreak;\r\ncase 36:return 25;\r\nbreak;\r\ncase 37:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[/][/][^\\n]*)/i,/^(?:[/][*][^*/]*[*][/])/i,/^(?:\\s+)/i,/^(?::)/i,/^(?:=)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:;)/i,/^(?:#)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\.)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:,)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:!)/i,/^(?:%)/i,/^(?:double\\b)/i,/^(?:void\\b)/i,/^(?:return\\b)/i,/^(?:int\\b)/i,/^(?:if\\b)/i,/^(?:goto\\b)/i,/^(?:printf\\b)/i,/^(?:char\\b)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = c3dgrammar;\r\nexports.Parser = c3dgrammar.Parser;\r\nexports.parse = function () { return c3dgrammar.parse.apply(c3dgrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Entorno } from \"../xmlAST/Entorno\";\r\nimport { traduccion } from './traduccion';\r\n\r\nexport function traducirXml(ast) {\r\n    traducirXmlRecursive(ast[0]);\r\n    //printText(ast[0]);\r\n}\r\n//TRADUCCION DE XML********************************************\r\nexport function traducirXmlRecursive(raiz: Entorno) {\r\n    traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n    traduccion.stackCounter++;\r\n    //traduccion.t++;\r\n    raiz.SP_ID = traduccion.stackCounter;\r\n    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n    traduccion.setTranslate(\"\");\r\n    traduccion.setTranslate(\"//Identificador de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n    for (let i = 0; i < raiz.identificador.length; i++) {\r\n        traduccion.setTranslate(\"heap[(int)H] = \" + raiz.identificador.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.identificador[i].toString());\r\n        traduccion.setTranslate(\"H = H + 1;\");\r\n        if (i + 1 === raiz.identificador.length) {\r\n            traduccion.setTranslate(\"heap[(int)H] = -1;\"  + \"\\t\\t//FIN DE CADENA\");\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n        }\r\n    }\r\n    if (raiz.texto.length!==0) {\r\n        traduccion.stackCounter++;\r\n        raiz.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"\\n\");\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Texto de nodo: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n        for (let i = 0; i < raiz.texto.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + raiz.texto.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.texto[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === raiz.texto.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    for (const simbolo of raiz.listaSimbolos) {\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_ID = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Simbolo \" + simbolo.identificador.toString() + \" de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\")\r\n        for (let i = 0; i < simbolo.identificador.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.identificador.charCodeAt(i) + \";\"  + \"\\t\\t//Caracter \" + simbolo.identificador[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.identificador.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n        simbolo.valor=simbolo.valor.replaceAll(\"\\\"\",\"\");\r\n        simbolo.valor=simbolo.valor.replaceAll(\"'\",\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Valor de \" + simbolo.identificador + \"\\t--------------\");\r\n        for (let i = 0; i < simbolo.valor.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.valor.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + simbolo.valor[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.valor.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    traduccion.setTranslate(\"\\n\");\r\n    for (const key in raiz.listaEntornos) {\r\n        //traduccion.stackCounter++;\r\n        traducirXmlRecursive(raiz.listaEntornos[key]);\r\n    }\r\n}\r\n//CREACION DEL METODO printString******************************\r\n/*export function createPrintText() {\r\n    traduccion.setPrintString(\"//Metodo printString\\t--------------\");\r\n    traduccion.setPrintString(\"void printString() {\");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = S+1; \");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\");\r\n    \r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\"); //L0\r\n    traduccion.etiquetaCounter++;\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\");\r\n    traduccion.setPrintString(\"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\"); //L1\r\n    traduccion.setPrintString(\"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\");\r\n    traduccion.setPrintString(\"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\");\r\n    traduccion.setPrintString(\"goto L\"+(traduccion.etiquetaCounter-1)+\";\");\r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\");\r\n    traduccion.setPrintString(\"return;\");\r\n    traduccion.setPrintString(\"}\");\r\n    traduccion.setPrintString(\"\");\r\n    //traduccion.printString = true;\r\n}*/\r\n//LLAMADA AL METODO printString********************************\r\nexport function printText(raiz: Entorno) {\r\n    //if (traduccion.printString===false) {createPrintText();}\r\n    if (raiz.texto!==\"\") {\r\n        traduccion.setTranslate(\"//Imrpimir texto de: \" + raiz.identificador + \"\\t--------------\")\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+raiz.SP_VAL+\"];\");\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n        traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\"+(traduccion.t-1)+\";\");\r\n        traduccion.t++;\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printString();\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t +\" = stack[(int)S];\");\r\n        traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n        traduccion.setTranslate(\"\");\r\n        \r\n    }\r\n    /*for (const r of raiz.listaEntornos) {\r\n        printText(r);\r\n    }*/\r\n}\r\n//TRADUCCION DE CONSULTA XPATH*********************************\r\nexport function TraducirXPATH(query) {\r\n    createConsultaXPATH();\r\n    \r\n}\r\n//CREACION DEL METODO ConsultaXPATH****************************\r\nexport function createConsultaXPATH() {\r\n    traduccion.setConsultaXPATH(\"//Metodo ConsultaXPATH\\t--------------\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"}\");\r\n    traduccion.setConsultaXPATH(\"\");\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { traducirXml, TraducirXPATH } from \"../Traduccion/xml3d\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\nimport { traduccion } from '../Traduccion/traduccion';\r\nimport { EntornoXQuery } from '../xqueryAST/AmbientesXquery/EntornoXQuery';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\nconst parseXQuery = require('../Grammar/xQueryGrammar');\r\nconst parseC3D = require('../Grammar/C3DGrammar');\r\n\r\n\r\n\r\nconst utf8 = require('utf8');\r\n\r\nexport default class Main extends Component {\r\n    \r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        xquery: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repErrorXPATH: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: '',\r\n        repOptimizaciones: ''\r\n    }\r\n\r\n    /*parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let RepErrorXPATHASC = '';\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n    //XML------------------------------------------------------------------------\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n\r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n    //XPATH---------------------------------------------------------------------------\r\n        try {\r\n            const querys = parseXPATH.parse(this.state.xpath)\r\n            var querysXpath = querys.xpath;\r\n            console.log(querysXpath);\r\n            var erroresXpath = querys.listaErrores;\r\n        //REPORTE AST y ERRORES PARA XPATH************************************************************\r\n            if (erroresXpath.length === 0) {\r\n                for (const key in querysXpath) {\r\n                    texto = querysXpath[key].GraficarAST(texto);\r\n                    if (indice < querysXpath.length) {\r\n                        texto += \"nodo\" + key.toString() + \"[label=\\\"|\\\"];\\n\"\r\n                        texto += \"nodo\" + querysXpath[key].line.toString() + \"_\" + querysXpath[key].column.toString() + \"->nodo\" + key.toString() + \";\\n\";\r\n                        texto += \"nodo\" + key.toString() + \"->nodo\" + querysXpath[indice].line.toString() + \"_\" + querysXpath[indice].column.toString() + \";\\n\";\r\n                        indice++;\r\n                    }\r\n                }\r\n                this.setState({\r\n                    repAstXpath: \"digraph G {\" + texto + \"}\",\r\n                });\r\n            } else {\r\n                console.log(erroresXpath.length)\r\n                this.setState({\r\n                    repErrorXPATH: \"digraph G {\" + crearTextoReporteErrorXML(erroresXpath, RepErrorXPATHASC) + \"}\"\r\n                })\r\n            }\r\n\r\n            console.log(texto);\r\n\r\n            this.setState({\r\n                repAstXpath: \"digraph G {\" + texto + \"}\",\r\n            });\r\n\r\n        //EJECUCION DE XPATH----------------------------------------------------------------------------------------------------------------------------------------------\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querysXpath) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            if (encoding === \"UTF-8\") {\r\n                this.setState({\r\n                    consoleResult: utf8.encode(salida),\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    consoleResult: salida,\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }*/\r\n\r\n//TRADUCCION DE XPATH----------------------------------------------------------------------------------------------------------------------------------------------\r\n    traducir = () => {\r\n        if (this.state.xml===\"\") {\r\n            return;\r\n        }\r\n        \r\n        const result = parser.parse(this.state.xml);\r\n        const querys = parseXPATH.parse(this.state.xpath);\r\n        var querysXpath = querys.xpath;\r\n        var ast = result.ast;\r\n        var respuesta = \"\";\r\n        console.log(querysXpath);\r\n        traducirXml(ast);\r\n        for (const query of querysXpath) {\r\n            try {\r\n                respuesta += query.execute(ast[0]).value;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        this.setState({\r\n            consoleResult: \"//CONSULTA-----------------\\n\\n|*\\n\" + respuesta + \"*|\\n\\n//TRADUCCION-----------------\\n\\n\" + traduccion.getTranslate(),\r\n        });\r\n    }\r\n\r\n//METODO PARA QUE DEIVID EJECUTE XQUERY################################################################\r\n    executeXquery = () =>{\r\n        \r\n        const result = parser.parse(this.state.xml)\r\n        var ast = result.ast;\r\n\r\n        const astXquery = parseXQuery.parse(this.state.xquery);\r\n        var salida = \"\";\r\n        \r\n        var nvoEntorno = new EntornoXQuery(null);\r\n\r\n        for (const xquery of astXquery) {\r\n            try {\r\n                salida += xquery.executeXquery(nvoEntorno, ast[0]).value + \"\\n\";\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        this.setState({\r\n            consoleResult: salida,\r\n        });\r\n\r\n    }\r\n    //######################################################################################################\r\n\r\n    optimizar = () => {\r\n        //const optimizado = parseC3D.parse(this.state.xml);\r\n        const optimizado = parseC3D.parse(this.state.consoleResult);\r\n        this.setState({\r\n            consoleResult: \"//OPTIMIZACION-----------------\\n\"+optimizado.Optimizado,\r\n        });\r\n        this.setState({\r\n            repOptimizaciones: \"digraph G {\" + optimizado.TextGraphviz + \"}\",\r\n        });\r\n    }\r\n\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    handleFileChangeXpath = file => {\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXPATH\r\n            })\r\n        } else if (e.target.value === \"Reporte de Optimizaciones\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repOptimizaciones\r\n            })\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"XPATH AREA\"\r\n                                value={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.traducir}>TRANSALATE XPATH</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.executeXquery}>EXECUTE XQUERY</Button>\r\n                        </Col>\r\n                        <Button variant=\"primary\" onClick={this.optimizar}>Optimizar</Button>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <br />\r\n                    <Row>\r\n                        <Col xs={12} md={0}>\r\n\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                                this.setState({\r\n                                    xml: e.target.value\r\n                                })\r\n                            }} />\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <Form.Control as=\"textarea\" placeholder=\"XQUERY AREA\" rows={15} value={this.state.xquery} onChange={(e: any) => {\r\n                                this.setState({\r\n                                    xquery: e.target.value\r\n                                })\r\n                            }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST XPath</option>\r\n                            <option>Reporte de errores XPath</option>\r\n                            <option>Reporte de Optimizaciones</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={30} value={this.state.consoleResult} readOnly />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/main\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/tytusx/20211SVAC/G06\">\r\n        <Route path=\"/\" exact component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import {Asignacion} from \"../Optimizador/Asignacion\";\r\nimport {Condicional} from \"../Optimizador/Condicional\";\r\nimport {Optimizado} from \"../Optimizador/Optimizado\";\r\n\r\nvar asigact;\r\nvar val1 = 0;\r\nvar val2 = 0;\r\n\r\nexport class OptimizadorMirilla{\r\n    textGraphviz:string;\r\n    Resultado:string;\r\n    ReporteCodigo:Array<Optimizado>;\r\n    NuevoVal:string;\r\n    constructor(){\r\n        this.textGraphviz = \"\";\r\n        this.Resultado = \"\";\r\n        this.ReporteCodigo = [];\r\n        this.NuevoVal = \"\";\r\n    }\r\n\r\n    Optimizar(Objeto:any) {\r\n        asigact = Objeto;\r\n        if(Objeto instanceof Asignacion) {\r\n            if (!this.Regla6_7_8_9() && !this.Regla10_11_12_13() && !this.Regla14() && !this.Regla15() && !this.Regla16()) {\r\n                return Objeto.indice + \" = \" + Objeto.operador1 + \" \" + Objeto.signo + \" \" + Objeto.operador2 + \";\\n\";\r\n            } else {\r\n                return this.NuevoVal;\r\n            }\r\n        } else if (typeof Objeto === 'string') {\r\n            this.Regla1();\r\n            return this.NuevoVal;\r\n        } else if (Objeto instanceof Condicional)   {\r\n            if (!this.Regla3()) {\r\n                return \"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\") \";\r\n            } else {\r\n                return this.NuevoVal;\r\n            }\r\n        }\r\n    }\r\n\r\n    Reset() {\r\n        asigact = \"\";\r\n        this.NuevoVal = \"\";\r\n        this.ReporteCodigo = [];\r\n    }\r\n\r\n    Regla1()    {\r\n        this.ReporteCodigo.push(new Optimizado(\"1\",asigact,\"Se elimina la instruccion\"));\r\n        this.NuevoVal = \"\";\r\n        return false;\r\n    }\r\n\r\n    Regla2()    {\r\n        return false;\r\n    }\r\n    \r\n    Regla3()    {\r\n        try {\r\n            val1 = parseInt(asigact.operando1);\r\n            val2 = parseInt(asigact.operando2);\r\n            if(asigact.comparacion === \"==\") {\r\n                if (asigact.operando1 === asigact.operando2) {\r\n                    this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                    this.NuevoVal = \"\";\r\n                    return true;\r\n                }\r\n                return false;\r\n            } else if (asigact.comparacion === \"!=\") {\r\n                if (asigact.operando1 !== asigact.operando2) {\r\n                    this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                    this.NuevoVal = \"\";\r\n                    return true;\r\n                }\r\n                return false;\r\n            } else if (asigact.comparacion === \">=\") {\r\n                if (asigact.operando1 >= asigact.operando2) {\r\n                    this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                    this.NuevoVal = \"\";\r\n                    return true;\r\n                }\r\n                return false;\r\n            } else if (asigact.comparacion === \"<=\") {\r\n                if (asigact.operando1 <= asigact.operando2) {\r\n                    this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                    this.NuevoVal = \"\";\r\n                    return true;\r\n                }\r\n                return false;\r\n            } else if (asigact.comparacion === \"<\") {\r\n                if (asigact.operando1 < asigact.operando2) {\r\n                    this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                    this.NuevoVal = \"\";\r\n                    return true;\r\n                }\r\n                return false;\r\n            } else if (asigact.comparacion === \">\") {\r\n                if (asigact.operando1 > asigact.operando2) {\r\n                    this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                    this.NuevoVal = \"\";\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            return false;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    Regla4()    {\r\n        return false;\r\n    }\r\n    \r\n    Regla5()    {\r\n        return false;\r\n    }\r\n    \r\n    Regla6_7_8_9()    {\r\n        if (asigact.indice === asigact.operador1) {\r\n            if (asigact.operador2 === \"0\" && asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"6\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"-\" && asigact.operador2 === \"0\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"7\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"*\" && asigact.operador2 === \"1\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"8\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"/\" && asigact.operador2 === \"1\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"9\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            }\r\n            return false;\r\n        } else if (asigact.indice === asigact.operador2) {\r\n            if (asigact.operador1 === \"0\" && asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"6\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"*\" && asigact.operador1 === \"1\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"8\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla10_11_12_13()    {\r\n        if (asigact.operador2 === \"0\" && asigact.operador1 !== asigact.indice) {\r\n            if (asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"10\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            } else if (asigact.signo === \"-\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"11\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            } \r\n            return false;\r\n        } else if (asigact.operador1 === \"0\" && asigact.operador2 !== asigact.indice) {\r\n            if (asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"10\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador2 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador2 + \";\\n\";\r\n                return true;\r\n            } \r\n            return false;\r\n        } else if (asigact.operador2 === \"1\" && asigact.operador1 !== asigact.indice) {\r\n            if (asigact.signo === \"*\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"12\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            } else if (asigact.signo === \"/\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"13\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            }\r\n        } else if (asigact.operador1 === \"1\" && asigact.operador2 !== asigact.indice) {\r\n            if (asigact.signo === \"*\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"12\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador2 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador2 + \";\\n\";\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla14()    {\r\n        if (asigact.operador2 === \"2\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"14\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \"*\" + asigact.operador1 + \";\"));\r\n            this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \" \" + asigact.signo + \" \" + asigact.operador1 + \";\\n\";\r\n            return true;\r\n        } else if (asigact.operador1 === \"2\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"14\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador2 + \"*\" + asigact.operador2 + \";\"));\r\n            this.NuevoVal = asigact.indice + \" = \" + asigact.operador2 + \" \" + asigact.signo + \" \" + asigact.operador2 + \";\\n\";\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla15()    {\r\n        if (asigact.operador2 === \"0\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"15\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=0;\"));\r\n            this.NuevoVal = asigact.indice + \" = 0;\\n\";\r\n            return true;\r\n        } else if (asigact.operador1 === \"0\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"15\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=0;\"));\r\n            this.NuevoVal = asigact.indice + \" = 0;\\n\";\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla16()    {\r\n        if (asigact.operador1 === \"0\" && asigact.signo === \"/\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"16\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=0;\"));\r\n            this.NuevoVal = asigact.indice + \" = 0;\\n\";\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    GenerarGraphviz() {\r\n        console.log(this.ReporteCodigo);\r\n        this.textGraphviz = \"\";\r\n        this.textGraphviz += \"node0[shape=record label=\\\"{Numero\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + key;\r\n        }\r\n        this.textGraphviz += \"}|{Regla\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + this.ReporteCodigo[key].regla;\r\n        }\r\n        this.textGraphviz += \"}|{Original\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + this.ReporteCodigo[key].original;\r\n        }\r\n        this.textGraphviz += \"}|{Optimizado\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + this.ReporteCodigo[key].optimizado;\r\n        }\r\n        this.textGraphviz += \"}\\\"];\";\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","export class Optimizado{\r\n    regla:string;\r\n    original:string;\r\n    optimizado:string;\r\n\r\n    constructor(regla:string,original:string,signo:string){\r\n        this.regla = regla;\r\n        this.original = original;\r\n        this.optimizado = signo;\r\n    }\r\n\r\n}"],"sourceRoot":""}