{"version":3,"sources":["Traduccion/traduccion.tsx","xpathAST/Expresiones/Primitivo.tsx","xqueryAST/ExpresionesXpath/Primitivo.tsx","xmlAST/ClaseError.tsx","Reportes/NodoCST.tsx","xqueryAST/manejadores/showXquery.tsx","xmlAST/Entorno.tsx","xqueryAST/ExpresionesXpath/Path.tsx","Grammar/xmlGrammar.js","xmlAST/Simbolo.tsx","Reportes/xmlReport.js","Grammar/XPATHparser.js","xpathAST/Expresiones/Acceso.tsx","xpathAST/Expresiones/Aritmetico.tsx","xpathAST/Expresiones/Logica.tsx","xpathAST/Expresiones/Path.tsx","xpathAST/Expresiones/Relacional.tsx","Grammar/xQueryGrammar.js","xqueryAST/ExpresionesXpath/Acceso.tsx","xqueryAST/ExpresionesXpath/Aritmetico.tsx","xqueryAST/ExpresionesXpath/Logica.tsx","xqueryAST/ExpresionesXpath/Relacional.tsx","xqueryAST/ExpresionesXquery/Let.tsx","xqueryAST/ExpresionesXquery/MultiXpaths.tsx","xqueryAST/ExpresionesXquery/Return.tsx","xqueryAST/ExpresionesXquery/XqueryPath.tsx","Reportes/SimboloTabla.tsx","Traduccion/xml3d.tsx","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["traduccion","content","this","t","i","toString","printString","metodoConsultaXPATH","compararCadenas3d","etiquetaTexto","etiquetaApertura","etiquetaCierre","etiquetaUnitaria","verificarAtributo","etiquetaAtributo","tranlate","etiquetaCounter","stackCounter","tipoPrimitivo","Primitivo","line","column","valor","ent","simboloPadre","NUMBER","setTranslate","Number","value","type","SP","STRING","String","undefined","pos","last","Error","texto","entAct","RaizXML","ClaseError","tipo","error","linea","columna","crearTextoReporteErrorXML","listaErr","key","nuevo","NodoCST","nombre","indice","listaNodos","Nombre","lista","push","crearTextoGraphvizCST","padre","length","crearTextoGraphvizRepGram","producciones","reglas","showXquery","salida","salidaTexto","listNodes","conten","element","NODO","concat","construirNodos","unirSalida","entPadre","tab","atributos","listaSimbolos","atri","identificador","replaceAll","listaEntornos","entActual","Entorno","id","listaE","SP_ID","SP_VAL","asignarPosEnts","asignarPosSimb","index","idAtrubito","Simbolo","Path","L_Accesos","tipoPath","newL_Acc","acceso","tipoAcceso","pop","validarAntecesores","validarPredicadosRaiz","getQuery","tipoQuery","RESP","posActAcceso","getAtributo","validarPredicadosAtri","entChiild","construirTodosAtributos","construirTodosTextos","validarPredicadosNodos","predicados","result","execute","GraficarAST","xmlGrammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","parser","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","listaErrores","ast","encoding","$","first_line","first_column","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","loc","Array","last_line","last_column","range","apply","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","console","log","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","txtGramProdAux","txtGramRegSemAux","ReporteGramatical","ReporteCST","44","XPATHparser","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","29","30","31","32","33","34","35","36","37","38","39","40","41","43","45","46","47","xpath","Acceso","Aritmetico","operacionAritmetica","SUMA","RESTA","MULT","DIV","MOD","Relacional","operacionRelacional","IGUAL","DIFERENCIACION","MENOR","MENORIGUAL","MAYOR","MAYORIGUAL","Logica","operacionLogica","AND","OR","28","42","tmp","SP_id","SP_tipoAcceso","hijoIzq","hijoDer","tipoOperacion","sym","valorIzq","valorDer","BOOL","nuevaL_Accesos","insertarConsulta","metodoCompararCadenas","metodoVerificarAtributo","crearAtributoEtiqueta","crearPrintString","crearEtiquetaApertura","crearEtiquetaCierre","crearEtiquetaTexto","charCodeAt","valIzq","valDer","validar","xQueryGrammar","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","48","49","50","51","52","53","54","55","56","57","59","60","61","MultiXpaths","Return","accesos","Let","XqueryPath","58","idVar","path","existeLocalVar","executeXquery","guaradarVar","paths","buildXquery","L_Xqueys","varFind","getVar","SimboloTabla","ambito","re","re2","re3","newstr","crearTablaSimbolos","resultado","entorno","crearTextoGraphvizTablaSimbolos","traducirXml","traducirXmlRecursive","simbolo","parserReport","parseXPATH","utf8","Main","consoleResult","xml","xquery","repcsttxt","repgramtxt","repErrorXML","repErrorXPATH","repTablaSimbolos","repAstXpath","graphvizContent","entornoGlobal","xmlResRep","setState","alert","querys","querysXpath","erroresXpath","erroresSemanticos","query","encode","traducir","respuesta","getTranslate","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","Row","Col","xs","md","Form","Control","placeholder","Button","variant","as","rows","Group","name","size","Graphviz","dot","height","width","zoom","readOnly","Component","App","basename","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9601277c.chunk.js","sourcesContent":["export class traduccion {\r\n    static t: number = -1;\r\n    static stackCounter: number = -1;\r\n    static etiquetaCounter: number = 0;\r\n    static tranlate: string = \"\";\r\n    //static printString: boolean = false;\r\n    //static metodostring:string = \"\";\r\n    static metodoConsultaXPATH:string = \"\";\r\n    static compararCadenas3d:string=\"\";\r\n    static etiquetaTexto:string=\"\";\r\n    static etiquetaApertura:string=\"\";\r\n    static etiquetaCierre:string=\"\";\r\n    static etiquetaUnitaria:string=\"\";\r\n    static etiquetaAtributo:string=\"\";\r\n    static verificarAtributo:string=\"\";\r\n    static printString:string=\"\";\r\n\r\n    public static getTranslate(): string {\r\n        var content: string = \"\";\r\n        content += \"//Header\\t--------------\\n\";\r\n        content += \"#include <stdio.h>\\n\\n\";\r\n        content += \"double heap[30101999];\\n\";\r\n        content += \"double stack[30101999];\\n\\n\";\r\n        content += \"double S;\\n\";\r\n        content += \"double H;\\n\\n\";\r\n        if (this.t > 0) {\r\n            content += \"double \";\r\n            for (let i = 0; i < this.t+1; i++) {\r\n                content += \"t\" + i.toString();\r\n                if (i < this.t) {\r\n                    content += \", \";\r\n                }\r\n            }\r\n            content += \";\\n\\n\";\r\n        }\r\n        //content += this.metodostring;\r\n        content += this.printString;\r\n        content += this.metodoConsultaXPATH;\r\n        content += this.compararCadenas3d;\r\n        content += this.etiquetaTexto;\r\n        content += this.etiquetaApertura;\r\n        content += this.etiquetaCierre;\r\n        content += this.etiquetaUnitaria;\r\n        content += this.verificarAtributo;\r\n        content += this.etiquetaAtributo;\r\n        content += \"//Metodo Main\\t--------------\\n\";\r\n        content += \"void main(){\\n\";\r\n        content += \"S = 0; H = 0;\\n\\n\";\r\n        content += this.tranlate;\r\n        content += \"\\nL0:\\n\";\r\n        content += \"\\nreturn;\\n\";\r\n        content += \"}\";\r\n        return content;\r\n    }\r\n\r\n    public static setTranslate(content: string) {\r\n        this.tranlate += content + \"\\n\";\r\n    }\r\n\r\n    /*public static setPrintString(content:string) {\r\n        this.metodostring += content + \"\\n\";\r\n    }*/\r\n\r\n    public static setConsultaXPATH(content:string) {\r\n        this.metodoConsultaXPATH += content + \"\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO comparar cadenas****************************\r\n    public static metodoCompararCadenas() {\r\n        this.compararCadenas3d += \"//Metodo Comparar cadenas\\t--------------\\n\\n\";\r\n        this.compararCadenas3d += \"void compararCadenas() {\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.t++;\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"!=t\"+(traduccion.t-1)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-5)+\" = t\"+(traduccion.t-5)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==t\"+(traduccion.t-2)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-2)+\":\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 1;\\n\";\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.compararCadenas3d += \"return;\\n\";\r\n        this.compararCadenas3d += \"}\\n\\n\";\r\n        //traduccion.t++;\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir nodo Texto**********\r\n    public static crearEtiquetaTexto() {\r\n        this.etiquetaTexto += \"//Metodo etiqueta texto\\t--------------\\n\\n\";\r\n        this.etiquetaTexto += \"void crearEtiquetaTexto() {\\n\";\r\n        //Obtiene posiciones\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir NODOTEXTO\r\n        this.etiquetaTexto += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimirt </\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)60);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)47);\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-5)+\" = S + 1;\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4) + \" = stack[(int)t\"+(traduccion.t-5)+\"];\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1) + \" = heap[(int)t\"+(traduccion.t-4)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t-1)+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4)+\" = t\"+(traduccion.t-4)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imrprimir >\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)62);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)10);\\n\";\r\n        this.etiquetaTexto += \"return;\\n\";\r\n        this.etiquetaTexto += \"}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta apertura*********************\r\n    public static crearEtiquetaApertura() {\r\n        this.etiquetaApertura += \"//Metodo Etiqueta apertura\\t--------------\\n\\n\";\r\n        this.etiquetaApertura += \"void crearEtiquetaApertura() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaApertura += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaApertura += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaApertura += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta cierre*********************\r\n    public static crearEtiquetaCierre() {\r\n        this.etiquetaCierre += \"//Metodo Etiqueta Cierre\\t--------------\\n\\n\";\r\n        this.etiquetaCierre += \"void crearEtiquetaCierre() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\"; \r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaCierre += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaCierre += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\";   \r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\";  \r\n        this.etiquetaCierre += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static crearAtributoEtiqueta() {\r\n        this.etiquetaAtributo += \"//Metodo Obtener Atributo\\t--------------\\n\";\r\n        this.etiquetaAtributo += \"void crearAtributoEtiqueta() {\\n\";\r\n        //Obetener posiciones----------\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo+= \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir espacio en blanco-----------\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)32);\\t\\t// \\' \\'\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        //this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\"= t\"+ (traduccion.t-3)+\" + 1;\\n\"\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir =\"\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)61);\\t\\t// =\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        //Obtener ID2\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-2)+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir \" y fin\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        this.etiquetaAtributo += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static metodoVerificarAtributo() {\r\n        this.verificarAtributo += \"//Metodo verificar atributo\\t--------------\\n\\n\";\r\n        this.verificarAtributo += \"void verificarAtributo() {\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";        \r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"if(t\"+(traduccion.t)+\"==64) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 1;\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.verificarAtributo += \"return;\\n\";\r\n        this.verificarAtributo += \"}\\n\\n\";\r\n    }\r\n\r\n    public static crearPrintString() {\r\n        traduccion.printString += \"//Metodo printString\\t--------------\\n\\n\";\r\n        traduccion.printString += \"void printString() {\\n\";\r\n        traduccion.t++;\r\n        traduccion.printString += \"t\"+traduccion.t+\" = S+1;\\n\";\r\n        traduccion.t++;\r\n        traduccion.printString += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        traduccion.t++;\r\n        traduccion.printString += \"L\"+traduccion.etiquetaCounter+\":\\n\"; //L0\r\n        traduccion.printString += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        traduccion.printString += \"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\\n\"; //L1\r\n        traduccion.printString += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        traduccion.printString += \"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\\n\";\r\n        traduccion.printString += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        traduccion.printString += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.printString += \"return;\\n\";\r\n        traduccion.printString += \"}\\n\\n\";\r\n    }\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    ATRI,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public valor: any,\r\n        public tipoPrimitivo?: tipoPrimitivo) { }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo numero\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(this.valor) + \";\");\r\n            //###############################################################################################################\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n        } else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING, SP: -1 };\r\n        } else if (this.valor === \"position\") {\r\n\r\n            if (simboloPadre !== undefined) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo posicion\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(simboloPadre.pos) + \";\");\r\n                //###############################################################################################################\r\n                return { value: simboloPadre.pos, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            } else {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo posicion\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(ent.pos) + \";\");\r\n                //###############################################################################################################\r\n                return { value: ent.pos, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            }\r\n\r\n        } else if (this.valor === \"last\") {\r\n\r\n            if (simboloPadre !== undefined) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo last\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(simboloPadre.last) + \";\");\r\n                //###############################################################################################################\r\n                return { value: simboloPadre.last, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            } else {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo last\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(ent.last) + \";\");\r\n                //###############################################################################################################\r\n                return { value: ent.last, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { ExpressionXquery } from '../../Interfaces/ExpressionXquery';\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression, ExpressionXquery{\r\n    \r\n    constructor (\r\n    public line : Number, \r\n    public column : Number, \r\n    public valor : any, \r\n    public tipoPrimitivo? : tipoPrimitivo) {}\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER, SP: -1 };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING, SP: -1 };\r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo) : Retorno {\r\n        \r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER, SP: -1 };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING, SP: -1 };\r\n        }else if (this.valor === \"position\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.pos, type: tipoPrimitivo.NUMBER, SP: -1}\r\n            }else {\r\n                return {value: ent.pos, type: tipoPrimitivo.NUMBER, SP: -1}\r\n            }\r\n\r\n        }else if (this.valor === \"last\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.last, type: tipoPrimitivo.NUMBER, SP: -1}\r\n            }else {\r\n                return {value: ent.last, type: tipoPrimitivo.NUMBER, SP: -1}\r\n            }\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { tipoPrimitivo } from \"../../xpathAST/Expresiones/Primitivo\";\r\n\r\nexport class showXquery {\r\n\r\n    static unirSalida (salida : string[]) : string{\r\n\r\n        let salidaTexto : string = \"\"\r\n        for (const element of salida) {\r\n            salidaTexto += element\r\n        }\r\n        return salidaTexto;\r\n    }\r\n\r\n    static buildXquery (listNodes: Retorno[]) : string{\r\n\r\n        let conten : string [] = []\r\n        for (const element of listNodes) {\r\n            \r\n            if (element.type === tipoPrimitivo.NODO){\r\n                conten.concat(this.construirNodos(element.value, \"\")); \r\n            }else {\r\n                conten.push(element.value+ \"\\n\");\r\n            }\r\n        }\r\n        return this.unirSalida(conten);\r\n\r\n    }\r\n\r\n    static construirNodos(entPadre: Entorno, tab : string): string [] {\r\n\r\n        var atributos = \"\";\r\n        var content : string[] = [];\r\n\r\n        for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n            atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n        }\r\n\r\n        //construyo Nodos\r\n        if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n            content.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n        }\r\n        else if(entPadre.listaEntornos.length > 0){\r\n\r\n            content.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                content.concat(this.construirNodos(entActual, tab + \"   \"));    //         //nombre  /biblio/libro//nombre             \r\n            }\r\n            content.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n        \r\n        } else{\r\n            content.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n        }\r\n        return content;\r\n    }\r\n\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last : number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n        this.asignarPosEnts();\r\n        this.asignarPosSimb();\r\n    }\r\n    \r\n    private asignarPosEnts(){\r\n        for (let index = 0; index < this.listaEntornos.length; index++) {\r\n            this.listaEntornos[index].last = this.listaEntornos.length\r\n            this.listaEntornos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    private asignarPosSimb(){\r\n        for (let index = 0; index < this.listaSimbolos.length; index++) {\r\n            this.listaSimbolos[index].last = this.listaSimbolos.length;\r\n            this.listaSimbolos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso} from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport class Path implements Expression{\r\n\r\n    salida: any[];\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public L_Accesos : Acceso [],\r\n    public tipoPath ?: string\r\n    ){\r\n        this.salida=[];\r\n    }   \r\n\r\n    private validarAntecesores(): Acceso []{\r\n\r\n        let newL_Acc : Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n            \r\n            if (acceso.tipoAcceso === 'padre'){\r\n                \r\n                if (newL_Acc.length >0){\r\n                    newL_Acc.pop()\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \"+acceso.line+\"column: \"+acceso.column);\r\n                }\r\n            }else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo) :Retorno { //      /biblio\r\n\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\"){\r\n\r\n            if (this.L_Accesos.length > 0){\r\n  \r\n                if (ent.listaEntornos.length > 0){\r\n\r\n                    if (ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\") {//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n          \r\n                        if (this.validarPredicadosRaiz(ent, 0)) {\r\n    \r\n                            if(this.L_Accesos.length >  1){ //verificamos si la consutla nos dice que accediendo a descendientes\r\n                                this.getQuery(ent, 1); \r\n                            }else{\r\n                                this.construirNodos(ent, \"\")\r\n                            }\r\n                        }\r\n                    }else if (this.L_Accesos[0].tipoQuery === 'absoluta'){\r\n                        this.getQuery(ent, 0);\r\n                    }\r\n                }\r\n            }else {\r\n                this.construirNodos(ent, \"\")\r\n            }\r\n        }else {\r\n\r\n            this.salida = [];\r\n            \r\n            if (this.L_Accesos.length > 0){\r\n                this.getQuery(ent, 0, simboloPadre);\r\n            }else {\r\n                this.construirNodos(ent, \"\")\r\n            }\r\n        } \r\n        return {value: this.salida, type: tipoPrimitivo.RESP, SP: -1};\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number, simboloPadre?:Simbolo) {\r\n        \r\n        if(simboloPadre !== undefined ){ // si la consulta es una sub consulta y el padre es un atributo --> /@id[subconsulta]\r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\"){\r\n\r\n                if(this.L_Accesos.length < posActAcceso + 1){\r\n                    this.getQuery(entPadre, posActAcceso + 1, simboloPadre);\r\n                }else{\r\n\r\n                    //if (this.tipoPath === \"sub\"){\r\n                        this.salida.push({value : simboloPadre.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                    /*}else {\r\n                        this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                    }*/\r\n                } \r\n            }else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }  \r\n\r\n        }else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\"){\r\n               \r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if(atri != null){\r\n\r\n                    if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)){\r\n                    \r\n                        if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entPadre, posActAcceso + 1, atri); \r\n                        }else{\r\n\r\n                            //if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n                            /*}else{\r\n                                this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                            }*/\r\n                        }\r\n                    }\r\n                }else if(entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta') {\r\n                    \r\n                    for (const entChiild of entPadre.listaEntornos ) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entChiild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\"){\r\n\r\n                if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1){\r\n                    \r\n                    this.construirTodosAtributos(entPadre);\r\n                    \r\n                } else {\r\n\r\n                    if (entPadre.listaSimbolos.length > 0){\r\n\r\n                        for (const atri of entPadre.listaSimbolos){\r\n    \r\n                            if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)){\r\n                               \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entPadre, posActAcceso + 1, atri); \r\n                                }else{\r\n        \r\n                                    //if (this.tipoPath === \"sub\"){\r\n                                        this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n                                    /*}else{\r\n                                        this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                                    }*/\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso ==='texto'){\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1){\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n\r\n                        this.construirTodosTextos(entPadre);\r\n\r\n                    }else {\r\n                        \r\n                        if (entPadre.texto !== ''){\r\n                            //if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n                            /*}else {\r\n                                this.salida.push(entPadre.texto + '\\n');\r\n                            }*/\r\n                        }\r\n                    }\r\n                    \r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto del nodo ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" ){\r\n\r\n                if(this.L_Accesos.length >  posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entPadre, posActAcceso + 1); \r\n                }else{\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\"){\r\n\r\n                if(entPadre.listaEntornos.length > 0){\r\n                    \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        \r\n                        if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)){\r\n                    \r\n                            if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entActual, posActAcceso + 1); \r\n                            }else{\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\"){\r\n                \r\n                if(entPadre.listaEntornos.length > 0){\r\n                      \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n    \r\n                        if(entActual.identificador === this.L_Accesos[posActAcceso].id){//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n                    \r\n                            if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)){\r\n        \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entActual, posActAcceso + 1);\r\n                                }else{\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        }else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n                            this.getQuery(entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \"+this.L_Accesos[posActAcceso].tipoAcceso+\" del acceso: \"+this.L_Accesos[posActAcceso].tipoAcceso+\" no se reconoce como valido, \" + \r\n                \"linea: \"+this.L_Accesos[posActAcceso].line+\" comlumna: \"+this.L_Accesos[posActAcceso].column);\r\n            }   \r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre:Entorno){\r\n        \r\n        if (entPadre.texto !== ''){\r\n            //if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n            /*}else {\r\n                this.salida.push(entPadre.texto + '\\n');\r\n            }*/\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos(entPadre:Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos){\r\n\r\n            //if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n            /*}else{\r\n                this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n            }*/\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre:Entorno, tab : string){\r\n\r\n        //if (this.tipoPath === \"sub\"){\r\n            this.salida.push({value : entPadre , type: tipoPrimitivo.NODO})\r\n        /*}else {\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n            }\r\n\r\n            //construyo Nodos\r\n            if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if(entPadre.listaEntornos.length > 0){\r\n\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n            \r\n            } else{\r\n                this.salida.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n            }\r\n\r\n        }*/\r\n    }\r\n\r\n    private validarPredicadosAtri(entPadre: Entorno, simboloPadre:Simbolo, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n            \r\n        }\r\n        return true;\r\n    } \r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if ( result.value !== 1){\r\n                    return false;\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"-> nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\nthis.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],true);\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n            this.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],true);\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 11:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 12:\r\n\r\n            this.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 13:\r\n\r\n            listaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\n        \r\nbreak;\r\ncase 15: case 17:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column,true);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last: number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n    }\r\n\r\n\r\n\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReport = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\r\ndefaultActions: {24:[2,14],44:[2,13]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReport;\r\nexports.Parser = xmlReport.Parser;\r\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[5,6],$V3=[1,20],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,23],$Vf=[1,24],$Vg=[5,6,8,10,13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vh=[1,27],$Vi=[5,6,8,10,13,18,27,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vj=[1,48],$Vk=[1,41],$Vl=[1,42],$Vm=[1,43],$Vn=[1,44],$Vo=[1,45],$Vp=[1,46],$Vq=[1,62],$Vr=[1,60],$Vs=[1,61],$Vt=[1,63],$Vu=[1,64],$Vv=[1,65],$Vw=[1,66],$Vx=[1,67],$Vy=[1,68],$Vz=[1,69],$VA=[1,70],$VB=[1,71],$VC=[1,72],$VD=[13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$VE=[18,29,30,31,34,35,36,37,38,39,40,41],$VF=[13,18,29,30,31,32,34,35,36,37,38,39,40,41],$VG=[18,29,34,35,40,41],$VH=[18,29,34,35,36,37,38,39,40,41];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"MULTIPATH\":4,\"EOF\":5,\"|\":6,\"PATH\":7,\"/\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"..\":15,\"text\":16,\"(\":17,\")\":18,\"node\":19,\"child\":20,\"::\":21,\"descendant\":22,\"PREDICADOS\":23,\"@\":24,\"attribute\":25,\"PREDI\":26,\"[\":27,\"EXP\":28,\"]\":29,\"+\":30,\"-\":31,\"div\":32,\"mod\":33,\"=\":34,\"!=\":35,\"<\":36,\"<=\":37,\">\":38,\">=\":39,\"and\":40,\"or\":41,\"VALOR\":42,\"cadena\":43,\"scadena\":44,\"number\":45,\"position\":46,\"last\":47,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"|\",8:\"/\",10:\"//\",12:\"id\",13:\"*\",14:\".\",15:\"..\",16:\"text\",17:\"(\",18:\")\",19:\"node\",20:\"child\",21:\"::\",22:\"descendant\",24:\"@\",25:\"attribute\",27:\"[\",29:\"]\",30:\"+\",31:\"-\",32:\"div\",33:\"mod\",34:\"=\",35:\"!=\",36:\"<\",37:\"<=\",38:\">\",39:\">=\",40:\"and\",41:\"or\",43:\"cadena\",44:\"scadena\",45:\"number\",46:\"position\",47:\"last\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,1],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,2],[11,4],[11,4],[11,4],[11,4],[11,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,4],[11,4],[11,1],[23,2],[23,1],[26,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[42,3],[42,1],[42,1],[42,1],[42,3],[42,3],[42,1],[42,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n                                                    var listaErroresTemp = listaErrores;\r\n                                                    listaErrores = [];\r\n                                                    return {xpath: $$[$0-1],listaErrores:listaErroresTemp}\r\n                                                    \r\nbreak;\r\ncase 2:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 3: case 8: case 35:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 4:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 5:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 6:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 7:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 9:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 10:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 20:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 24:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 25:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 33:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 34:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 36: case 51:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 37:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 38:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 39:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 41:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 42:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 43:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 44:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 45:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 46:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 47:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 48:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 49:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 50:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 52: case 53:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 54:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 55: case 56:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 57:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                 this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 58:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                 this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:$V0,10:$V1},{1:[3]},{5:[1,6],6:[1,7]},o($V2,[2,3]),{2:$V3,9:8,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,9:21,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{1:[2,1]},{7:22,8:$V0,10:$V1},o($V2,[2,4],{8:$Ve,10:$Vf}),o($Vg,[2,8]),o($Vg,[2,9],{23:25,26:26,27:$Vh}),o($Vg,[2,10],{26:26,23:28,27:$Vh}),o($Vg,[2,11]),o($Vg,[2,12]),{17:[1,29]},{17:[1,30]},{21:[1,31]},{21:[1,32]},{12:[1,33],13:[1,34]},{21:[1,35]},o($Vg,[2,33]),o($V2,[2,5],{8:$Ve,10:$Vf}),o($V2,[2,2]),{2:$V3,11:36,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,11:37,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,19],{26:38,27:$Vh}),o($Vi,[2,35]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:39,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($Vg,[2,20],{26:38,27:$Vh}),{18:[1,49]},{18:[1,50]},{12:[1,51],13:[1,52]},{12:[1,53],13:[1,54]},o($Vg,[2,25],{26:26,23:55,27:$Vh}),o($Vg,[2,26],{26:26,23:56,27:$Vh}),{12:[1,57],13:[1,58]},o($Vg,[2,6]),o($Vg,[2,7]),o($Vi,[2,34]),{13:$Vq,29:[1,59],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},o($VD,[2,50]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:73,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($VD,[2,52]),o($VD,[2,53]),o($VD,[2,54]),{17:[1,74]},{17:[1,75]},o($VD,[2,57],{8:$Ve,10:$Vf}),{2:$V3,9:76,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,13]),o($Vg,[2,14]),o($Vg,[2,15],{26:26,23:77,27:$Vh}),o($Vg,[2,16],{26:26,23:78,27:$Vh}),o($Vg,[2,17],{26:26,23:79,27:$Vh}),o($Vg,[2,18],{26:26,23:80,27:$Vh}),o($Vg,[2,29],{26:38,27:$Vh}),o($Vg,[2,30],{26:38,27:$Vh}),o($Vg,[2,27],{26:26,23:81,27:$Vh}),o($Vg,[2,28],{26:26,23:82,27:$Vh}),o($Vi,[2,36]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:83,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:84,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:85,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:86,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:87,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:88,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:89,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:90,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:91,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:92,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:93,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:94,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:95,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{13:$Vq,18:[1,96],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},{18:[1,97]},{18:[1,98]},o($VD,[2,58],{8:$Ve,10:$Vf}),o($Vg,[2,21],{26:38,27:$Vh}),o($Vg,[2,22],{26:38,27:$Vh}),o($Vg,[2,23],{26:38,27:$Vh}),o($Vg,[2,24],{26:38,27:$Vh}),o($Vg,[2,31],{26:38,27:$Vh}),o($Vg,[2,32],{26:38,27:$Vh}),o($VE,[2,37],{13:$Vq,32:$Vt,33:$Vu}),o($VE,[2,38],{13:$Vq,32:$Vt,33:$Vu}),o($VF,[2,39],{33:$Vu}),o($VF,[2,40],{33:$Vu}),o($VD,[2,41]),o($VG,[2,42],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VG,[2,43],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VH,[2,44],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,45],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,46],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,47],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o([18,29,40,41],[2,48],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o([18,29,41],[2,49],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB}),o($VD,[2,51]),o($VD,[2,55]),o($VD,[2,56])],\r\ndefaultActions: {6:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 43;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 44;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 8\r\nbreak;\r\ncase 18:return 15\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 24\r\nbreak;\r\ncase 21:return 27\r\nbreak;\r\ncase 22:return 29\r\nbreak;\r\ncase 23:return 17\r\nbreak;\r\ncase 24:return 18\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 6\r\nbreak;\r\ncase 27:return 30\r\nbreak;\r\ncase 28:return 31\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 32\r\nbreak;\r\ncase 31:return 34\r\nbreak;\r\ncase 32:return 35\r\nbreak;\r\ncase 33:return 37\r\nbreak;\r\ncase 34:return 39\r\nbreak;\r\ncase 35:return 36\r\nbreak;\r\ncase 36:return 38\r\nbreak;\r\ncase 37:return 41\r\nbreak;\r\ncase 38:return 40\r\nbreak;\r\ncase 39:return 33\r\nbreak;\r\ncase 40:return 21\r\nbreak;\r\ncase 41:return 20\r\nbreak;\r\ncase 42:return 25\r\nbreak;\r\ncase 43:return 22\r\nbreak;\r\ncase 44:return 16\r\nbreak;\r\ncase 45:return 47 \r\nbreak;\r\ncase 46:return 46\r\nbreak;\r\ncase 47:return 45\r\nbreak;\r\ncase 48:return 12\r\nbreak;\r\ncase 49:return 5\r\nbreak;\r\ncase 50:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:[\" \"]+)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparser;\r\nexports.Parser = XPATHparser.Parser;\r\nexports.parse = function () { return XPATHparser.parse.apply(XPATHparser, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    SP_id:number;\r\n    SP_tipoAcceso:number;\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[],\r\n    public tipoQuery ?: string ){\r\n        this.SP_id = -1;\r\n        this.SP_tipoAcceso = -1\r\n    } \r\n\r\n    public setipoQuery(tipo: string){\r\n        this.tipoQuery = tipo;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public hijoIzq: Expression,\r\n        public hijoDer: Expression,\r\n        public tipoOperacion: operacionAritmetica,\r\n        public sym: string) { }\r\n\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP || valorDer.type === tipoPrimitivo.RESP) {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorDer.type + \", tipo valor2 \" + valorDer.type + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n        } else if ((valorIzq.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.STRING) && this.tipoOperacion === operacionAritmetica.SUMA) {\r\n            return { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.STRING, SP: -1 };\r\n        } else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n\r\n            if (this.tipoOperacion === operacionAritmetica.SUMA) {\r\n\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//SUMA ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" + t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n\r\n                return { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n            } else if (this.tipoOperacion === operacionAritmetica.RESTA) {\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//RESTA ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" - t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n\r\n                return { value: (valorIzq.value - valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n            } else if (this.tipoOperacion === operacionAritmetica.MULT) {\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//MULTIPLICACION ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" * t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n                return { value: (valorIzq.value * valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };;\r\n            } else if (this.tipoOperacion === operacionAritmetica.DIV) {\r\n\r\n                if (Number(valorDer.value) >= 0) {\r\n\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//DIVISION ARITMETICA\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" / t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n\r\n\r\n                    return { value: (valorIzq.value / valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n                } else {\r\n                    throw new Error(\"Error Semantico: El valor \" + valorDer + \", debe ser mayor o igual que cero,  Linea: \" + this.line + \"Column: \" + this.column);\r\n                }\r\n\r\n            } else if (this.tipoOperacion === operacionAritmetica.MOD) {\r\n                return { value: (valorIzq.value % valorDer.value), type: tipoPrimitivo.NUMBER, SP: -1 };\r\n            } else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorDer.type + \", tipo valor2 \" + valorDer.type + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public hijoIzq: Expression,\r\n        public hijoDer: Expression,\r\n        public tipoOperacion: operacionLogica,\r\n        public sym: string) { }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.BOOL) {\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//INGRESANDO VALOR LOGICO\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 0;\");\r\n                //###############################################################################################################\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//INGRESANDO VALOR LOGICO\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                //###############################################################################################################\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n            }\r\n\r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL) {\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//OPREACION LOGICA AND\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorIzq.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorDer.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" && t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n                } else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//OPREACION LOGICA AND\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorIzq.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorDer.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" && t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \" + this.line + \"Column: \" + this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \" + valorDer.type + \"Linea: \" + this.line + \"Column: \" + this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorIzq.type + \"Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso } from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n//import { traducirXmlRecursive } from '../../Traduccion/xml3d';\r\n\r\nexport class Path implements Expression {\r\n\r\n    salida: any[];\r\n    nuevaL_Accesos: Acceso[];\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public L_Accesos: Acceso[],\r\n        public tipoPath?: string\r\n    ) {\r\n        this.salida = [];\r\n        this.nuevaL_Accesos = [];\r\n    }\r\n\r\n    private validarAntecesores(): Acceso[] {\r\n\r\n        let newL_Acc: Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n\r\n            if (acceso.tipoAcceso === 'padre') {\r\n\r\n                if (newL_Acc.length > 0) {\r\n                    newL_Acc.pop()\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \" + acceso.line + \"column: \" + acceso.column);\r\n                }\r\n            } else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    private unirSalida(): string {\r\n\r\n        let salida: string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno { //      /biblio\r\n        this.insertarConsulta();\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\") {\r\n\r\n            if (this.L_Accesos.length > 0 && ent.listaEntornos.length > 0) {\r\n\r\n                if (ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\") {//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n                    //TRADUCCION3D######################################################################################\r\n                    if (traduccion.compararCadenas3d === \"\") {\r\n                        traduccion.metodoCompararCadenas();\r\n                    }\r\n                    traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + ent.SP_ID + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[0].SP_id + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"compararCadenas();\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                    traduccion.t++;\r\n                    //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                    traduccion.setTranslate(\"if(t\" + (traduccion.t - 1) + \"!=1) goto L0;\");\r\n                    traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                    //#####################################################################################################\r\n\r\n                    if (this.validarPredicadosRaiz(ent, 0)) {\r\n\r\n                        if (this.L_Accesos.length > 1) { //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(ent, 1);\r\n                        } else {\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                } else if (this.L_Accesos[0].tipoQuery === 'absoluta') {\r\n                    this.getQuery(ent, 0);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            this.salida = [];\r\n            this.getQuery(ent, 0, simboloPadre);\r\n            return { value: this.salida, type: tipoPrimitivo.RESP , SP: -1};\r\n        }\r\n        return { value: this.unirSalida(), type: tipoPrimitivo.STRING , SP: -1};\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number, simboloPadre?: Simbolo) {\r\n\r\n        if (simboloPadre !== undefined) { // si la consulta es una sub consulta y el padre es un atributo --> /id[subconsulta]\r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" || this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n\r\n                if (this.L_Accesos.length < posActAcceso + 1) {\r\n                    this.getQuery(entPadre, posActAcceso + 1, simboloPadre);\r\n                } else {\r\n\r\n                    if (this.tipoPath === \"sub\") {\r\n                        this.salida.push({ value: simboloPadre.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                    } else {\r\n\r\n                        if (this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n                            this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\n\");\r\n                        } else {\r\n                            this.salida.push(simboloPadre.identificador + \" = \\\"\" + simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }\r\n\r\n        } else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\") {\r\n\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.verificarAtributo === \"\") {\r\n                    traduccion.metodoVerificarAtributo();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Validando que sea atributo\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[posActAcceso].SP_id + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"verificarAtributo();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n                //#######################################################################################################\r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if (atri != null) {\r\n\r\n                    if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                        if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                        } else {\r\n\r\n                            if (this.tipoPath === \"sub\") {\r\n                                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                            } else {\r\n                                if (traduccion.etiquetaAtributo === \"\") {\r\n                                    traduccion.crearAtributoEtiqueta();\r\n                                }\r\n                                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n                                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    for (const entChiild of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entChiild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\") {\r\n\r\n                if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    this.construirTodosAtributos(entPadre);\r\n\r\n                } else {\r\n\r\n                    if (entPadre.listaSimbolos.length > 0) {\r\n\r\n                        for (const atri of entPadre.listaSimbolos) {\r\n\r\n                            if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                                } else {\r\n\r\n                                    if (this.tipoPath === \"sub\") {\r\n                                        this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                                    } else {\r\n                                        this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === 'texto') {\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'relativa') {\r\n\r\n                        if (entPadre.texto !== '') {\r\n                            //TRADUCCION3D##########################################################################################\r\n                            if (traduccion.printString === \"\") {\r\n                                traduccion.crearPrintString();\r\n                            }\r\n                            traduccion.setTranslate(\"\\n\\n//Imprimiendo solo contenido de nodo\\t--------------\\n\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"printString();\");\r\n                            traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                            //#######################################################################################################\r\n                            this.salida.push(entPadre.texto + '\\n');\r\n                        }\r\n\r\n                    } else {\r\n                        this.construirTodosTextos(entPadre);\r\n                    }\r\n\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto del nodo ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\") {\r\n\r\n                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entPadre, posActAcceso + 1);\r\n                } else {\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                            if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entActual, posActAcceso + 1);\r\n                            } else {\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (entActual.identificador === this.L_Accesos[posActAcceso].id) {//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n\r\n                            //TRADUCCION3D######################################################################################\r\n                            if (traduccion.compararCadenas3d === \"\") {\r\n                                traduccion.metodoCompararCadenas();\r\n                            }\r\n                            traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entActual.SP_ID + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[posActAcceso].SP_id + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"compararCadenas();\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                            traduccion.t++;\r\n                            //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                            traduccion.setTranslate(\"if(t\" + (traduccion.t - 1) + \"!=1) goto L0;\");\r\n                            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                            //####################################################################################################\r\n\r\n                            if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entActual, posActAcceso + 1);\r\n                                } else {\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        } else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta') {\r\n                            this.getQuery(entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \" + this.L_Accesos[posActAcceso].tipoAcceso + \" del acceso: \" + this.L_Accesos[posActAcceso].tipoAcceso + \" no se reconoce como valido, \" +\r\n                    \"linea: \" + this.L_Accesos[posActAcceso].line + \" comlumna: \" + this.L_Accesos[posActAcceso].column);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre: Entorno) {\r\n\r\n        if (entPadre.texto !== '') {\r\n            //TRADUCCION3D##########################################################################################\r\n            if (traduccion.printString === \"\") {\r\n                traduccion.crearPrintString();\r\n            }\r\n            traduccion.setTranslate(\"\\n\\n//Imprimiendo solo contenido de nodo\\t--------------\\n\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"printString();\");\r\n            traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n            //#######################################################################################################\r\n            this.salida.push(entPadre.texto + '\\n');\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos(entPadre: Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos) {\r\n\r\n            if (this.tipoPath === \"sub\") {\r\n                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n            } else {\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaAtributo === \"\") {\r\n                    traduccion.crearAtributoEtiqueta();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //######################################################################################################\r\n                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n            }\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre: Entorno, tab: string) {\r\n\r\n        if (this.tipoPath === \"sub\") {\r\n\r\n            /*if (entPadre.listaEntornos.length > 0 || (entPadre.listaEntornos.length === 0 && entPadre.texto === '')) {\r\n                this.salida.push({ value: entPadre.identificador, type: tipoPrimitivo.NODO })\r\n            } else {\r\n                this.salida.push({ value: entPadre.texto, type: tipoPrimitivo.STRING });\r\n            }*/\r\n            this.salida.push({ value: entPadre, type: tipoPrimitivo.NODO })\r\n\r\n        } else {\r\n\r\n            if (traduccion.etiquetaApertura === \"\") {\r\n                traduccion.crearEtiquetaApertura();\r\n            }\r\n            traduccion.setTranslate(\"\\n//Inicia Etiqueta apertura\\t--------------\\n\\n\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n            traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"crearEtiquetaApertura();\");\r\n            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos += atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"  \";\r\n                if (traduccion.etiquetaAtributo === \"\") {\r\n                    traduccion.crearAtributoEtiqueta();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n            }\r\n\r\n            //construyo Nodos\r\n            if (entPadre.listaEntornos.length === 0 && entPadre.texto === '') {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if (entPadre.listaEntornos.length > 0) {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab + \"</\" + entPadre.identificador + \">\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaCierre === \"\") {\r\n                    traduccion.crearEtiquetaCierre();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo etiqueta cierre\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearEtiquetaCierre();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //#######################################################################################################\r\n            } else {\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaTexto === \"\") {\r\n                    traduccion.crearEtiquetaTexto();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo nodo Texto\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                //traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearEtiquetaTexto();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\" + entPadre.texto + \"</\" + entPadre.identificador + \">\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private validarPredicadosAtri(entPadre: Entorno, simboloPadre: Simbolo, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value !== 1) {\r\n                    return false;\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n\r\n    public insertarConsulta() {\r\n        traduccion.setTranslate(\"//Ingresando consulta Xpath\\t--------------\");\r\n\r\n        for (const key of this.L_Accesos) {\r\n            traduccion.stackCounter++;\r\n            key.SP_id = traduccion.stackCounter;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n            traduccion.setTranslate(\"\\n//Ingresando acceso\\t--------------\");\r\n            if (key.tipoAcceso === \"atributo\") {\r\n                traduccion.setTranslate(\"heap[(int)H] = 64;\\t\\t//Caracter @\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n            for (let i = 0; i < key.id.length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + key.id.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + key.id[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === key.id.length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n\r\n\r\n            traduccion.setTranslate(\"\\n//Ingresando tipo de acceso\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            key.SP_tipoAcceso = traduccion.stackCounter;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n            for (let i = 0; i < key.tipoAcceso.length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + key.tipoAcceso.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + key.tipoAcceso[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === key.tipoAcceso.length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq.value.identificador, valDer.value.identificador)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                        }\r\n                    }else if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                        if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valIzq.value.texto, valDer.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                            }\r\n                        }\r\n                    }\r\n                    else if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valDer.value.texto, valIzq.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (this.validar(valIzq.value, valDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                    if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valIzq.value.texto, valorDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                        }\r\n                    }\r\n                }else {\r\n                   \r\n                    if (this.validar(valIzq.value, valorDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                    if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valDer.value.texto, valorIzq.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                        }\r\n                    }\r\n                }else {\r\n                    \r\n                    if (this.validar(valorIzq.value, valDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1};\r\n            \r\n        } else {\r\n            return { value: this.validar(valorIzq.value, valorDer.value), type: tipoPrimitivo.BOOL, SP: -1}\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : String, valorDer: String): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq === valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq !== valorDer;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq < valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq <= valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq > valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq >= valorDer;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xQueryGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,9],$V2=[1,14],$V3=[1,15],$V4=[1,12],$V5=[1,13],$V6=[5,6],$V7=[5,6,30],$V8=[5,6,17],$V9=[1,31],$Va=[1,21],$Vb=[1,22],$Vc=[1,29],$Vd=[1,23],$Ve=[1,24],$Vf=[1,25],$Vg=[1,26],$Vh=[1,27],$Vi=[1,28],$Vj=[1,30],$Vk=[5,6,17,30],$Vl=[1,38],$Vm=[1,39],$Vn=[5,6,17,24,26,28,30,45,46,47,48,49,50,51,52,53,54,55,56,57],$Vo=[1,42],$Vp=[5,6,17,24,26,28,30,43,45,46,47,48,49,50,51,52,53,54,55,56,57],$Vq=[1,60],$Vr=[1,61],$Vs=[1,59],$Vt=[1,66],$Vu=[1,62],$Vv=[1,63],$Vw=[1,64],$Vx=[6,17],$Vy=[1,83],$Vz=[1,81],$VA=[1,82],$VB=[1,84],$VC=[1,85],$VD=[1,86],$VE=[1,87],$VF=[1,88],$VG=[1,89],$VH=[1,90],$VI=[1,91],$VJ=[1,92],$VK=[1,93],$VL=[17,28,45,46,47,48,49,50,51,52,53,54,55,56,57],$VM=[17,45,46,47,50,51,52,53,54,55,56,57],$VN=[17,28,45,46,47,48,50,51,52,53,54,55,56,57],$VO=[17,45,50,51,56,57],$VP=[17,45,50,51,52,53,54,55,56,57],$VQ=[1,129],$VR=[1,130],$VS=[1,131],$VT=[1,133],$VU=[1,134],$VV=[5,6,17,24,26];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"LQUERYS\":4,\"EOF\":5,\",\":6,\"QUERY\":7,\"MULTIPATH\":8,\"XQUERY\":9,\"cadena\":10,\"scadena\":11,\"RETURN\":12,\"LET\":13,\"return\":14,\"(\":15,\"LXQUERYS\":16,\")\":17,\"let\":18,\"$\":19,\"id\":20,\":=\":21,\"PATHXQUERY\":22,\"PATH\":23,\"/\":24,\"LACCESOSXQUERY\":25,\"//\":26,\"ACCESOXQUERY\":27,\"*\":28,\"@\":29,\"|\":30,\"LACCESOS\":31,\"ACCESO\":32,\".\":33,\"..\":34,\"text\":35,\"node\":36,\"child\":37,\"::\":38,\"descendant\":39,\"PREDICADOS\":40,\"attribute\":41,\"PREDI\":42,\"[\":43,\"EXP\":44,\"]\":45,\"+\":46,\"-\":47,\"div\":48,\"mod\":49,\"=\":50,\"!=\":51,\"<\":52,\"<=\":53,\">\":54,\">=\":55,\"and\":56,\"or\":57,\"VALOR\":58,\"number\":59,\"position\":60,\"last\":61,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\",\",10:\"cadena\",11:\"scadena\",14:\"return\",15:\"(\",17:\")\",18:\"let\",19:\"$\",20:\"id\",21:\":=\",24:\"/\",26:\"//\",28:\"*\",29:\"@\",30:\"|\",33:\".\",34:\"..\",35:\"text\",36:\"node\",37:\"child\",38:\"::\",39:\"descendant\",41:\"attribute\",43:\"[\",45:\"]\",46:\"+\",47:\"-\",48:\"div\",49:\"mod\",50:\"=\",51:\"!=\",52:\"<\",53:\"<=\",54:\">\",55:\">=\",56:\"and\",57:\"or\",59:\"number\",60:\"position\",61:\"last\"},\r\nproductions_: [0,[3,2],[3,1],[4,3],[4,1],[7,1],[7,1],[9,1],[9,1],[9,1],[9,1],[12,4],[12,2],[16,3],[16,1],[13,5],[13,5],[22,4],[22,4],[22,2],[25,3],[25,3],[25,1],[27,1],[27,1],[27,2],[27,2],[8,3],[8,1],[23,2],[23,2],[31,3],[31,3],[31,1],[32,1],[32,1],[32,1],[32,1],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,2],[32,2],[32,4],[32,4],[32,4],[32,4],[32,2],[32,2],[32,3],[32,3],[32,3],[32,3],[32,4],[32,4],[32,1],[40,2],[40,1],[42,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,3],[44,1],[58,3],[58,1],[58,1],[58,1],[58,3],[58,3],[58,1],[58,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\nreturn $$[$0-1];\r\nbreak;\r\ncase 2:\r\nreturn $$[$0];\r\nbreak;\r\ncase 3: case 13: case 27:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 4: case 14: case 22: case 28: case 33: case 60:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 5:\r\nthis.$ = new MultiXpaths(0, 0, $$[$0]);\r\nbreak;\r\ncase 6: case 75:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 7: case 8: case 77: case 78:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 9: case 10:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 11:\r\nthis.$ = new Return (_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1]);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Return (_$[$0-1].first_line, _$[$0-1].first_column, [$$[$0]]);\r\nbreak;\r\ncase 15:\r\n$$[$0].accesos.tipoPath = 'sub'; this.$ = new Let(_$[$0-4].first_line, _$[$0-4].first_column, $$[$0]);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Let(_$[$0-4].first_line, _$[$0-4].first_column, $$[$0]);\r\nbreak;\r\ncase 17:\r\n$$[$0][0].tipoQuery = 'relativa';\r\n                                                             this.$ = new XqueryPath(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], new Path(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0]));\r\nbreak;\r\ncase 18:\r\n$$[$0][0].tipoQuery = 'absoluta';\r\n                                                             this.$ = new XqueryPath(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], new Path(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0]));\r\nbreak;\r\ncase 19:\r\nthis.$ = new XqueryPath(_$[$0].first_line, _$[$0].first_column, $$[$0], new Path(_$[$0].first_line, _$[$0].first_column, []));\r\nbreak;\r\ncase 20: case 21:\r\n$$[$0].tipoQuery = 'relativa'; $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 23: case 34:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 24: case 35:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 25: case 50:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 26: case 51:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 29:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 30:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 31:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 32:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 36:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 37:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 38:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 39:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 41:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 42:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 43:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 44:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 45:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 46:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 47:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 48:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 49:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 52:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 53:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 54:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 55:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 56:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 57:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 58:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 59:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 61: case 76:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 62:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 63:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 64:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 65:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 66:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 67:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 68:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 69:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 70:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 71:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 72:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 73:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 74:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 79:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 80: case 81:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 82:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                 this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 83:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                 this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,5:[1,3],7:4,8:5,9:6,10:$V0,11:$V1,12:10,13:11,14:$V2,18:$V3,23:7,24:$V4,26:$V5},{1:[3]},{5:[1,16],6:[1,17]},{1:[2,2]},o($V6,[2,4]),o($V6,[2,5],{30:[1,18]}),o($V6,[2,6]),o($V7,[2,28]),o($V8,[2,7]),o($V8,[2,8]),o($V8,[2,9]),o($V8,[2,10]),{2:$V9,20:$Va,28:$Vb,29:$Vc,31:19,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj},{2:$V9,20:$Va,28:$Vb,29:$Vc,31:32,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj},{9:34,10:$V0,11:$V1,12:10,13:11,14:$V2,15:[1,33],18:$V3},{19:[1,35]},{1:[2,1]},{7:36,8:5,9:6,10:$V0,11:$V1,12:10,13:11,14:$V2,18:$V3,23:7,24:$V4,26:$V5},{23:37,24:$V4,26:$V5},o($Vk,[2,29],{24:$Vl,26:$Vm}),o($Vn,[2,33]),o($Vn,[2,34],{40:40,42:41,43:$Vo}),o($Vn,[2,35],{42:41,40:43,43:$Vo}),o($Vn,[2,36]),o($Vn,[2,37]),{15:[1,44]},{15:[1,45]},{38:[1,46]},{38:[1,47]},{20:[1,48],28:[1,49]},{38:[1,50]},o($Vn,[2,58]),o($Vk,[2,30],{24:$Vl,26:$Vm}),{9:52,10:$V0,11:$V1,12:10,13:11,14:$V2,16:51,18:$V3},o($V8,[2,12]),{20:[1,53]},o($V6,[2,3]),o($V7,[2,27]),{2:$V9,20:$Va,28:$Vb,29:$Vc,32:54,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj},{2:$V9,20:$Va,28:$Vb,29:$Vc,32:55,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj},o($Vn,[2,44],{42:56,43:$Vo}),o($Vp,[2,60]),{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:57,58:58,59:$Vu,60:$Vv,61:$Vw},o($Vn,[2,45],{42:56,43:$Vo}),{17:[1,67]},{17:[1,68]},{20:[1,69],28:[1,70]},{20:[1,71],28:[1,72]},o($Vn,[2,50],{42:41,40:73,43:$Vo}),o($Vn,[2,51],{42:41,40:74,43:$Vo}),{20:[1,75],28:[1,76]},{6:[1,78],17:[1,77]},o($Vx,[2,14]),{21:[1,79]},o($Vn,[2,31]),o($Vn,[2,32]),o($Vp,[2,59]),{28:$Vy,45:[1,80],46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE,52:$VF,53:$VG,54:$VH,55:$VI,56:$VJ,57:$VK},o($VL,[2,75]),{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:94,58:58,59:$Vu,60:$Vv,61:$Vw},o($VL,[2,77]),o($VL,[2,78]),o($VL,[2,79]),{15:[1,95]},{15:[1,96]},o($VL,[2,82],{24:$Vl,26:$Vm}),{2:$V9,20:$Va,28:$Vb,29:$Vc,31:97,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj},o($Vn,[2,38]),o($Vn,[2,39]),o($Vn,[2,40],{42:41,40:98,43:$Vo}),o($Vn,[2,41],{42:41,40:99,43:$Vo}),o($Vn,[2,42],{42:41,40:100,43:$Vo}),o($Vn,[2,43],{42:41,40:101,43:$Vo}),o($Vn,[2,54],{42:56,43:$Vo}),o($Vn,[2,55],{42:56,43:$Vo}),o($Vn,[2,52],{42:41,40:102,43:$Vo}),o($Vn,[2,53],{42:41,40:103,43:$Vo}),o($V8,[2,11]),{9:104,10:$V0,11:$V1,12:10,13:11,14:$V2,18:$V3},{19:[1,107],22:105,23:106,24:$V4,26:$V5},o($Vp,[2,61]),{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:108,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:109,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:110,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:111,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:112,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:113,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:114,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:115,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:116,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:117,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:118,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:119,58:58,59:$Vu,60:$Vv,61:$Vw},{2:$V9,10:$Vq,11:$Vr,15:$Vs,20:$Va,26:$Vt,28:$Vb,29:$Vc,31:65,32:20,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,39:$Vi,41:$Vj,44:120,58:58,59:$Vu,60:$Vv,61:$Vw},{17:[1,121],28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE,52:$VF,53:$VG,54:$VH,55:$VI,56:$VJ,57:$VK},{17:[1,122]},{17:[1,123]},o($VL,[2,83],{24:$Vl,26:$Vm}),o($Vn,[2,46],{42:56,43:$Vo}),o($Vn,[2,47],{42:56,43:$Vo}),o($Vn,[2,48],{42:56,43:$Vo}),o($Vn,[2,49],{42:56,43:$Vo}),o($Vn,[2,56],{42:56,43:$Vo}),o($Vn,[2,57],{42:56,43:$Vo}),o($Vx,[2,13]),o($V8,[2,15]),o($V8,[2,16]),{20:[1,124]},o($VM,[2,62],{28:$Vy,48:$VB,49:$VC}),o($VM,[2,63],{28:$Vy,48:$VB,49:$VC}),o($VN,[2,64],{49:$VC}),o($VN,[2,65],{49:$VC}),o($VL,[2,66]),o($VO,[2,67],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC,52:$VF,53:$VG,54:$VH,55:$VI}),o($VO,[2,68],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC,52:$VF,53:$VG,54:$VH,55:$VI}),o($VP,[2,69],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC}),o($VP,[2,70],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC}),o($VP,[2,71],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC}),o($VP,[2,72],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC}),o([17,45,56,57],[2,73],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE,52:$VF,53:$VG,54:$VH,55:$VI}),o([17,45,57],[2,74],{28:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE,52:$VF,53:$VG,54:$VH,55:$VI,56:$VJ}),o($VL,[2,76]),o($VL,[2,80]),o($VL,[2,81]),o($V8,[2,19],{24:[1,125],26:[1,126]}),{20:$VQ,25:127,27:128,28:$VR,29:$VS},{20:$VQ,25:132,27:128,28:$VR,29:$VS},o($V8,[2,17],{24:$VT,26:$VU}),o($VV,[2,22]),o($VV,[2,23]),o($VV,[2,24]),{20:[1,135],28:[1,136]},o($V8,[2,18],{24:$VT,26:$VU}),{20:$VQ,27:137,28:$VR,29:$VS},{20:$VQ,27:138,28:$VR,29:$VS},o($VV,[2,25]),o($VV,[2,26]),o($VV,[2,20]),o($VV,[2,21])],\r\ndefaultActions: {3:[2,2],16:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xqueryAST/ExpresionesXpath/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xqueryAST/ExpresionesXpath/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xqueryAST/ExpresionesXpath/Logica\");\r\n    const {Path} = require(\"../xqueryAST/ExpresionesXpath/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xqueryAST/ExpresionesXpath/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xqueryAST/ExpresionesXpath/Relacional\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n\r\n    const {Let} = require(\"../xqueryAST/ExpresionesXquery/Let\");\r\n    const {MultiXpaths} = require(\"../xqueryAST/ExpresionesXquery/MultiXpaths\");\r\n    const {Return} = require(\"../xqueryAST/ExpresionesXquery/Return\");\r\n    const {XqueryPath} = require(\"../xqueryAST/ExpresionesXquery/XqueryPath\");\r\n    \r\n    \r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 10;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 11;\r\n                  \r\nbreak;\r\ncase 16:return 26\r\nbreak;\r\ncase 17:return 24\r\nbreak;\r\ncase 18:return 34\r\nbreak;\r\ncase 19:return 33\r\nbreak;\r\ncase 20:return 29\r\nbreak;\r\ncase 21:return 43\r\nbreak;\r\ncase 22:return 45\r\nbreak;\r\ncase 23:return 15\r\nbreak;\r\ncase 24:return 17\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 30\r\nbreak;\r\ncase 27:return 46\r\nbreak;\r\ncase 28:return 47\r\nbreak;\r\ncase 29:return 28\r\nbreak;\r\ncase 30:return 48\r\nbreak;\r\ncase 31:return 50\r\nbreak;\r\ncase 32:return 51\r\nbreak;\r\ncase 33:return 53\r\nbreak;\r\ncase 34:return 55\r\nbreak;\r\ncase 35:return 52\r\nbreak;\r\ncase 36:return 54\r\nbreak;\r\ncase 37:return 57\r\nbreak;\r\ncase 38:return 56\r\nbreak;\r\ncase 39:return 49\r\nbreak;\r\ncase 40:return 38\r\nbreak;\r\ncase 41:return 37\r\nbreak;\r\ncase 42:return 41\r\nbreak;\r\ncase 43:return 39\r\nbreak;\r\ncase 44:return 35\r\nbreak;\r\ncase 45:return 61 \r\nbreak;\r\ncase 46:return 60\r\nbreak;\r\ncase 47:return 14;\r\nbreak;\r\ncase 48:return 19;\r\nbreak;\r\ncase 49:return 18;\r\nbreak;\r\ncase 50:return 21;\r\nbreak;\r\ncase 51:return 59\r\nbreak;\r\ncase 52:return 20\r\nbreak;\r\ncase 53:return 5\r\nbreak;\r\ncase 54:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:[\" \"]+)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:return\\b)/i,/^(?:\\$)/i,/^(?:let\\b)/i,/^(?::=)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xQueryGrammar;\r\nexports.Parser = xQueryGrammar.Parser;\r\nexports.parse = function () { return xQueryGrammar.parse.apply(xQueryGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    SP_id:number;\r\n    SP_tipoAcceso:number;\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[],\r\n    public tipoQuery ?: string ){\r\n        this.SP_id = -1;\r\n        this.SP_tipoAcceso = -1\r\n    } \r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"-> nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression{\r\n\r\n    \r\n    constructor (\r\n    public line: Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionAritmetica,\r\n    public sym: string){}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if(valorIzq.type === tipoPrimitivo.RESP || valorDer.type === tipoPrimitivo.RESP){\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }else if((valorIzq.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.STRING) && this.tipoOperacion === operacionAritmetica.SUMA) {\r\n            return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.STRING, SP: -1 };\r\n        }else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n           \r\n            if (this.tipoOperacion === operacionAritmetica.SUMA){\r\n                return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER , SP: -1};\r\n            }else if(this.tipoOperacion === operacionAritmetica.RESTA){\r\n                return { value: (valorIzq.value - valorDer.value) , type: tipoPrimitivo.NUMBER, SP: -1 };\r\n            }else if(this.tipoOperacion === operacionAritmetica.MULT){\r\n                return { value: (valorIzq.value * valorDer.value) , type: tipoPrimitivo.NUMBER, SP: -1 };;\r\n            }else if(this.tipoOperacion === operacionAritmetica.DIV){\r\n\r\n                if(Number(valorDer.value) >= 0){\r\n                    return { value: (valorIzq.value / valorDer.value) , type: tipoPrimitivo.NUMBER, SP: -1 };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: El valor \"+valorDer+\", debe ser mayor o igual que cero,  Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }else if (this.tipoOperacion === operacionAritmetica.MOD){\r\n                return  { value: (valorIzq.value % valorDer.value) , type: tipoPrimitivo.NUMBER, SP: -1 };\r\n            }else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression{\r\n    \r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionLogica,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        \r\n        if (valorIzq.type === tipoPrimitivo.BOOL){\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: -1 };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: -1 };\r\n            }\r\n            \r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL){\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: -1 };\r\n                }else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: -1 };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \"+valorDer.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorIzq.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq.value.identificador, valDer.value.identificador)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                        }\r\n                    }else if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                        if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valIzq.value.texto, valDer.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                            }\r\n                        }\r\n                    }\r\n                    else if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valDer.value.texto, valIzq.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (this.validar(valIzq.value, valDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                    if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valIzq.value.texto, valorDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                        }\r\n                    }\r\n                }else {\r\n                   \r\n                    if (this.validar(valIzq.value, valorDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                    if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valDer.value.texto, valorIzq.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL, SP: -1}    \r\n                        }\r\n                    }\r\n                }else {\r\n                    \r\n                    if (this.validar(valorIzq.value, valDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL, SP: -1}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL, SP: -1};\r\n            \r\n        } else {\r\n            return { value: this.validar(valorIzq.value, valorDer.value), type: tipoPrimitivo.BOOL, SP: -1}\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : String, valorDer: String): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq == valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq != valorDer;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq < valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq <= valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq > valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq >= valorDer;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","import { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { tipoPrimitivo } from \"../../xpathAST/Expresiones/Primitivo\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { Path } from \"../ExpresionesXpath/Path\";\r\nimport { XqueryPath } from \"./XqueryPath\";\r\n\r\nexport class Let implements ExpressionXquery{\r\n\r\n    constructor (\r\n        public line: Number,\r\n        public column: Number,\r\n        public idVar,\r\n        public path : Path | XqueryPath){\r\n    }\r\n\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n\r\n        var content : Retorno = {value:[], type: tipoPrimitivo.RESP, SP: -1} \r\n\r\n        if (entAct.existeLocalVar(this.idVar)){\r\n\r\n            if (this.path instanceof Path){\r\n                content = this.path.execute(RaizXML); \r\n            }else {\r\n                content = this.path.executeXquery(entAct, RaizXML);\r\n            }\r\n\r\n            entAct.guaradarVar(this.idVar, content)\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: Se encuentra en uso el id: \"+this.idVar+\", Linea: \"+this.line +\" Columna: \"+this.column );\r\n        }\r\n        return {value : \"\", type: tipoPrimitivo.STRING, SP: -1}\r\n    }\r\n\r\n}","import { Retorno } from \"../../Interfaces/Expresion\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { Path } from \"../../xpathAST/Expresiones/Path\";\r\nimport { tipoPrimitivo } from \"../../xpathAST/Expresiones/Primitivo\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { showXquery } from \"../manejadores/showXquery\";\r\n\r\nexport class MultiXpaths implements ExpressionXquery{\r\n    \r\n\r\n    constructor(\r\n        public line: number,\r\n        public column: number,\r\n        public paths : Path[]){}\r\n\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n       \r\n        var content : Retorno[] = [];\r\n       \r\n        for (const path of this.paths) {\r\n            content.concat(path.execute(RaizXML).value)\r\n        }\r\n        return {value: showXquery.buildXquery(content), type : tipoPrimitivo.STRING, SP: -1}\r\n    }\r\n\r\n}","import { Retorno } from \"../../Interfaces/Expresion\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { tipoPrimitivo } from \"../../xpathAST/Expresiones/Primitivo\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\n\r\nexport class Return implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: Number,\r\n        public column: Number, \r\n        public L_Xqueys: ExpressionXquery[]){}\r\n\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n        var salida : string = \"\";\r\n        for (const Xquery of this.L_Xqueys) {\r\n            salida += Xquery.executeXquery(entAct, RaizXML).value \r\n        }\r\n        return {value : salida, type: tipoPrimitivo.STRING, SP: -1}\r\n    }\r\n}","import { Retorno } from \"../../Interfaces/Expresion\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { Path } from \"../../xpathAST/Expresiones/Path\";\r\nimport { tipoPrimitivo } from \"../../xpathAST/Expresiones/Primitivo\";\r\nimport { showXquery } from \"../manejadores/showXquery\";\r\n\r\nexport class XqueryPath implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: number,\r\n        public column: number,\r\n        public idVar: string,\r\n        public accesos: Path){\r\n             \r\n        }\r\n\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n        \r\n        var content : Retorno[] = [];\r\n        \r\n        var varFind = entAct.getVar(this.idVar);  \r\n        if (varFind != null){\r\n\r\n            for (const element of varFind.value) {\r\n\r\n                if (element.type === tipoPrimitivo.NODO){\r\n                    content.concat(this.accesos.execute(element.value).value);\r\n                }else {\r\n                    content.push(element)\r\n                }\r\n            }\r\n\r\n            if (this.accesos.tipoPath === 'sub'){\r\n                return {value : content, type: tipoPrimitivo.RESP, SP: -1}\r\n            }else {\r\n                return {value: showXquery.buildXquery(content), type : tipoPrimitivo.STRING, SP: -1}\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: No se encuentra el id: \"+this.idVar+\", Linea: \"+this.line +\" Columna: \"+this.column );\r\n        }\r\n    }\r\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Entorno } from \"../xmlAST/Entorno\";\r\nimport { traduccion } from './traduccion';\r\n\r\nexport function traducirXml(ast) {\r\n    traducirXmlRecursive(ast[0]);\r\n    //printText(ast[0]);\r\n}\r\n//TRADUCCION DE XML********************************************\r\nexport function traducirXmlRecursive(raiz: Entorno) {\r\n    traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n    traduccion.stackCounter++;\r\n    //traduccion.t++;\r\n    raiz.SP_ID = traduccion.stackCounter;\r\n    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n    traduccion.setTranslate(\"\");\r\n    traduccion.setTranslate(\"//Identificador de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n    for (let i = 0; i < raiz.identificador.length; i++) {\r\n        traduccion.setTranslate(\"heap[(int)H] = \" + raiz.identificador.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.identificador[i].toString());\r\n        traduccion.setTranslate(\"H = H + 1;\");\r\n        if (i + 1 === raiz.identificador.length) {\r\n            traduccion.setTranslate(\"heap[(int)H] = -1;\"  + \"\\t\\t//FIN DE CADENA\");\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n        }\r\n    }\r\n    if (raiz.texto.length!==0) {\r\n        traduccion.stackCounter++;\r\n        raiz.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"\\n\");\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Texto de nodo: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n        for (let i = 0; i < raiz.texto.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + raiz.texto.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.texto[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === raiz.texto.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    for (const simbolo of raiz.listaSimbolos) {\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_ID = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Simbolo \" + simbolo.identificador.toString() + \" de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\")\r\n        for (let i = 0; i < simbolo.identificador.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.identificador.charCodeAt(i) + \";\"  + \"\\t\\t//Caracter \" + simbolo.identificador[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.identificador.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n        simbolo.valor=simbolo.valor.replaceAll(\"\\\"\",\"\");\r\n        simbolo.valor=simbolo.valor.replaceAll(\"'\",\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Valor de \" + simbolo.identificador + \"\\t--------------\");\r\n        for (let i = 0; i < simbolo.valor.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.valor.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + simbolo.valor[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.valor.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    traduccion.setTranslate(\"\\n\");\r\n    for (const key in raiz.listaEntornos) {\r\n        //traduccion.stackCounter++;\r\n        traducirXmlRecursive(raiz.listaEntornos[key]);\r\n    }\r\n}\r\n//CREACION DEL METODO printString******************************\r\n/*export function createPrintText() {\r\n    traduccion.setPrintString(\"//Metodo printString\\t--------------\");\r\n    traduccion.setPrintString(\"void printString() {\");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = S+1; \");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\");\r\n    \r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\"); //L0\r\n    traduccion.etiquetaCounter++;\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\");\r\n    traduccion.setPrintString(\"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\"); //L1\r\n    traduccion.setPrintString(\"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\");\r\n    traduccion.setPrintString(\"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\");\r\n    traduccion.setPrintString(\"goto L\"+(traduccion.etiquetaCounter-1)+\";\");\r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\");\r\n    traduccion.setPrintString(\"return;\");\r\n    traduccion.setPrintString(\"}\");\r\n    traduccion.setPrintString(\"\");\r\n    //traduccion.printString = true;\r\n}*/\r\n//LLAMADA AL METODO printString********************************\r\nexport function printText(raiz: Entorno) {\r\n    //if (traduccion.printString===false) {createPrintText();}\r\n    if (raiz.texto!==\"\") {\r\n        traduccion.setTranslate(\"//Imrpimir texto de: \" + raiz.identificador + \"\\t--------------\")\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+raiz.SP_VAL+\"];\");\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n        traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\"+(traduccion.t-1)+\";\");\r\n        traduccion.t++;\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printString();\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t +\" = stack[(int)S];\");\r\n        traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n        traduccion.setTranslate(\"\");\r\n        \r\n    }\r\n    /*for (const r of raiz.listaEntornos) {\r\n        printText(r);\r\n    }*/\r\n}\r\n//TRADUCCION DE CONSULTA XPATH*********************************\r\nexport function TraducirXPATH(query) {\r\n    createConsultaXPATH();\r\n    \r\n}\r\n//CREACION DEL METODO ConsultaXPATH****************************\r\nexport function createConsultaXPATH() {\r\n    traduccion.setConsultaXPATH(\"//Metodo ConsultaXPATH\\t--------------\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"}\");\r\n    traduccion.setConsultaXPATH(\"\");\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { traducirXml, TraducirXPATH } from \"../Traduccion/xml3d\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\n//import { OptimizadorMirilla } from '../Optimizador/OptimizadorMirilla';\r\nimport { traduccion } from '../Traduccion/traduccion';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\nconst parseXQuery = require('../Grammar/xQueryGrammar');\r\n//const parseC3D = require('../Grammar/C3DGrammar');\r\n\r\n\r\n\r\nconst utf8 = require('utf8');\r\n\r\nexport default class Main extends Component {\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        xquery: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repErrorXPATH: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: ''\r\n    }\r\n    parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let RepErrorXPATHASC = '';\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n        //XML\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n\r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        //XPATH\r\n        try {\r\n            const querys = parseXPATH.parse(this.state.xpath)\r\n            var querysXpath = querys.xpath;\r\n            console.log(querysXpath);\r\n            var erroresXpath = querys.listaErrores;\r\n            //REPORTE AST y ERRORES PARA XPATH************************************************************\r\n            if (erroresXpath.length === 0) {\r\n                for (const key in querysXpath) {\r\n                    texto = querysXpath[key].GraficarAST(texto);\r\n                    if (indice < querysXpath.length) {\r\n                        texto += \"nodo\" + key.toString() + \"[label=\\\"|\\\"];\\n\"\r\n                        texto += \"nodo\" + querysXpath[key].line.toString() + \"_\" + querysXpath[key].column.toString() + \"->nodo\" + key.toString() + \";\\n\";\r\n                        texto += \"nodo\" + key.toString() + \"->nodo\" + querysXpath[indice].line.toString() + \"_\" + querysXpath[indice].column.toString() + \";\\n\";\r\n                        indice++;\r\n                    }\r\n                }\r\n                this.setState({\r\n                    repAstXpath: \"digraph G {\" + texto + \"}\",\r\n                });\r\n            } else {\r\n                console.log(erroresXpath.length)\r\n                this.setState({\r\n                    repErrorXPATH: \"digraph G {\" + crearTextoReporteErrorXML(erroresXpath, RepErrorXPATHASC) + \"}\"\r\n                })\r\n            }\r\n\r\n\r\n            console.log(texto);\r\n\r\n            this.setState({\r\n                repAstXpath: \"digraph G {\" + texto + \"}\",\r\n            });\r\n            ///----------------------------------------------------------------------------------------------------------------------------------------------\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querysXpath) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            if (encoding === \"UTF-8\") {\r\n                this.setState({\r\n                    consoleResult: utf8.encode(salida),\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    consoleResult: salida,\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    traducir = () => {\r\n        if (this.state.xml === \"\") {\r\n            return;\r\n        }\r\n        const result = parser.parse(this.state.xml);\r\n        const querys = parseXPATH.parse(this.state.xpath);\r\n        var querysXpath = querys.xpath;\r\n        var ast = result.ast;\r\n        var respuesta = \"\";\r\n        console.log(querysXpath);\r\n        traducirXml(ast);\r\n        for (const query of querysXpath) {\r\n            try {\r\n                respuesta += query.execute(ast[0]).value;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        this.setState({\r\n            consoleResult: \"//CONSULTA-----------------\\n\\n/*\\n\" + respuesta + \"*/\\n\\n//TRADUCCION-----------------\\n\\n\" + traduccion.getTranslate(),\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //METODO PARA QUE DEIVID EJECUTE XQUERY################################################################\r\n    executeXquery = () =>{\r\n        console.log(this.state.xquery);\r\n    }\r\n    //######################################################################################################\r\n\r\n\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    handleFileChangeXpath = file => {\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXPATH\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"XPATH AREA\"\r\n                                value={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.traducir}>TRANSALATE XPATH</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.executeXquery}>EXECUTE XQUERY</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <br />\r\n                    <Row>\r\n                        <Col xs={12} md={0}>\r\n\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                                this.setState({\r\n                                    xml: e.target.value\r\n                                })\r\n                            }} />\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <Form.Control as=\"textarea\" placeholder=\"XQUERY AREA\" rows={15} value={this.state.xquery} onChange={(e: any) => {\r\n                                this.setState({\r\n                                    xquery: e.target.value\r\n                                })\r\n                            }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST XPath</option>\r\n                            <option>Reporte de errores XPath</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={30} value={this.state.consoleResult} readOnly />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Main from \"./components/main\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"/tytusx/20211SVAC/G06\">\n        <Route path=\"/\" exact component={Main} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}