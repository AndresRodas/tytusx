{"version":3,"sources":["Traduccion/traduccion.tsx","Grammar/xmlGrammar.js","xmlAST/Simbolo.tsx","Reportes/xmlReport.js","Grammar/XPATHparser.js","xpathAST/Expresiones/Acceso.tsx","xpathAST/Expresiones/Aritmetico.tsx","xpathAST/Expresiones/Logica.tsx","xpathAST/Expresiones/Path.tsx","xpathAST/Expresiones/Relacional.tsx","Reportes/SimboloTabla.tsx","Traduccion/xml3d.tsx","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx","xmlAST/ClaseError.tsx","xpathAST/Expresiones/Primitivo.tsx","Reportes/NodoCST.tsx","xmlAST/Entorno.tsx"],"names":["traduccion","content","this","t","i","toString","metodostring","metodoConsultaXPATH","compararCadenas3d","etiquetaTexto","etiquetaApertura","etiquetaCierre","etiquetaUnitaria","verificarAtributo","etiquetaAtributo","tranlate","etiquetaCounter","stackCounter","printString","xmlGrammar","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","parser","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","listaErrores","ast","encoding","valor","$","push","ClaseError","first_line","first_column","Entorno","Simbolo","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","line","loc","Array","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","console","log","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","id","linea","columna","identificador","pos","last","SP_ID","SP_VAL","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","NodoCST","txtGramProdAux","txtGramRegSemAux","ReporteGramatical","ReporteCST","lista","44","XPATHparser","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","29","30","31","32","33","34","35","36","37","38","39","40","41","43","45","46","47","xpath","undefined","tipoQuery","Path","Acceso","Aritmetico","operacionAritmetica","SUMA","RESTA","MULT","DIV","MOD","Relacional","operacionRelacional","IGUAL","DIFERENCIACION","MENOR","MENORIGUAL","MAYOR","MAYORIGUAL","Logica","operacionLogica","AND","OR","Primitivo","tipoPrimitivo","STRING","NUMBER","28","42","tmp","column","tipoAcceso","predicados","SP_id","SP_tipoAcceso","tipo","texto","key","GraficarAST","hijoIzq","hijoDer","tipoOperacion","sym","ent","simboloPadre","valorIzq","execute","valorDer","type","value","Number","BOOL","L_Accesos","tipoPath","salida","nuevaL_Accesos","newL_Acc","acceso","insertarConsulta","validarAntecesores","getQuery","RESP","listaEntornos","metodoCompararCadenas","setTranslate","validarPredicadosRaiz","construirNodos","unirSalida","entPadre","posActAcceso","replaceAll","metodoVerificarAtributo","atri","getAtributo","validarPredicadosAtri","crearAtributoEtiqueta","entChiild","construirTodosAtributos","listaSimbolos","construirTodosTextos","entActual","validarPredicadosNodos","tab","NODO","crearEtiquetaApertura","atributos","crearEtiquetaCierre","crearEtiquetaTexto","result","charCodeAt","valIzq","valDer","validar","SimboloTabla","nombre","ambito","re","re2","re3","newstr","crearTablaSimbolos","resultado","entorno","crearTextoGraphvizTablaSimbolos","traducirXml","traducirXmlRecursive","simbolo","parserReport","parseXPATH","utf8","Main","consoleResult","xml","repcsttxt","repgramtxt","repErrorXML","repErrorXPATH","repTablaSimbolos","repAstXpath","graphvizContent","entornoGlobal","indice","xmlResRep","setState","crearTextoGraphvizRepGram","crearTextoGraphvizCST","crearTextoReporteErrorXML","alert","querys","querysXpath","erroresXpath","erroresSemanticos","query","encode","traducir","respuesta","getTranslate","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","Row","Col","xs","md","Form","Control","placeholder","Button","variant","as","rows","Group","name","size","Graphviz","dot","height","width","zoom","readOnly","Component","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","listaErr","String","nuevo","listaNodos","Nombre","padre","producciones","reglas","listaE","asignarPosEnts","asignarPosSimb","idAtrubito"],"mappings":"6JAAaA,EAAb,iGAgBI,WACI,IAAIC,EAAkB,GAOtB,GANAA,GAAW,6BACXA,GAAW,yBACXA,GAAW,2BACXA,GAAW,8BACXA,GAAW,cACXA,GAAW,gBACPC,KAAKC,EAAI,EAAG,CACZF,GAAW,UACX,IAAK,IAAIG,EAAI,EAAGA,EAAIF,KAAKC,EAAE,EAAGC,IAC1BH,GAAW,IAAMG,EAAEC,WACfD,EAAIF,KAAKC,IACTF,GAAW,MAGnBA,GAAW,QAkBf,OAhBAA,GAAWC,KAAKI,aAChBL,GAAWC,KAAKK,oBAChBN,GAAWC,KAAKM,kBAChBP,GAAWC,KAAKO,cAChBR,GAAWC,KAAKQ,iBAChBT,GAAWC,KAAKS,eAChBV,GAAWC,KAAKU,iBAChBX,GAAWC,KAAKW,kBAChBZ,GAAWC,KAAKY,iBAChBb,GAAW,kCACXA,GAAW,iBACXA,GAAW,oBACXA,GAAWC,KAAKa,SAChBd,GAAW,UACXA,GAAW,cACXA,GAAW,MAjDnB,0BAqDI,SAA2BA,GACvBC,KAAKa,UAAYd,EAAU,OAtDnC,4BAyDI,SAA6BA,GACzBC,KAAKI,cAAgBL,EAAU,OA1DvC,8BA6DI,SAA+BA,GAC3BC,KAAKK,qBAAuBN,EAAU,OA9D9C,mCAkEI,WACIC,KAAKM,mBAAqB,gDAC1BN,KAAKM,mBAAqB,6BAC1BR,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAE,cAC3CH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAChFH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAE,QAAQH,EAAWG,EAAE,GAAG,UACnEH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAChFH,EAAWgB,kBACXd,KAAKM,mBAAqB,IAAIR,EAAWgB,gBAAgB,MACzDhB,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWG,IACXH,EAAWgB,kBACXd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,eAAeH,EAAWgB,gBAAgB,MAC5Fd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,eAAeH,EAAWgB,gBAAgB,MAC5Fd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,OAAOH,EAAWG,EAAE,GAAG,WAAWH,EAAWgB,gBAAgB,MAC/Gd,KAAKM,mBAAqB,KAAKR,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACvED,KAAKM,mBAAqB,KAAKR,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACvED,KAAKM,mBAAqB,UAAUR,EAAWgB,gBAAgB,GAAG,MAClEd,KAAKM,mBAAqB,IAAIR,EAAWgB,gBAAgB,MACzDhB,EAAWgB,kBACXd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,OAAOH,EAAWG,EAAE,GAAG,WAAWH,EAAWgB,gBAAgB,MAC/Gd,KAAKM,mBAAqB,gBAAgBR,EAAWG,EAAE,GAAG,WAC1DH,EAAWgB,kBACXd,KAAKM,mBAAqB,SAAUR,EAAWgB,gBAAiB,MAChEhB,EAAWgB,kBACXd,KAAKM,mBAAqB,KAAKR,EAAWgB,gBAAgB,GAAG,MAC7Dd,KAAKM,mBAAqB,gBAAgBR,EAAWG,EAAE,GAAG,WAC1DD,KAAKM,mBAAqB,KAAKR,EAAWgB,gBAAgB,GAAG,MAC7Dd,KAAKM,mBAAqB,YAC1BN,KAAKM,mBAAqB,UAtGlC,gCA2GI,WACIN,KAAKO,eAAiB,8CACtBP,KAAKO,eAAiB,gCAEtBT,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAE,cACvCH,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAC5EH,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAE,QAAQH,EAAWG,EAAE,GAAG,UAC/DH,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAE5ED,KAAKO,eAAiB,IAAIT,EAAWgB,gBAAgB,MACrDhB,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC3EH,EAAWgB,kBACXd,KAAKO,eAAiB,OAAQT,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MACtFd,KAAKO,eAAiB,uBAAyBT,EAAWG,EAAE,OAC5DD,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACnED,KAAKO,eAAiB,UAAUT,EAAWgB,gBAAgB,GAAG,MAE9Dd,KAAKO,eAAiB,IAAKT,EAAWgB,gBAAiB,MACvDd,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAG,cAC3CD,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAK,mBAAmBH,EAAWG,EAAE,GAAG,OAEhFH,EAAWgB,kBACXd,KAAKO,eAAiB,IAAKT,EAAWgB,gBAAiB,MACvDd,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAK,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWgB,kBACXd,KAAKO,eAAiB,QAAQT,EAAWG,EAAE,GAAG,eAAeH,EAAWgB,gBAAgB,MACxFd,KAAKO,eAAiB,wBAA0BT,EAAWG,EAAE,GAAG,OAChED,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACnED,KAAKO,eAAiB,UAAUT,EAAWgB,gBAAgB,GAAG,MAE9Dd,KAAKO,eAAiB,IAAKT,EAAWgB,gBAAiB,MACvDd,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,YACtBP,KAAKO,eAAiB,UApJ9B,mCAwJI,WACIP,KAAKQ,kBAAoB,iDACzBR,KAAKQ,kBAAoB,mCACzBV,EAAWG,IACXD,KAAKQ,kBAAoB,IAAIV,EAAWG,EAAE,cAC1CH,EAAWG,IACXD,KAAKQ,kBAAoB,IAAIV,EAAWG,EAAE,mBAAmBH,EAAWG,EAAE,GAAG,OAC7ED,KAAKQ,kBAAoB,oCACzBR,KAAKc,kBACLd,KAAKQ,kBAAoB,IAAIR,KAAKc,gBAAgB,MAClDhB,EAAWG,IACXD,KAAKQ,kBAAoB,IAAIV,EAAWG,EAAE,kBAAkBH,EAAWG,EAAE,GAAG,OAC5ED,KAAKc,kBACLd,KAAKQ,kBAAoB,OAAOV,EAAWG,EAAE,eAAeD,KAAKc,gBAAgB,MACjFd,KAAKQ,kBAAoB,uBAA0BV,EAAWG,EAAG,OACjED,KAAKQ,kBAAoB,KAAKV,EAAWG,EAAE,GAAG,QAAUH,EAAWG,EAAE,GAAK,UAC1ED,KAAKQ,kBAAoB,UAAUR,KAAKc,gBAAgB,GAAG,MAC3Dd,KAAKQ,kBAAoB,IAAIR,KAAKc,gBAAgB,MAClDd,KAAKQ,kBAAoB,mBA1KjC,iCA8KI,WACIR,KAAKS,gBAAkB,+CACvBT,KAAKS,gBAAkB,iCACvBX,EAAWG,IACXD,KAAKS,gBAAkB,IAAIX,EAAWG,EAAE,cACxCH,EAAWG,IACXD,KAAKS,gBAAkB,IAAIX,EAAWG,EAAE,mBAAmBH,EAAWG,EAAE,GAAG,OAC3ED,KAAKS,gBAAkB,oCACvBT,KAAKS,gBAAkB,oCACvBT,KAAKc,kBACLd,KAAKS,gBAAkB,IAAIT,KAAKc,gBAAgB,MAChDhB,EAAWG,IACXD,KAAKS,gBAAkB,IAAIX,EAAWG,EAAE,kBAAkBH,EAAWG,EAAE,GAAG,OAC1ED,KAAKc,kBACLd,KAAKS,gBAAkB,OAAOX,EAAWG,EAAE,eAAeD,KAAKc,gBAAgB,MAC/Ed,KAAKS,gBAAkB,uBAA0BX,EAAWG,EAAG,OAC/DD,KAAKS,gBAAkB,KAAKX,EAAWG,EAAE,GAAG,QAAUH,EAAWG,EAAE,GAAK,UACxED,KAAKS,gBAAkB,UAAUT,KAAKc,gBAAgB,GAAG,MACzDd,KAAKS,gBAAkB,IAAIT,KAAKc,gBAAgB,MAChDd,KAAKS,gBAAkB,oCACvBT,KAAKS,gBAAkB,iDACvBT,KAAKS,gBAAkB,mBAnM/B,mCAsMI,WACIT,KAAKY,kBAAoB,8CACzBZ,KAAKY,kBAAoB,mCAEzBd,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAE,cAC1CH,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWG,IACXD,KAAKY,kBAAmB,IAAId,EAAWG,EAAE,QAAQH,EAAWG,EAAE,GAAG,UACjEH,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAE/ED,KAAKY,kBAAoB,wCAEzBd,EAAWgB,kBACXd,KAAKY,kBAAoB,IAAId,EAAWgB,gBAAgB,MACxDhB,EAAWG,IAEXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC9EH,EAAWgB,kBACXd,KAAKY,kBAAoB,OAAQd,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MACzFd,KAAKY,kBAAoB,uBAAyBd,EAAWG,EAAE,OAC/DD,KAAKY,kBAAoB,KAAKd,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACtED,KAAKY,kBAAoB,UAAUd,EAAWgB,gBAAgB,GAAG,MAEjEd,KAAKY,kBAAoB,IAAKd,EAAWgB,gBAAiB,MAC1Dd,KAAKY,kBAAoB,oCACzBZ,KAAKY,kBAAoB,oCACzBd,EAAWgB,kBACXd,KAAKY,kBAAoB,SAAUd,EAAWgB,gBAAiB,MAE/Dd,KAAKY,kBAAoB,IAAId,EAAWgB,gBAAgB,MACxDhB,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC9EH,EAAWgB,kBACXd,KAAKY,kBAAoB,OAAQd,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MACzFd,KAAKY,kBAAoB,uBAAyBd,EAAWG,EAAE,OAC/DD,KAAKY,kBAAoB,KAAKd,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACtED,KAAKY,kBAAoB,UAAUd,EAAWgB,gBAAgB,GAAG,MAEjEd,KAAKY,kBAAoB,IAAKd,EAAWgB,gBAAiB,MAC1Dd,KAAKY,kBAAoB,oCACzBZ,KAAKY,kBAAoB,mBAjPjC,qCAoPI,WACIZ,KAAKW,mBAAqB,kDAC1BX,KAAKW,mBAAqB,+BAC1Bb,EAAWG,IACXD,KAAKW,mBAAqB,IAAIb,EAAWG,EAAE,cAC3CH,EAAWG,IACXD,KAAKW,mBAAqB,IAAIb,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAChFH,EAAWgB,kBACXd,KAAKW,mBAAqB,IAAIb,EAAWgB,gBAAgB,MACzDhB,EAAWG,IACXD,KAAKW,mBAAqB,IAAIb,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWgB,kBACXd,KAAKW,mBAAqB,OAAQb,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MAC1Fd,KAAKW,mBAAqB,gBAAgBb,EAAWG,EAAE,GAAG,WAC1DH,EAAWgB,kBACXd,KAAKW,mBAAqB,SAAUb,EAAWgB,gBAAiB,MAChEd,KAAKW,mBAAqB,KAAKb,EAAWgB,gBAAgB,GAAG,MAC7Dd,KAAKW,mBAAqB,gBAAgBb,EAAWG,EAAE,GAAG,WAC1DD,KAAKW,mBAAqB,IAAKb,EAAWgB,gBAAiB,MAC3Dd,KAAKW,mBAAqB,YAC1BX,KAAKW,mBAAqB,YAxQlC,KAAab,EACFG,GAAa,EADXH,EAEFiB,cAAwB,EAFtBjB,EAGFgB,gBAA0B,EAHxBhB,EAIFe,SAAmB,GAJjBf,EAKFkB,aAAuB,EALrBlB,EAMFM,aAAsB,GANpBN,EAOFO,oBAA6B,GAP3BP,EAQFQ,kBAAyB,GARvBR,EASFS,cAAqB,GATnBT,EAUFU,iBAAwB,GAVtBV,EAWFW,eAAsB,GAXpBX,EAYFY,iBAAwB,GAZtBZ,EAaFc,iBAAwB,GAbtBd,EAcFa,kBAAyB,I,qFCdpC,cAyEA,IAAIM,EAAc,WAClB,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IAC7dC,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,SAAW,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,IAAM,GAAG,MAAQ,GAAG,eAAiB,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,UAAY,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACrVC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQC,GAAG,MAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpMC,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG/D,OAAS,EACrB,OAAQ8D,GACR,KAAK,EAEG,IAAII,EAAmBC,EAEvB,OADAA,EAAe,GACR,CAACC,IAAKL,EAAGE,GAAKE,aAAeD,EAAkBG,SAAUN,EAAGE,EAAG,GAAGK,OAGjF,KAAK,EAEOJ,EAAmBC,EAEvB,OADAA,EAAe,GACR,CAACC,IAAKL,EAAGE,GAAKE,aAAeD,EAAkBG,SAAU,IAGxE,KAAK,EACL3F,KAAK6F,EAAIR,EAAGE,EAAG,GACf,MACA,KAAK,EACLvF,KAAK6F,EAAI,CAACR,EAAGE,EAAG,IAChB,MACA,KAAK,EAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaK,KAAK,IAAIC,EAAW,YAAY,eAAeV,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,eAC9IjG,KAAK6F,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAaZ,EAAGE,EAAG,GAAGF,EAAGE,EAAG,IAAG,GAE1G,MACA,KAAK,EAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaK,KAAK,IAAIC,EAAW,YAAY,eAAeV,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,eAC9IjG,KAAK6F,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAaZ,EAAGE,EAAG,GAAG,IAAG,GAE1G,MACA,KAAK,EAEOvF,KAAK6F,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAaZ,EAAGE,EAAG,GAAG,IAAG,GAEpG,MACA,KAAK,GAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaK,KAAK,IAAIC,EAAW,YAAY,eAAeV,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,eAC9IjG,KAAK6F,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAa,GAAGZ,EAAGE,EAAG,IAAG,GAEpG,MACA,KAAK,GAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaK,KAAK,IAAIC,EAAW,YAAY,eAAeV,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,eAC9IjG,KAAK6F,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAa,GAAG,IAAG,GAEpG,MACA,KAAK,GAEOjG,KAAK6F,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAa,GAAG,IAAG,GAE9F,MACA,KAAK,GAEOR,EAAaK,KAAK,IAAIC,EAAW,aAAa,4CAA4CT,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,eAEpI,MACA,KAAK,GAAI,KAAK,GACdZ,EAAGE,EAAG,GAAGO,KAAKT,EAAGE,IAAMvF,KAAK6F,EAAIR,EAAGE,EAAG,GACtC,MACA,KAAK,GAAI,KAAK,GACdvF,KAAK6F,EAAI,CAACR,EAAGE,IACb,MACA,KAAK,GAAI,KAAK,GACdvF,KAAK6F,EAAI,IAAIM,EAAQd,EAAGE,EAAG,GAAIF,EAAGE,GAAKD,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,cAAa,GAClF,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DjG,KAAK6F,EAAIR,EAAGE,EAAG,GAAI,IAAKF,EAAGE,GAC3B,MACA,KAAK,GACLvF,KAAK6F,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLrF,KAAK6F,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLrF,KAAK6F,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLrF,KAAK6F,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLrF,KAAK6F,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DrF,KAAK6F,EAAIR,EAAGE,GACZ,MACA,KAAK,GACLvF,KAAK6F,EAAI,IACT,MACA,KAAK,GACL7F,KAAK6F,EAAI,IACT,MACA,KAAK,GACL7F,KAAK6F,EAAI,IACT,MACA,KAAK,GACL7F,KAAK6F,EAAI,IACT,MACA,KAAK,GACL7F,KAAK6F,EAAI,MAITO,MAAO,CAAC,CAACtC,EAAEvC,EAAI8E,EAAE,EAAEtC,EAAE,CAAC,EAAE,GAAGuC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACxC,EAAE,CAAC,EAAE,GAAGC,EAAEzC,GAAK,CAACgF,EAAE,CAAC,EAAE,GAAG1C,EAAEvC,EAAIwC,EAAEtC,EAAI8E,GAAG,GAAGrF,EAAEQ,EAAI,CAAC,EAAE,GAAG,CAAC+E,GAAG,GAAGtC,GAAG,CAAC,EAAE,MAAM,CAACD,EAAE,CAAC,EAAE,IAAIwC,GAAG,IAAI,CAACzC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAEtC,EAAIgF,EAAE,GAAGzC,EAAE,CAAC,EAAE,IAAI0C,GAAG,GAAGxC,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,KAAK,CAACF,EAAEzC,GAAKN,EAAEQ,EAAIE,GAAKV,EAAEQ,EAAI,CAAC,EAAE,IAAIR,EAAEW,EAAI,CAAC,EAAE,KAAKX,EAAEW,EAAI,CAAC,EAAE,KAAK,CAACoC,EAAEtC,EAAIgF,EAAE,IAAI,CAAC1C,EAAEtC,EAAIgF,EAAE,GAAGzC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACN,EAAEvC,EAAIwC,EAAEtC,EAAIwC,EAAEnC,EAAIyE,GAAG,GAAGM,GAAG,GAAGzC,GAAGrC,EAAI+E,GAAG,GAAGzC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,GAAK,CAACyB,EAAE,CAAC,EAAE,KAAKhD,EAAEwB,EAAI,CAAC,EAAE,KAAK,CAAC2B,GAAG,CAAC,EAAE,KAAKnD,EAAEQ,EAAI,CAAC,EAAE,IAAI,CAACuC,EAAEtC,EAAIgF,EAAE,IAAI,CAAC7C,EAAEvC,EAAIwC,EAAEtC,EAAIwC,EAAEnC,EAAIyE,GAAG,GAAGM,GAAG,GAAGzC,GAAGrC,EAAI+E,GAAG,GAAGzC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,GAAK,CAACyB,EAAE,CAAC,EAAE,KAAKhD,EAAEwB,EAAI,CAAC,EAAE,KAAK,CAACoB,EAAEvC,EAAIwC,EAAE,CAAC,EAAE,IAAIwC,GAAG,IAAI,CAACxC,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAKpC,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEW,EAAI,CAAC,EAAE,KAAK,CAACyC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACP,EAAE,CAAC,EAAE,KAAK,CAACF,EAAEvC,EAAIwC,EAAE,CAAC,EAAE,IAAIwC,GAAG,IAAI,CAACxC,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAKpC,EAAEW,EAAI,CAAC,EAAE,IAAI,CAACoC,EAAEzC,EAAI4C,GAAG,CAAC,EAAE,KAAKlD,EAAEU,EAAI,CAAC,EAAE,KAAK,CAACwC,GAAG,CAAC,EAAE,KAAKlD,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEsC,EAAI,CAAC,EAAE,KAAKtC,EAAEsC,EAAI,CAAC,EAAE,KAAK,CAACU,EAAE,CAAC,EAAE,KAAK,CAACD,EAAEzC,EAAI4C,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACH,EAAEvC,EAAIwC,EAAEtC,EAAI6E,EAAE,GAAGC,GAAG,GAAG,CAACtC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACsC,EAAE,CAAC,EAAE,GAAG1C,EAAEvC,EAAIwC,EAAEtC,EAAI8E,GAAG,GAAG,CAACrC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAKhD,EAAEW,EAAI,CAAC,EAAE,KAAKX,EAAEW,EAAI,CAAC,EAAE,KAAKX,EAAEW,EAAI,CAAC,EAAE,IAAIX,EAAEW,EAAI,CAAC,EAAE,KAC9hDkF,eAAgB,GAChBC,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,EAJNpH,KAAK0D,MAAMuD,IAOnBK,MAAO,SAAgBC,GACnB,IAAIC,EAAOxH,KACPyH,EAAQ,CAAC,GAETC,EAAS,CAAC,MACVC,EAAS,GACTvB,EAAQpG,KAAKoG,MACbnB,EAAS,GACTE,EAAW,EACXD,EAAS,EACT0C,EAAa,EACbC,EAAS,EACTC,EAAM,EAENC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GAIpCC,EAAQC,OAAOC,OAAOrI,KAAKmI,OAC3BG,EAAc,CAAE3E,GAAI,IAExB,IAAK,IAAIxC,KAAKnB,KAAK2D,GACbyE,OAAOG,UAAUC,eAAeP,KAAKjI,KAAK2D,GAAIxC,KAChDmH,EAAY3E,GAAGxC,GAAKnB,KAAK2D,GAAGxC,IAIhCgH,EAAMM,SAASlB,EAAOe,EAAY3E,IAClC2E,EAAY3E,GAAGwE,MAAQA,EACvBG,EAAY3E,GAAGF,OAASzD,KACG,oBAAhBmI,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAO7B,KAAK6C,GAEZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OAQ5C,SAASE,EAAUC,GACftB,EAAMnG,OAASmG,EAAMnG,OAAS,EAAIyH,EAClCrB,EAAOpG,OAASoG,EAAOpG,OAASyH,EAChCpB,EAAOrG,OAASqG,EAAOrG,OAASyH,EATK,oBAA9BT,EAAY3E,GAAGqD,WACtBhH,KAAKgH,WAAasB,EAAY3E,GAAGqD,WAEjChH,KAAKgH,WAAaoB,OAAOY,eAAehJ,MAAMgH,WAqBlD,IAXA,IAUIiC,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAV3EC,EAAM,WACN,IAAIC,EAMJ,MAHqB,kBAFrBA,EAAQxB,EAAMuB,OAAS5B,KAGnB6B,EAAQnC,EAAK5D,SAAS+F,IAAUA,GAE7BA,GAGsCC,EAAQ,KAC5C,CAiBT,GAfAT,EAAQ1B,EAAMA,EAAMnG,OAAS,GAGzBtB,KAAK+G,eAAeoC,GACpBC,EAASpJ,KAAK+G,eAAeoC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAGbN,EAAShD,EAAM+C,IAAU/C,EAAM+C,GAAOF,IAKpB,qBAAXG,IAA2BA,EAAO9H,SAAW8H,EAAO,GAAI,KAC3DS,EAKKC,EAAT,SAAwCX,GAKpC,IAJA,IAAIY,EAActC,EAAMnG,OAAS,EAC7B0I,EAAQ,IAGJ,CAEJ,GAAKnC,EAAO1H,aAAeiG,EAAM+C,GAC7B,OAAOa,EAEX,GAAc,IAAVb,GAAeY,EAAc,EAC7B,OAAO,EAGXZ,EAAQ1B,EADRsC,GAAe,KAEbC,IAnBNC,EAAS,GAuBb,GAAKrC,EA0BMsB,IAAmBpB,IAC1B+B,EAAmBC,EAA+BX,QA3BrC,CAMb,IAAKG,KAJLO,EAAmBC,EAA+BX,GAGlDM,EAAW,GACDrD,EAAM+C,GACRnJ,KAAK6D,WAAWyF,IAAMA,EAAIzB,GAC1B4B,EAAS3D,KAAK,IAAI9F,KAAK6D,WAAWyF,GAAG,KAIzCW,EADA9B,EAAM+B,aACG,wBAAwB/E,EAAS,GAAG,MAAMgD,EAAM+B,eAAe,eAAeT,EAASU,KAAK,MAAQ,WAAanK,KAAK6D,WAAWoF,IAAWA,GAAS,IAErJ,wBAAwB9D,EAAS,GAAG,iBAC9B8D,GAAUnB,EAAM,eACJ,KAAK9H,KAAK6D,WAAWoF,IAAWA,GAAQ,KAEvEjJ,KAAKgH,WAAWiD,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO3J,KAAK6D,WAAWoF,IAAWA,EAClCqB,KAAMnC,EAAMhD,SACZoF,IAAK5B,EACLc,SAAUA,EACVtC,aAAmC,IAArB0C,IAOtB,GAAkB,GAAdjC,EAAiB,CACjB,GAAIqB,IAAWnB,GAAOoB,IAAmBpB,EACrC,MAAM,IAAIT,MAAM4C,GAAU,gEAI9B/E,EAASiD,EAAMjD,OACfD,EAASkD,EAAMlD,OACfE,EAAWgD,EAAMhD,SACjBwD,EAAQR,EAAMO,OACdO,EAASS,IAIb,IAAyB,IAArBG,EACA,MAAM,IAAIxC,MAAM4C,GAAU,8DAE9BnB,EAASe,GAETX,EAAkBD,GAAUpB,EAAS,KAAOoB,EAC5CA,EAASpB,EACTsB,EAAQ1B,EAAMA,EAAMnG,OAAO,GAC3B8H,EAAShD,EAAM+C,IAAU/C,EAAM+C,GAAOtB,GACtCD,EAAa,EAIjB,GAAIwB,EAAO,aAAcoB,OAASpB,EAAO9H,OAAS,EAC9C,MAAM,IAAI+F,MAAM,oDAAoD8B,EAAM,YAAYF,GAG1F,OAAQG,EAAO,IACX,KAAK,EAGD3B,EAAM3B,KAAKmD,GACXvB,EAAO5B,KAAKqC,EAAMlD,QAClB0C,EAAO7B,KAAKqC,EAAMO,QAClBjB,EAAM3B,KAAKsD,EAAO,IAClBH,EAAS,KACJC,GAUDD,EAASC,EACTA,EAAiB,OAVjBhE,EAASiD,EAAMjD,OACfD,EAASkD,EAAMlD,OACfE,EAAWgD,EAAMhD,SACjBwD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAOR,MAEJ,KAAK,EAoBD,GAhBA2B,EAAMvJ,KAAK+E,aAAaqE,EAAO,IAAI,GAGnCQ,EAAM/D,EAAI6B,EAAOA,EAAOpG,OAAOiI,GAE/BK,EAAMtE,GAAK,CACPU,WAAY2B,EAAOA,EAAOrG,QAAQiI,GAAK,IAAIvD,WAC3CyE,UAAW9C,EAAOA,EAAOrG,OAAO,GAAGmJ,UACnCxE,aAAc0B,EAAOA,EAAOrG,QAAQiI,GAAK,IAAItD,aAC7CyE,YAAa/C,EAAOA,EAAOrG,OAAO,GAAGoJ,aAErC9B,IACFgB,EAAMtE,GAAGqF,MAAQ,CAAChD,EAAOA,EAAOrG,QAAQiI,GAAK,IAAIoB,MAAM,GAAIhD,EAAOA,EAAOrG,OAAO,GAAGqJ,MAAM,KAI1E,qBAFjBtB,EAAIrJ,KAAKgF,cAAc4F,MAAMhB,EAAO,CAAC3E,EAAQC,EAAQC,EAAUmD,EAAY3E,GAAIyF,EAAO,GAAI1B,EAAQC,GAAQkD,OAAO9C,KAG7G,OAAOsB,EAIPE,IACA9B,EAAQA,EAAMO,MAAM,GAAG,EAAEuB,EAAI,GAC7B7B,EAASA,EAAOM,MAAM,GAAI,EAAEuB,GAC5B5B,EAASA,EAAOK,MAAM,GAAI,EAAEuB,IAGhC9B,EAAM3B,KAAK9F,KAAK+E,aAAaqE,EAAO,IAAI,IACxC1B,EAAO5B,KAAK8D,EAAM/D,GAClB8B,EAAO7B,KAAK8D,EAAMtE,IAElBkE,EAAWpD,EAAMqB,EAAMA,EAAMnG,OAAO,IAAImG,EAAMA,EAAMnG,OAAO,IAC3DmG,EAAM3B,KAAK0D,GACX,MAEJ,KAAK,EAED,OAAO,GAKnB,OAAO,IAGAtD,EAAW4E,EAAQ,IAAnB5E,QACAC,EAAW2E,EAAQ,KAAnB3E,QACAJ,EAAc+E,EAAQ,IAAtB/E,WACHN,EAAe,GAEnB0C,EACS,CAEbL,IAAI,EAEJd,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlH,KAAK2D,GAAGF,OAGR,MAAM,IAAI4D,MAAMJ,GAFhBjH,KAAK2D,GAAGF,OAAOuD,WAAWC,EAAKC,IAO3CuB,SAAS,SAAUlB,EAAO5D,GAiBlB,OAhBA3D,KAAK2D,GAAKA,GAAM3D,KAAK2D,IAAM,GAC3B3D,KAAK+K,OAASxD,EACdvH,KAAKgL,MAAQhL,KAAKiL,WAAajL,KAAKkL,MAAO,EAC3ClL,KAAKmF,SAAWnF,KAAKkF,OAAS,EAC9BlF,KAAKiF,OAASjF,KAAKmL,QAAUnL,KAAKqK,MAAQ,GAC1CrK,KAAKoL,eAAiB,CAAC,WACvBpL,KAAK0I,OAAS,CACV1C,WAAY,EACZC,aAAc,EACdwE,UAAW,EACXC,YAAa,GAEb1K,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAAC,EAAE,IAE3B3K,KAAKqL,OAAS,EACPrL,MAIfuH,MAAM,WACE,IAAI+D,EAAKtL,KAAK+K,OAAO,GAkBrB,OAjBA/K,KAAKiF,QAAUqG,EACftL,KAAKkF,SACLlF,KAAKqL,SACLrL,KAAKqK,OAASiB,EACdtL,KAAKmL,SAAWG,EACJA,EAAGjB,MAAM,oBAEjBrK,KAAKmF,WACLnF,KAAK0I,OAAO+B,aAEZzK,KAAK0I,OAAOgC,cAEZ1K,KAAK6I,QAAQD,QACb5I,KAAK0I,OAAOiC,MAAM,KAGtB3K,KAAK+K,OAAS/K,KAAK+K,OAAO/C,MAAM,GACzBsD,GAIfC,MAAM,SAAUD,GACR,IAAI/B,EAAM+B,EAAGhK,OACTkK,EAAQF,EAAGG,MAAM,iBAErBzL,KAAK+K,OAASO,EAAKtL,KAAK+K,OACxB/K,KAAKiF,OAASjF,KAAKiF,OAAOyG,OAAO,EAAG1L,KAAKiF,OAAO3D,OAASiI,GAEzDvJ,KAAKqL,QAAU9B,EACf,IAAIoC,EAAW3L,KAAKqK,MAAMoB,MAAM,iBAChCzL,KAAKqK,MAAQrK,KAAKqK,MAAMqB,OAAO,EAAG1L,KAAKqK,MAAM/I,OAAS,GACtDtB,KAAKmL,QAAUnL,KAAKmL,QAAQO,OAAO,EAAG1L,KAAKmL,QAAQ7J,OAAS,GAExDkK,EAAMlK,OAAS,IACftB,KAAKmF,UAAYqG,EAAMlK,OAAS,GAEpC,IAAI+H,EAAIrJ,KAAK0I,OAAOiC,MAgBpB,OAdA3K,KAAK0I,OAAS,CACV1C,WAAYhG,KAAK0I,OAAO1C,WACxByE,UAAWzK,KAAKmF,SAAW,EAC3Bc,aAAcjG,KAAK0I,OAAOzC,aAC1ByE,YAAac,GACRA,EAAMlK,SAAWqK,EAASrK,OAAStB,KAAK0I,OAAOzC,aAAe,GAC5D0F,EAASA,EAASrK,OAASkK,EAAMlK,QAAQA,OAASkK,EAAM,GAAGlK,OAChEtB,KAAK0I,OAAOzC,aAAesD,GAG7BvJ,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAACtB,EAAE,GAAIA,EAAE,GAAKrJ,KAAKkF,OAASqE,IAEpDvJ,KAAKkF,OAASlF,KAAKiF,OAAO3D,OACnBtB,MAIf4L,KAAK,WAEG,OADA5L,KAAKgL,OAAQ,EACNhL,MAIf6L,OAAO,WACC,OAAI7L,KAAK6I,QAAQiD,iBACb9L,KAAKiL,YAAa,EASfjL,MAPIA,KAAKgH,WAAW,0BAA4BhH,KAAKmF,SAAW,GAAK,mIAAqInF,KAAKkK,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACPW,KAAMtK,KAAKmF,YAQ3B4G,KAAK,SAAUhD,GACP/I,KAAKuL,MAAMvL,KAAKqK,MAAMrC,MAAMe,KAIpCiD,UAAU,WACF,IAAIC,EAAOjM,KAAKmL,QAAQO,OAAO,EAAG1L,KAAKmL,QAAQ7J,OAAStB,KAAKqK,MAAM/I,QACnE,OAAQ2K,EAAK3K,OAAS,GAAK,MAAM,IAAM2K,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOpM,KAAKqK,MAIhB,OAHI+B,EAAK9K,OAAS,KACd8K,GAAQpM,KAAK+K,OAAOW,OAAO,EAAG,GAAGU,EAAK9K,UAElC8K,EAAKV,OAAO,EAAE,KAAOU,EAAK9K,OAAS,GAAK,MAAQ,KAAK4K,QAAQ,MAAO,KAIpFhC,aAAa,WACL,IAAImC,EAAMrM,KAAKgM,YACXM,EAAI,IAAI9B,MAAM6B,EAAI/K,OAAS,GAAG6I,KAAK,KACvC,OAAOkC,EAAMrM,KAAKmM,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAASlC,EAAOmC,GACnB,IAAI7C,EACA6B,EACAiB,EAwDJ,GAtDIzM,KAAK6I,QAAQiD,kBAEbW,EAAS,CACLtH,SAAUnF,KAAKmF,SACfuD,OAAQ,CACJ1C,WAAYhG,KAAK0I,OAAO1C,WACxByE,UAAWzK,KAAKyK,UAChBxE,aAAcjG,KAAK0I,OAAOzC,aAC1ByE,YAAa1K,KAAK0I,OAAOgC,aAE7BzF,OAAQjF,KAAKiF,OACboF,MAAOrK,KAAKqK,MACZqC,QAAS1M,KAAK0M,QACdvB,QAASnL,KAAKmL,QACdjG,OAAQlF,KAAKkF,OACbmG,OAAQrL,KAAKqL,OACbL,MAAOhL,KAAKgL,MACZD,OAAQ/K,KAAK+K,OACbpH,GAAI3D,KAAK2D,GACTyH,eAAgBpL,KAAKoL,eAAepD,MAAM,GAC1CkD,KAAMlL,KAAKkL,MAEXlL,KAAK6I,QAAQD,SACb6D,EAAO/D,OAAOiC,MAAQ3K,KAAK0I,OAAOiC,MAAM3C,MAAM,MAItDwD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnBrK,KAAKmF,UAAYqG,EAAMlK,QAE3BtB,KAAK0I,OAAS,CACV1C,WAAYhG,KAAK0I,OAAO+B,UACxBA,UAAWzK,KAAKmF,SAAW,EAC3Bc,aAAcjG,KAAK0I,OAAOgC,YAC1BA,YAAac,EACAA,EAAMA,EAAMlK,OAAS,GAAGA,OAASkK,EAAMA,EAAMlK,OAAS,GAAG+I,MAAM,UAAU,GAAG/I,OAC5EtB,KAAK0I,OAAOgC,YAAcL,EAAM,GAAG/I,QAEpDtB,KAAKiF,QAAUoF,EAAM,GACrBrK,KAAKqK,OAASA,EAAM,GACpBrK,KAAK0M,QAAUrC,EACfrK,KAAKkF,OAASlF,KAAKiF,OAAO3D,OACtBtB,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAAC3K,KAAKqL,OAAQrL,KAAKqL,QAAUrL,KAAKkF,SAE1DlF,KAAKgL,OAAQ,EACbhL,KAAKiL,YAAa,EAClBjL,KAAK+K,OAAS/K,KAAK+K,OAAO/C,MAAMqC,EAAM,GAAG/I,QACzCtB,KAAKmL,SAAWd,EAAM,GACtBV,EAAQ3J,KAAKgF,cAAciD,KAAKjI,KAAMA,KAAK2D,GAAI3D,KAAMwM,EAAcxM,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,IAChHtB,KAAKkL,MAAQlL,KAAK+K,SAClB/K,KAAKkL,MAAO,GAEZvB,EACA,OAAOA,EACJ,GAAI3J,KAAKiL,WAAY,CAExB,IAAK,IAAI9J,KAAKsL,EACVzM,KAAKmB,GAAKsL,EAAOtL,GAErB,OAAO,EAEX,OAAO,GAIfiL,KAAK,WACG,GAAIpM,KAAKkL,KACL,OAAOlL,KAAK8H,IAMhB,IAAI6B,EACAU,EACAsC,EACAC,EAPC5M,KAAK+K,SACN/K,KAAKkL,MAAO,GAOXlL,KAAKgL,QACNhL,KAAKiF,OAAS,GACdjF,KAAKqK,MAAQ,IAGjB,IADA,IAAIwC,EAAQ7M,KAAK8M,gBACR5M,EAAI,EAAGA,EAAI2M,EAAMvL,OAAQpB,IAE9B,IADAyM,EAAY3M,KAAK+K,OAAOV,MAAMrK,KAAK6M,MAAMA,EAAM3M,SAC5BmK,GAASsC,EAAU,GAAGrL,OAAS+I,EAAM,GAAG/I,QAAS,CAGhE,GAFA+I,EAAQsC,EACRC,EAAQ1M,EACJF,KAAK6I,QAAQiD,gBAAiB,CAE9B,IAAc,KADdnC,EAAQ3J,KAAKuM,WAAWI,EAAWE,EAAM3M,KAErC,OAAOyJ,EACJ,GAAI3J,KAAKiL,WAAY,CACxBZ,GAAQ,EACR,SAGA,OAAO,EAER,IAAKrK,KAAK6I,QAAQkE,KACrB,MAIZ,OAAI1C,GAEc,KADdV,EAAQ3J,KAAKuM,WAAWlC,EAAOwC,EAAMD,MAE1BjD,EAKK,KAAhB3J,KAAK+K,OACE/K,KAAK8H,IAEL9H,KAAKgH,WAAW,0BAA4BhH,KAAKmF,SAAW,GAAK,yBAA2BnF,KAAKkK,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACPW,KAAMtK,KAAKmF,YAM3BuE,IAAI,WACI,IAAIL,EAAIrJ,KAAKoM,OACb,OAAI/C,GAGOrJ,KAAK0J,OAKxBsD,MAAM,SAAgBC,GACdjN,KAAKoL,eAAetF,KAAKmH,IAIjCC,SAAS,WAED,OADQlN,KAAKoL,eAAe9J,OAAS,EAC7B,EACGtB,KAAKoL,eAAe+B,MAEpBnN,KAAKoL,eAAe,IAKvC0B,cAAc,WACN,OAAI9M,KAAKoL,eAAe9J,QAAUtB,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,GACxEtB,KAAKoN,WAAWpN,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,IAAIuL,MAErE7M,KAAKoN,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBtE,GAEpB,OADAA,EAAI/I,KAAKoL,eAAe9J,OAAS,EAAIgM,KAAKC,IAAIxE,GAAK,KAC1C,EACE/I,KAAKoL,eAAerC,GAEpB,WAKnByE,UAAU,SAAoBP,GACtBjN,KAAKgN,MAAMC,IAInBQ,eAAe,WACP,OAAOzN,KAAKoL,eAAe9J,QAEnCuH,QAAS,CAAC,oBAAmB,GAC7B7D,cAAe,SAAmBrB,EAAG+J,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAIzI,OAAS,kBAAoByI,EAAIhF,OAAO1C,WAAa,oBAAsB0H,EAAIhF,OAAOzC,gBAK5K4G,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,mJAAiF,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WAC1XO,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACP/N,KAAK2D,GAAK,GAGZ,OALAF,EAAO0E,MAAQA,EAIf4F,EAAOxF,UAAY9E,EAAOA,EAAOsK,OAASA,EACnC,IAAIA,EAhvBO,GAqvBlBC,EAAQvK,OAASxC,EACjB+M,EAAQD,OAAS9M,EAAW8M,OAC5BC,EAAQ1G,MAAQ,WAAc,OAAOrG,EAAWqG,MAAMsD,MAAM3J,EAAYiH,YACxE8F,EAAQC,KAAO,SAAuBlG,GAC7BA,EAAK,KACN8F,QAAQC,IAAI,UAAU/F,EAAK,GAAG,SAC9BmG,EAAQC,KAAK,IAEjB,IAAIC,EAAStD,EAAQ,IAAMuD,aAAavD,EAAQ,IAAQwD,UAAUvG,EAAK,IAAK,QAC5E,OAAOiG,EAAQvK,OAAO6D,MAAM8G,IAEKtD,WAAiByD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKxG,MAAM,M,sHC10BrB7B,EAUT,WAAYsI,EAAW7I,EAAc8I,EAAcC,GAAgB,yBATnEC,mBASkE,OARlEhJ,WAQkE,OAPlE8I,WAOkE,OANlEC,aAMkE,OALlEE,SAKkE,OAJlEC,UAIkE,OAHlEC,WAGkE,OAFlEC,YAEkE,EAC9DhP,KAAK4O,cAAgBH,EACrBzO,KAAK4F,MAAQA,EACb5F,KAAK0O,MAAQA,EACb1O,KAAK2O,QAAUA,EACf3O,KAAK6O,KAAO,EACZ7O,KAAK8O,MAAQ,EACb9O,KAAK+O,OAAS,EACd/O,KAAKgP,QAAU,I,qBClBvB,cAyEA,IAAIC,EAAa,WACjB,IA4zBQC,EACAC,EA7zBJjO,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IACrcG,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,SAAW,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,IAAM,GAAG,MAAQ,GAAG,eAAiB,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACtUC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQC,GAAG,MAAMC,GAAG,IAAIsC,GAAG,IAAIrC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpME,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG/D,OAAS,EACrB,OAAQ8D,GACR,KAAK,EA6BG,OA3BAgK,EAAYtJ,KAAK,sDACjBuJ,EAAcvJ,KAAK,yBACnBwJ,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,KAAKF,EAAS,IAC7BA,IACAC,EAAKC,UAAU,WAAWF,EAASjK,EAAGE,EAAG,IACzC+J,IACAC,EAAKC,UAAU,WAAWF,EAASjK,EAAGE,EAAG,IACzC+J,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,QAAQF,EAASjK,EAAGE,IAEnC+J,EAAW,EACXJ,EAAUK,EACVA,EAAO,IAAIE,EAAQ,OAAO,EAAE,IAC5BC,EAAiBN,EACjBA,EAAc,GACdO,EAAmBN,EACnBA,EAAgB,GAET,CAACO,kBAAmB,CAACF,EAAeC,GAAkBE,WAAYX,GAGjF,KAAK,EAeG,OAbAE,EAAYtJ,KAAK,iBACjBuJ,EAAcvJ,KAAK,yBACnBwJ,IACAC,EAAKC,UAAU,QAAQF,EAASjK,EAAGE,IAEnC+J,EAAW,EACXJ,EAAUK,EACVA,EAAO,IAAIE,EAAQ,OAAO,EAAE,IAC5BC,EAAiBN,EACjBA,EAAc,GACdO,EAAmBN,EACnBA,EAAgB,GAET,CAACO,kBAAmB,CAACF,EAAeC,GAAkBE,WAAYX,GAGjF,KAAK,EAEGE,EAAYtJ,KAAK,2BACjBuJ,EAAcvJ,KAAK,+CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,QAAQH,EAASjK,EAAGE,EAAG,IAC7CuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,OAAOH,EAASjK,EAAGE,EAAG,IAC5CuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,MAAMH,EAASjK,EAAGE,IACxCuK,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGV,EAAYtJ,KAAK,uBACjBuJ,EAAcvJ,KAAK,wBACnBwJ,IACAH,EAAU,IAAIM,EAAQ,OAAOH,EAASjK,EAAGE,EAAG,IAC5CuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,QAAQH,EAASjK,EAAGE,IAC1CuK,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGV,EAAYtJ,KAAK,gBACjBuJ,EAAcvJ,KAAK,oBACnBwJ,IACAH,EAAU,IAAIM,EAAQ,MAAMH,EAAS,IACrCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGV,EAAYtJ,KAAK,mBACjBuJ,EAAcvJ,KAAK,mBACnBwJ,IACAH,EAAU,IAAIM,EAAQ,SAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGV,EAAYtJ,KAAK,qEACjBuJ,EAAcvJ,KAAK,gFACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,iBAAiBH,EAASjK,EAAGE,EAAG,IACtDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,aAAaH,EAASjK,EAAGE,EAAG,IAClDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGV,EAAYtJ,KAAK,oEACjBuJ,EAAcvJ,KAAK,8EACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,iBAAiBH,EAASjK,EAAGE,EAAG,IACtDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGV,EAAYtJ,KAAK,2CACjBuJ,EAAcvJ,KAAK,oEACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,iBAAiBH,EAASjK,EAAGE,EAAG,IACtDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,sDACjBuJ,EAAcvJ,KAAK,gEACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,aAAaH,EAASjK,EAAGE,EAAG,IAClDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,qDACjBuJ,EAAcvJ,KAAK,gEACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,4BACjBuJ,EAAcvJ,KAAK,oDACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,iCACjBuJ,EAAcvJ,KAAK,+DACnBwJ,IACAH,EAAU,IAAIM,EAAQ,aAAaH,EAASjK,EAAGE,EAAG,IAClDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,OAAOH,EAASjK,EAAGE,IACzCuK,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,sBACjBuJ,EAAcvJ,KAAK,6BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,OAAOH,EAASjK,EAAGE,IACzCuK,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,6CACjBuJ,EAAcvJ,KAAK,8EACnBwJ,IACAH,EAAU,IAAIM,EAAQ,iBAAiBH,EAASjK,EAAGE,EAAG,IACtDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,WAAWH,EAASjK,EAAGE,IAC7CuK,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,8BACjBuJ,EAAcvJ,KAAK,+BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,WAAWH,EAASjK,EAAGE,IAC7CuK,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,4BACjBuJ,EAAcvJ,KAAK,mDACnBwJ,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,UAAUH,EAAS,IACzCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,4BACjBuJ,EAAcvJ,KAAK,uDACnBwJ,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,UAAUH,EAAS,IACzCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,kCACjBuJ,EAAcvJ,KAAK,4CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,UAAUH,EAAS,IACzCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,kCACjBuJ,EAAcvJ,KAAK,4CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,UAAUH,EAAS,IACzCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,6BACjBuJ,EAAcvJ,KAAK,uCACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,mCACjBuJ,EAAcvJ,KAAK,6CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,WAAWH,EAAS,IAC1CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,sCACjBuJ,EAAcvJ,KAAK,gDACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,cAAcH,EAAS,IAC7CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,oCACjBuJ,EAAcvJ,KAAK,8CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAAS,IAC3CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,qCACjBuJ,EAAcvJ,KAAK,+CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,aAAaH,EAAS,IAC5CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,mCACjBuJ,EAAcvJ,KAAK,6CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,WAAWH,EAAS,IAC1CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,iCACjBuJ,EAAcvJ,KAAK,2CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,SAASH,EAAS,IACxCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,iCACjBuJ,EAAcvJ,KAAK,2CACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,SAASH,EAAS,IACxCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,4BACjBuJ,EAAcvJ,KAAK,sCACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,4BACjBuJ,EAAcvJ,KAAK,sCACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAASjK,EAAGE,EAAG,IACjDuK,EAAMhK,KAAKqJ,GACXG,IACAH,EAAU,IAAIM,EAAQ,IAAI,IAC1BK,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,wBACjBuJ,EAAcvJ,KAAK,4BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,UAAUH,EAAS,IACzCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,wBACjBuJ,EAAcvJ,KAAK,4BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,UAAUH,EAAS,IACzCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,mBACjBuJ,EAAcvJ,KAAK,uBACnBwJ,IACAH,EAAU,IAAIM,EAAQ,KAAKH,EAAS,IACpCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,uBACjBuJ,EAAcvJ,KAAK,2BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,SAASH,EAAS,IACxCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,yBACjBuJ,EAAcvJ,KAAK,6BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,WAAWH,EAAS,IAC1CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,4BACjBuJ,EAAcvJ,KAAK,gCACnBwJ,IACAH,EAAU,IAAIM,EAAQ,cAAcH,EAAS,IAC7CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,0BACjBuJ,EAAcvJ,KAAK,8BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,YAAYH,EAAS,IAC3CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,2BACjBuJ,EAAcvJ,KAAK,+BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,aAAaH,EAAS,IAC5CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,yBACjBuJ,EAAcvJ,KAAK,6BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,WAAWH,EAAS,IAC1CQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,uBACjBuJ,EAAcvJ,KAAK,2BACnBwJ,IACAH,EAAU,IAAIM,EAAQ,SAASH,EAAS,IACxCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,kBACjBuJ,EAAcvJ,KAAK,sBACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGV,EAAYtJ,KAAK,kBACjBuJ,EAAcvJ,KAAK,sBACnBwJ,IACAH,EAAU,IAAIM,EAAQ,IAAIH,EAAS,IACnCQ,EAAMhK,KAAKqJ,GACXnP,KAAK6F,EAAIiK,EACTA,EAAQ,KAKhB1J,MAAO,CAAC,CAACC,EAAE,EAAEtC,EAAE,CAAC,EAAE,GAAGuC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACxC,EAAE,CAAC,EAAE,GAAGC,EAAE1C,GAAK,CAACiF,EAAE,CAAC,EAAE,GAAGzC,EAAEvC,EAAI+E,GAAG,GAAGrF,EAAEO,EAAI,CAAC,EAAE,GAAG,CAACgF,GAAG,EAAEtC,GAAG,CAAC,EAAE,MAAM,CAACF,EAAE,CAAC,EAAE,KAAK,CAACA,EAAEvC,EAAIiF,EAAE,GAAGzC,EAAE,CAAC,EAAE,IAAI0C,GAAG,GAAGxC,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,KAAK,CAACF,EAAE1C,GAAKL,EAAEO,EAAI,CAAC,EAAE,IAAIP,EAAEO,EAAI,CAAC,EAAE,IAAI,CAACwC,EAAEvC,EAAIiF,EAAE,IAAI,CAAC1C,EAAEvC,EAAIiF,EAAE,GAAGzC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACL,EAAEvC,EAAIyC,EAAEtC,EAAI4E,GAAG,GAAGM,GAAG,GAAGzC,GAAGxC,EAAIkF,GAAG,GAAGJ,GAAG7E,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,GAAK,CAAC4B,EAAE,CAAC,EAAE,KAAKhD,EAAEqB,EAAI,CAAC,EAAE,KAAK,CAACmE,GAAG,CAAC,EAAE,KAAKxF,EAAEO,EAAI,CAAC,EAAE,IAAI,CAACwC,EAAEvC,EAAIiF,EAAE,IAAI,CAAC5C,EAAEvC,EAAIyC,EAAEtC,EAAI4E,GAAG,GAAGM,GAAG,GAAGzC,GAAGxC,EAAIkF,GAAG,GAAGJ,GAAG7E,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,GAAK,CAAC4B,EAAE,CAAC,EAAE,KAAKhD,EAAEqB,EAAI,CAAC,EAAE,KAAK,CAACwB,EAAE,CAAC,EAAE,IAAIwC,GAAG,IAAI,CAACxC,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIiE,GAAGhE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,KAAK7C,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEmC,EAAI,CAAC,EAAE,KAAK,CAACgB,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACN,EAAE,CAAC,EAAE,KAAK,CAACD,EAAE,CAAC,EAAE,IAAIwC,GAAG,IAAI,CAACxC,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIiE,GAAGhE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAKjC,EAAEmC,EAAI,CAAC,EAAE,IAAI,CAACY,EAAE1C,EAAI6C,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACK,GAAG,CAAC,EAAE,KAAKlD,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAK,CAACY,EAAE,CAAC,EAAE,KAAK,CAACD,EAAE1C,EAAI6C,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACF,EAAEvC,EAAI8E,EAAE,GAAGC,GAAG,GAAG,CAACtC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACsC,EAAE,CAAC,EAAE,GAAGzC,EAAEvC,EAAI+E,GAAG,GAAG,CAACrC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAKhD,EAAEmC,EAAI,CAAC,EAAE,KAAKnC,EAAEmC,EAAI,CAAC,EAAE,KAAKnC,EAAEmC,EAAI,CAAC,EAAE,IAAInC,EAAEmC,EAAI,CAAC,EAAE,KAC57C0D,eAAgB,CAACpC,GAAG,CAAC,EAAE,IAAIoL,GAAG,CAAC,EAAE,KACjC/I,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,EAJNpH,KAAK0D,MAAMuD,IAOnBK,MAAO,SAAeC,GAClB,IAAIC,EAAOxH,KAAMyH,EAAQ,CAAC,GAAiBC,EAAS,CAAC,MAAOC,EAAS,GAAIvB,EAAQpG,KAAKoG,MAAOnB,EAAS,GAAIE,EAAW,EAAGD,EAAS,EAAG0C,EAAa,EAAGC,EAAS,EAAGC,EAAM,EAClKC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GACpCC,EAAQC,OAAOC,OAAOrI,KAAKmI,OAC3BG,EAAc,CAAE3E,GAAI,IACxB,IAAK,IAAIxC,KAAKnB,KAAK2D,GACXyE,OAAOG,UAAUC,eAAeP,KAAKjI,KAAK2D,GAAIxC,KAC9CmH,EAAY3E,GAAGxC,GAAKnB,KAAK2D,GAAGxC,IAGpCgH,EAAMM,SAASlB,EAAOe,EAAY3E,IAClC2E,EAAY3E,GAAGwE,MAAQA,EACvBG,EAAY3E,GAAGF,OAASzD,KACG,oBAAhBmI,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAO7B,KAAK6C,GACZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OACH,oBAA9BN,EAAY3E,GAAGqD,WACtBhH,KAAKgH,WAAasB,EAAY3E,GAAGqD,WAEjChH,KAAKgH,WAAaoB,OAAOY,eAAehJ,MAAMgH,WAiBlD,IATI,IAQAiC,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EARvEC,EAAM,WACN,IAAIC,EAKJ,MAHqB,kBADrBA,EAAQxB,EAAMuB,OAAS5B,KAEnB6B,EAAQnC,EAAK5D,SAAS+F,IAAUA,GAE7BA,GAEkCC,EAAQ,KAC5C,CAUG,GATZT,EAAQ1B,EAAMA,EAAMnG,OAAS,GACzBtB,KAAK+G,eAAeoC,GACpBC,EAASpJ,KAAK+G,eAAeoC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAEbN,EAAShD,EAAM+C,IAAU/C,EAAM+C,GAAOF,IAER,qBAAXG,IAA2BA,EAAO9H,SAAW8H,EAAO,GAAI,CACvE,IAAIa,EAAS,GAEb,IAAKX,KADLG,EAAW,GACDrD,EAAM+C,GACRnJ,KAAK6D,WAAWyF,IAAMA,EAAIzB,GAC1B4B,EAAS3D,KAAK,IAAO9F,KAAK6D,WAAWyF,GAAK,KAI9CW,EADA9B,EAAM+B,aACG,wBAA0B/E,EAAW,GAAK,MAAQgD,EAAM+B,eAAiB,eAAiBT,EAASU,KAAK,MAAQ,WAAcnK,KAAK6D,WAAWoF,IAAWA,GAAU,IAEnK,wBAA0B9D,EAAW,GAAK,iBAAmB8D,GAAUnB,EAAM,eAAiB,KAAQ9H,KAAK6D,WAAWoF,IAAWA,GAAU,KAExJjJ,KAAKgH,WAAWiD,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO3J,KAAK6D,WAAWoF,IAAWA,EAClCqB,KAAMnC,EAAMhD,SACZoF,IAAK5B,EACLc,SAAUA,IAGtB,GAAIL,EAAO,aAAcoB,OAASpB,EAAO9H,OAAS,EAC9C,MAAM,IAAI+F,MAAM,oDAAsD8B,EAAQ,YAAcF,GAEhG,OAAQG,EAAO,IACf,KAAK,EACD3B,EAAM3B,KAAKmD,GACXvB,EAAO5B,KAAKqC,EAAMlD,QAClB0C,EAAO7B,KAAKqC,EAAMO,QAClBjB,EAAM3B,KAAKsD,EAAO,IAClBH,EAAS,KACJC,GASDD,EAASC,EACTA,EAAiB,OATjBhE,EAASiD,EAAMjD,OACfD,EAASkD,EAAMlD,OACfE,EAAWgD,EAAMhD,SACjBwD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAMR,MACJ,KAAK,EAwBD,GAvBA2B,EAAMvJ,KAAK+E,aAAaqE,EAAO,IAAI,GACnCQ,EAAM/D,EAAI6B,EAAOA,EAAOpG,OAASiI,GACjCK,EAAMtE,GAAK,CACPU,WAAY2B,EAAOA,EAAOrG,QAAUiI,GAAO,IAAIvD,WAC/CyE,UAAW9C,EAAOA,EAAOrG,OAAS,GAAGmJ,UACrCxE,aAAc0B,EAAOA,EAAOrG,QAAUiI,GAAO,IAAItD,aACjDyE,YAAa/C,EAAOA,EAAOrG,OAAS,GAAGoJ,aAEvC9B,IACAgB,EAAMtE,GAAGqF,MAAQ,CACbhD,EAAOA,EAAOrG,QAAUiI,GAAO,IAAIoB,MAAM,GACzChD,EAAOA,EAAOrG,OAAS,GAAGqJ,MAAM,KAYvB,qBATjBtB,EAAIrJ,KAAKgF,cAAc4F,MAAMhB,EAAO,CAChC3E,EACAC,EACAC,EACAmD,EAAY3E,GACZyF,EAAO,GACP1B,EACAC,GACFkD,OAAO9C,KAEL,OAAOsB,EAEPE,IACA9B,EAAQA,EAAMO,MAAM,GAAI,EAAIuB,EAAM,GAClC7B,EAASA,EAAOM,MAAM,GAAI,EAAIuB,GAC9B5B,EAASA,EAAOK,MAAM,GAAI,EAAIuB,IAElC9B,EAAM3B,KAAK9F,KAAK+E,aAAaqE,EAAO,IAAI,IACxC1B,EAAO5B,KAAK8D,EAAM/D,GAClB8B,EAAO7B,KAAK8D,EAAMtE,IAClBkE,EAAWpD,EAAMqB,EAAMA,EAAMnG,OAAS,IAAImG,EAAMA,EAAMnG,OAAS,IAC/DmG,EAAM3B,KAAK0D,GACX,MACJ,KAAK,EACD,OAAO,GAGf,OAAO,IAGAiG,EAAW3E,EAAQ,IAAnB2E,QACHF,EAAO,IAAIE,EAAQ,OAAO,EAAE,IAG5BK,EAAQ,GACRR,EAAW,EAEXF,EAAc,GACdM,EAAiB,GACjBL,EAAgB,GAChBM,EAAmB,GAEvBxH,EACS,CAEbL,IAAI,EAEJd,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlH,KAAK2D,GAAGF,OAGR,MAAM,IAAI4D,MAAMJ,GAFhBjH,KAAK2D,GAAGF,OAAOuD,WAAWC,EAAKC,IAO3CuB,SAAS,SAAUlB,EAAO5D,GAiBlB,OAhBA3D,KAAK2D,GAAKA,GAAM3D,KAAK2D,IAAM,GAC3B3D,KAAK+K,OAASxD,EACdvH,KAAKgL,MAAQhL,KAAKiL,WAAajL,KAAKkL,MAAO,EAC3ClL,KAAKmF,SAAWnF,KAAKkF,OAAS,EAC9BlF,KAAKiF,OAASjF,KAAKmL,QAAUnL,KAAKqK,MAAQ,GAC1CrK,KAAKoL,eAAiB,CAAC,WACvBpL,KAAK0I,OAAS,CACV1C,WAAY,EACZC,aAAc,EACdwE,UAAW,EACXC,YAAa,GAEb1K,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAAC,EAAE,IAE3B3K,KAAKqL,OAAS,EACPrL,MAIfuH,MAAM,WACE,IAAI+D,EAAKtL,KAAK+K,OAAO,GAkBrB,OAjBA/K,KAAKiF,QAAUqG,EACftL,KAAKkF,SACLlF,KAAKqL,SACLrL,KAAKqK,OAASiB,EACdtL,KAAKmL,SAAWG,EACJA,EAAGjB,MAAM,oBAEjBrK,KAAKmF,WACLnF,KAAK0I,OAAO+B,aAEZzK,KAAK0I,OAAOgC,cAEZ1K,KAAK6I,QAAQD,QACb5I,KAAK0I,OAAOiC,MAAM,KAGtB3K,KAAK+K,OAAS/K,KAAK+K,OAAO/C,MAAM,GACzBsD,GAIfC,MAAM,SAAUD,GACR,IAAI/B,EAAM+B,EAAGhK,OACTkK,EAAQF,EAAGG,MAAM,iBAErBzL,KAAK+K,OAASO,EAAKtL,KAAK+K,OACxB/K,KAAKiF,OAASjF,KAAKiF,OAAOyG,OAAO,EAAG1L,KAAKiF,OAAO3D,OAASiI,GAEzDvJ,KAAKqL,QAAU9B,EACf,IAAIoC,EAAW3L,KAAKqK,MAAMoB,MAAM,iBAChCzL,KAAKqK,MAAQrK,KAAKqK,MAAMqB,OAAO,EAAG1L,KAAKqK,MAAM/I,OAAS,GACtDtB,KAAKmL,QAAUnL,KAAKmL,QAAQO,OAAO,EAAG1L,KAAKmL,QAAQ7J,OAAS,GAExDkK,EAAMlK,OAAS,IACftB,KAAKmF,UAAYqG,EAAMlK,OAAS,GAEpC,IAAI+H,EAAIrJ,KAAK0I,OAAOiC,MAgBpB,OAdA3K,KAAK0I,OAAS,CACV1C,WAAYhG,KAAK0I,OAAO1C,WACxByE,UAAWzK,KAAKmF,SAAW,EAC3Bc,aAAcjG,KAAK0I,OAAOzC,aAC1ByE,YAAac,GACRA,EAAMlK,SAAWqK,EAASrK,OAAStB,KAAK0I,OAAOzC,aAAe,GAC5D0F,EAASA,EAASrK,OAASkK,EAAMlK,QAAQA,OAASkK,EAAM,GAAGlK,OAChEtB,KAAK0I,OAAOzC,aAAesD,GAG7BvJ,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAACtB,EAAE,GAAIA,EAAE,GAAKrJ,KAAKkF,OAASqE,IAEpDvJ,KAAKkF,OAASlF,KAAKiF,OAAO3D,OACnBtB,MAIf4L,KAAK,WAEG,OADA5L,KAAKgL,OAAQ,EACNhL,MAIf6L,OAAO,WACC,OAAI7L,KAAK6I,QAAQiD,iBACb9L,KAAKiL,YAAa,EASfjL,MAPIA,KAAKgH,WAAW,0BAA4BhH,KAAKmF,SAAW,GAAK,mIAAqInF,KAAKkK,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACPW,KAAMtK,KAAKmF,YAQ3B4G,KAAK,SAAUhD,GACP/I,KAAKuL,MAAMvL,KAAKqK,MAAMrC,MAAMe,KAIpCiD,UAAU,WACF,IAAIC,EAAOjM,KAAKmL,QAAQO,OAAO,EAAG1L,KAAKmL,QAAQ7J,OAAStB,KAAKqK,MAAM/I,QACnE,OAAQ2K,EAAK3K,OAAS,GAAK,MAAM,IAAM2K,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOpM,KAAKqK,MAIhB,OAHI+B,EAAK9K,OAAS,KACd8K,GAAQpM,KAAK+K,OAAOW,OAAO,EAAG,GAAGU,EAAK9K,UAElC8K,EAAKV,OAAO,EAAE,KAAOU,EAAK9K,OAAS,GAAK,MAAQ,KAAK4K,QAAQ,MAAO,KAIpFhC,aAAa,WACL,IAAImC,EAAMrM,KAAKgM,YACXM,EAAI,IAAI9B,MAAM6B,EAAI/K,OAAS,GAAG6I,KAAK,KACvC,OAAOkC,EAAMrM,KAAKmM,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAASlC,EAAOmC,GACnB,IAAI7C,EACA6B,EACAiB,EAwDJ,GAtDIzM,KAAK6I,QAAQiD,kBAEbW,EAAS,CACLtH,SAAUnF,KAAKmF,SACfuD,OAAQ,CACJ1C,WAAYhG,KAAK0I,OAAO1C,WACxByE,UAAWzK,KAAKyK,UAChBxE,aAAcjG,KAAK0I,OAAOzC,aAC1ByE,YAAa1K,KAAK0I,OAAOgC,aAE7BzF,OAAQjF,KAAKiF,OACboF,MAAOrK,KAAKqK,MACZqC,QAAS1M,KAAK0M,QACdvB,QAASnL,KAAKmL,QACdjG,OAAQlF,KAAKkF,OACbmG,OAAQrL,KAAKqL,OACbL,MAAOhL,KAAKgL,MACZD,OAAQ/K,KAAK+K,OACbpH,GAAI3D,KAAK2D,GACTyH,eAAgBpL,KAAKoL,eAAepD,MAAM,GAC1CkD,KAAMlL,KAAKkL,MAEXlL,KAAK6I,QAAQD,SACb6D,EAAO/D,OAAOiC,MAAQ3K,KAAK0I,OAAOiC,MAAM3C,MAAM,MAItDwD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnBrK,KAAKmF,UAAYqG,EAAMlK,QAE3BtB,KAAK0I,OAAS,CACV1C,WAAYhG,KAAK0I,OAAO+B,UACxBA,UAAWzK,KAAKmF,SAAW,EAC3Bc,aAAcjG,KAAK0I,OAAOgC,YAC1BA,YAAac,EACAA,EAAMA,EAAMlK,OAAS,GAAGA,OAASkK,EAAMA,EAAMlK,OAAS,GAAG+I,MAAM,UAAU,GAAG/I,OAC5EtB,KAAK0I,OAAOgC,YAAcL,EAAM,GAAG/I,QAEpDtB,KAAKiF,QAAUoF,EAAM,GACrBrK,KAAKqK,OAASA,EAAM,GACpBrK,KAAK0M,QAAUrC,EACfrK,KAAKkF,OAASlF,KAAKiF,OAAO3D,OACtBtB,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAAC3K,KAAKqL,OAAQrL,KAAKqL,QAAUrL,KAAKkF,SAE1DlF,KAAKgL,OAAQ,EACbhL,KAAKiL,YAAa,EAClBjL,KAAK+K,OAAS/K,KAAK+K,OAAO/C,MAAMqC,EAAM,GAAG/I,QACzCtB,KAAKmL,SAAWd,EAAM,GACtBV,EAAQ3J,KAAKgF,cAAciD,KAAKjI,KAAMA,KAAK2D,GAAI3D,KAAMwM,EAAcxM,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,IAChHtB,KAAKkL,MAAQlL,KAAK+K,SAClB/K,KAAKkL,MAAO,GAEZvB,EACA,OAAOA,EACJ,GAAI3J,KAAKiL,WAAY,CAExB,IAAK,IAAI9J,KAAKsL,EACVzM,KAAKmB,GAAKsL,EAAOtL,GAErB,OAAO,EAEX,OAAO,GAIfiL,KAAK,WACG,GAAIpM,KAAKkL,KACL,OAAOlL,KAAK8H,IAMhB,IAAI6B,EACAU,EACAsC,EACAC,EAPC5M,KAAK+K,SACN/K,KAAKkL,MAAO,GAOXlL,KAAKgL,QACNhL,KAAKiF,OAAS,GACdjF,KAAKqK,MAAQ,IAGjB,IADA,IAAIwC,EAAQ7M,KAAK8M,gBACR5M,EAAI,EAAGA,EAAI2M,EAAMvL,OAAQpB,IAE9B,IADAyM,EAAY3M,KAAK+K,OAAOV,MAAMrK,KAAK6M,MAAMA,EAAM3M,SAC5BmK,GAASsC,EAAU,GAAGrL,OAAS+I,EAAM,GAAG/I,QAAS,CAGhE,GAFA+I,EAAQsC,EACRC,EAAQ1M,EACJF,KAAK6I,QAAQiD,gBAAiB,CAE9B,IAAc,KADdnC,EAAQ3J,KAAKuM,WAAWI,EAAWE,EAAM3M,KAErC,OAAOyJ,EACJ,GAAI3J,KAAKiL,WAAY,CACxBZ,GAAQ,EACR,SAGA,OAAO,EAER,IAAKrK,KAAK6I,QAAQkE,KACrB,MAIZ,OAAI1C,GAEc,KADdV,EAAQ3J,KAAKuM,WAAWlC,EAAOwC,EAAMD,MAE1BjD,EAKK,KAAhB3J,KAAK+K,OACE/K,KAAK8H,IAEL9H,KAAKgH,WAAW,0BAA4BhH,KAAKmF,SAAW,GAAK,yBAA2BnF,KAAKkK,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACPW,KAAMtK,KAAKmF,YAM3BuE,IAAI,WACI,IAAIL,EAAIrJ,KAAKoM,OACb,OAAI/C,GAGOrJ,KAAK0J,OAKxBsD,MAAM,SAAgBC,GACdjN,KAAKoL,eAAetF,KAAKmH,IAIjCC,SAAS,WAED,OADQlN,KAAKoL,eAAe9J,OAAS,EAC7B,EACGtB,KAAKoL,eAAe+B,MAEpBnN,KAAKoL,eAAe,IAKvC0B,cAAc,WACN,OAAI9M,KAAKoL,eAAe9J,QAAUtB,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,GACxEtB,KAAKoN,WAAWpN,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,IAAIuL,MAErE7M,KAAKoN,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBtE,GAEpB,OADAA,EAAI/I,KAAKoL,eAAe9J,OAAS,EAAIgM,KAAKC,IAAIxE,GAAK,KAC1C,EACE/I,KAAKoL,eAAerC,GAEpB,WAKnByE,UAAU,SAAoBP,GACtBjN,KAAKgN,MAAMC,IAInBQ,eAAe,WACP,OAAOzN,KAAKoL,eAAe9J,QAEnCuH,QAAS,CAAC,oBAAmB,GAC7B7D,cAAe,SAAmBrB,EAAG+J,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAIzI,OAAS,kBAAoByI,EAAIhF,OAAO1C,WAAa,oBAAsB0H,EAAIhF,OAAOzC,gBAK5K4G,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,iJAA+E,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WACxXO,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACP/N,KAAK2D,GAAK,GAGZ,OALAF,EAAO0E,MAAQA,EAIf4F,EAAOxF,UAAY9E,EAAOA,EAAOsK,OAASA,EACnC,IAAIA,EAlsCM,GAusCjBC,EAAQvK,OAASwL,EACjBjB,EAAQD,OAASkB,EAAUlB,OAC3BC,EAAQ1G,MAAQ,WAAc,OAAO2H,EAAU3H,MAAMsD,MAAMqE,EAAW/G,YACtE8F,EAAQC,KAAO,SAAuBlG,GAC7BA,EAAK,KACN8F,QAAQC,IAAI,UAAU/F,EAAK,GAAG,SAC9BmG,EAAQC,KAAK,IAEjB,IAAIC,EAAStD,EAAQ,IAAMuD,aAAavD,EAAQ,IAAQwD,UAAUvG,EAAK,IAAK,QAC5E,OAAOiG,EAAQvK,OAAO6D,MAAM8G,IAEKtD,WAAiByD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKxG,MAAM,M,gDC5xClC,cAyEA,IAAIgI,EAAe,WACnB,IAAI9O,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIyM,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACxxBjN,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,UAAY,EAAE,IAAM,EAAE,IAAI,EAAE,KAAO,EAAE,IAAI,EAAE,SAAW,EAAE,KAAK,GAAG,OAAS,GAAG,GAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAO,GAAG,IAAI,GAAG,IAAI,GAAG,KAAO,GAAG,MAAQ,GAAG,KAAK,GAAG,WAAa,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,MAAQ,GAAG,IAAI,GAAG,IAAM,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAM,GAAG,IAAM,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAM,GAAG,GAAK,GAAG,MAAQ,GAAG,OAAS,GAAG,QAAU,GAAG,OAAS,GAAG,SAAW,GAAG,KAAO,GAAG,QAAU,EAAE,KAAO,GAC9cC,WAAY,CAACC,EAAE,QAAQE,EAAE,MAAMC,EAAE,IAAIC,EAAE,IAAIqC,GAAG,KAAKE,GAAG,KAAKG,GAAG,IAAIC,GAAG,IAAIzC,GAAG,KAAK0C,GAAG,OAAOJ,GAAG,IAAIrC,GAAG,IAAIC,GAAG,OAAOC,GAAG,QAAQC,GAAG,KAAKC,GAAG,aAAaE,GAAG,IAAIC,GAAG,YAAYE,GAAG,IAAI6L,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAAMC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,SAASzB,GAAG,UAAU0B,GAAG,SAASC,GAAG,WAAWC,GAAG,QAC9U5M,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG/D,OAAS,EACrB,OAAQ8D,GACR,KAAK,EAE+C,IAAII,EAAmBC,GAEvB,OADAA,GAAe,GACR,CAACmM,MAAOvM,EAAGE,EAAG,GAAGE,aAAaD,GAGzF,KAAK,EACLH,EAAGE,EAAG,GAAGO,KAAKT,EAAGE,IAAMvF,KAAK6F,EAAIR,EAAGE,EAAG,GACtC,MACA,KAAK,EAAG,KAAK,EAAG,KAAK,GACrBvF,KAAK6F,EAAI,CAACR,EAAGE,IACb,MACA,KAAK,OACsBsM,IAAxBxM,EAAGE,GAAI,GAAGuM,YAAyBzM,EAAGE,GAAI,GAAGuM,UAAY,YACP9R,KAAK6F,EAAI,IAAIkM,GAAKzM,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,IACtH,MACA,KAAK,OACsBsM,IAAxBxM,EAAGE,GAAI,GAAGuM,YAAyBzM,EAAGE,GAAI,GAAGuM,UAAY,YACP9R,KAAK6F,EAAI,IAAIkM,GAAKzM,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,IACtH,MACA,KAAK,OACmBsM,IAArBxM,EAAGE,GAAIuM,YAAyBzM,EAAGE,GAAIuM,UAAY,YAAYzM,EAAGE,EAAG,GAAGO,KAAKT,EAAGE,IAAMvF,KAAK6F,EAAIR,EAAGE,EAAG,GACxG,MACA,KAAK,OACmBsM,IAArBxM,EAAGE,GAAIuM,YAAyBzM,EAAGE,GAAIuM,UAAY,YAAYzM,EAAGE,EAAG,GAAGO,KAAKT,EAAGE,IAAMvF,KAAK6F,EAAIR,EAAGE,EAAG,GACxG,MACA,KAAK,EACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK,OAAQ,IAC5E,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK,aAAc,IAClF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK,SAAU,IAC9E,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK,QAAS,IAC7E,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,QAAS,IACnF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,aAAc,IACxF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,GAAK,OAAQ,IAChF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,GAAK,aAAc,IACtF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,GAAK,OAAQ,GAAI,YACpF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,GAAK,aAAc,GAAI,YAC1F,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,OAAQF,EAAGE,IACrF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,aAAcF,EAAGE,IAC3F,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,OAAQF,EAAGE,IACrF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,aAAcF,EAAGE,IAC3F,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,OAAQF,EAAGE,GAAK,YAC1F,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,aAAcF,EAAGE,GAAK,YAChG,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK,WAAY,IAChF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK,iBAAkB,IACtF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,GAAK,WAAY,IACpF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,GAAK,iBAAkB,IAC1F,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,WAAYF,EAAGE,IACzF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,iBAAkBF,EAAGE,IAC/F,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,WAAYF,EAAGE,IACzF,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImM,EAAO1M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAI,iBAAkBF,EAAGE,IAC/F,MACA,KAAK,GACLE,GAAaK,KAAK,IAAIC,GAAW,aAAa,4CAA4CT,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,eACpH,MACA,KAAK,GACLZ,EAAGE,EAAG,GAAGO,KAAKT,EAAGE,IAAMvF,KAAK6F,EAAIR,EAAGE,EAAG,GACtC,MACA,KAAK,GAAI,KAAK,GACdvF,KAAK6F,EAAIR,EAAGE,EAAG,GACf,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAIoM,EAAW3M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAK2M,EAAoBC,KAAM9M,EAAGE,EAAG,IACtH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAIoM,EAAW3M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAK2M,EAAoBE,MAAO/M,EAAGE,EAAG,IACvH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAIoM,EAAW3M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAK2M,EAAoBG,KAAMhN,EAAGE,EAAG,IACtH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAIoM,EAAW3M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAK2M,EAAoBI,IAAKjN,EAAGE,EAAG,IACrH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAIoM,EAAW3M,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAK2M,EAAoBK,IAAKlN,EAAGE,EAAG,IACrH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAI2M,GAAWlN,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAKkN,GAAoBC,MAAOrN,EAAGE,EAAG,IACvH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAI2M,GAAWlN,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAKkN,GAAoBE,eAAgBtN,EAAGE,EAAG,IAChI,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAI2M,GAAWlN,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAKkN,GAAoBG,MAAOvN,EAAGE,EAAG,IACvH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAI2M,GAAWlN,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAKkN,GAAoBI,WAAYxN,EAAGE,EAAG,IAC5H,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAI2M,GAAWlN,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAKkN,GAAoBK,MAAOzN,EAAGE,EAAG,IACvH,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAI2M,GAAWlN,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAKkN,GAAoBM,WAAY1N,EAAGE,EAAG,IAC5H,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImN,EAAO1N,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAK0N,EAAgBC,IAAK7N,EAAGE,EAAG,IAC7G,MACA,KAAK,GACLvF,KAAK6F,EAAI,IAAImN,EAAO1N,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,GAAIF,EAAGE,GAAK0N,EAAgBE,GAAI9N,EAAGE,EAAG,IAC5G,MACA,KAAK,GACLvF,KAAK6F,EAAIR,EAAGE,GACZ,MACA,KAAK,GAAI,KAAK,GACdvF,KAAK6F,EAAI,IAAIuN,GAAU9N,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK8N,GAAcC,QACrF,MACA,KAAK,GACLtT,KAAK6F,EAAI,IAAIuN,GAAU9N,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK8N,GAAcE,QACrF,MACA,KAAK,GAAI,KAAK,GACdvT,KAAK6F,EAAI,IAAIuN,GAAU9N,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,EAAG,IACzE,MACA,KAAK,QACsBsM,IAAxBxM,EAAGE,GAAI,GAAGuM,YAAyBzM,EAAGE,GAAI,GAAGuM,UAAY,YAC3B9R,KAAK6F,EAAI,IAAIkM,GAAKzM,EAAGC,GAAIS,WAAYV,EAAGC,GAAIU,aAAcZ,EAAGE,GAAK,OACnG,MACA,KAAK,QACsBsM,IAAxBxM,EAAGE,GAAI,GAAGuM,YAAyBzM,EAAGE,GAAI,GAAGuM,UAAW,YAC1B9R,KAAK6F,EAAI,IAAIkM,GAAKzM,EAAGC,EAAG,GAAGS,WAAYV,EAAGC,EAAG,GAAGU,aAAcZ,EAAGE,GAAK,SAIvGa,MAAO,CAAC,CAACC,EAAE,EAAEtC,EAAE,EAAE4C,EAAE,EAAEzC,EAAE3C,EAAIgF,GAAG/E,GAAK,CAACgF,EAAE,CAAC,IAAI,CAACxC,EAAE,CAAC,EAAE,GAAGC,EAAE,CAAC,EAAE,IAAI/C,EAAEO,EAAI,CAAC,EAAE,IAAI,CAACqC,EAAEpC,EAAI4E,EAAE,EAAEnC,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAK,CAAC0B,EAAEpC,EAAI4E,EAAE,GAAGnC,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAK,CAACoE,EAAE,CAAC,EAAE,IAAI,CAACG,EAAE,GAAGzC,EAAE3C,EAAIgF,GAAG/E,GAAKN,EAAEO,EAAI,CAAC,EAAE,GAAG,CAACyC,EAAE7B,EAAIkE,GAAGjE,IAAMpB,EAAEqB,EAAI,CAAC,EAAE,IAAIrB,EAAEqB,EAAI,CAAC,EAAE,GAAG,CAACmC,GAAG,GAAGG,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEqB,EAAI,CAAC,EAAE,KAAK,CAACmE,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAAClC,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACiC,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAK,CAACpC,GAAG,CAAC,EAAE,KAAKtD,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEO,EAAI,CAAC,EAAE,GAAG,CAACyC,EAAE7B,EAAIkE,GAAGjE,IAAMpB,EAAEO,EAAI,CAAC,EAAE,IAAI,CAACqC,EAAEpC,EAAIyC,GAAG,GAAGsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAK,CAAC0B,EAAEpC,EAAIyC,GAAG,GAAGsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAKlB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEuB,EAAI,CAAC,EAAE,KAAK,CAACqB,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK9B,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAM,CAAC6B,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACoC,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAK,CAACH,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAK1F,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAM,CAACiE,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAK1F,EAAEqB,EAAI,CAAC,EAAE,IAAIrB,EAAEqB,EAAI,CAAC,EAAE,IAAIrB,EAAEuB,EAAI,CAAC,EAAE,KAAK,CAACmE,GAAG3D,EAAI0N,GAAG,CAAC,EAAE,IAAIC,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,GAAKnP,EAAEoP,EAAI,CAAC,EAAE,KAAK,CAACxM,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK9B,EAAEoP,EAAI,CAAC,EAAE,KAAKpP,EAAEoP,EAAI,CAAC,EAAE,KAAKpP,EAAEoP,EAAI,CAAC,EAAE,KAAK,CAAC5J,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAKxF,EAAEoP,EAAI,CAAC,EAAE,IAAI,CAACpM,EAAE7B,EAAIkE,GAAGjE,IAAM,CAACwB,EAAEpC,EAAI4E,EAAE,GAAGnC,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAKlB,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMtB,EAAEuB,EAAI,CAAC,EAAE,KAAK,CAACqB,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAACc,EAAEpC,EAAI4E,EAAE,GAAGC,GAAG7D,EAAIyB,GAAG,EAAEsC,GAAG9E,EAAIiF,GAAGhF,EAAIiF,GAAGhF,EAAIuC,GAAGtC,EAAIgF,GAAG/E,EAAI2E,GAAG/D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAIoR,GAAG,GAAGC,GAAG,GAAGjC,GAAG5O,EAAImN,GAAGlN,EAAI4O,GAAG3O,EAAI4O,GAAG3O,EAAI4O,GAAG3O,GAAK,CAAC4D,GAAG3D,EAAIoB,GAAG,CAAC,EAAE,IAAIuM,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,GAAK,CAAChM,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAKnD,EAAEoP,EAAI,CAAC,EAAE,IAAI,CAACpM,EAAE7B,EAAIkE,GAAGjE,IAAMpB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMtB,EAAEqP,EAAI,CAAC,EAAE,IAAI,CAAC3J,GAAG3D,EAAI6N,GAAG1N,EAAI2N,GAAG1N,IAAMnC,EAAEqP,EAAI,CAAC,EAAE,IAAI,CAAC3J,GAAG3D,EAAI6N,GAAG1N,EAAI2N,GAAG1N,IAAMnC,EAAEsP,EAAI,CAAC,EAAE,IAAI,CAACO,GAAG1N,IAAMnC,EAAEsP,EAAI,CAAC,EAAE,IAAI,CAACO,GAAG1N,IAAMnC,EAAEoP,EAAI,CAAC,EAAE,KAAKpP,EAAEuP,EAAI,CAAC,EAAE,IAAI,CAAC7J,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI6N,GAAG1N,EAAI2N,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAMjP,EAAEuP,EAAI,CAAC,EAAE,IAAI,CAAC7J,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI6N,GAAG1N,EAAI2N,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAMjP,EAAEwP,EAAI,CAAC,EAAE,IAAI,CAAC9J,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,IAAMnC,EAAEwP,EAAI,CAAC,EAAE,IAAI,CAAC9J,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,IAAMnC,EAAEwP,EAAI,CAAC,EAAE,IAAI,CAAC9J,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,IAAMnC,EAAEwP,EAAI,CAAC,EAAE,IAAI,CAAC9J,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,IAAMnC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC0F,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAMjP,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC0F,GAAG3D,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAG1N,EAAI2N,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAMlP,EAAEoP,EAAI,CAAC,EAAE,KAAKpP,EAAEoP,EAAI,CAAC,EAAE,KAAKpP,EAAEoP,EAAI,CAAC,EAAE,MAChzJvJ,eAAgB,CAAC9C,EAAE,CAAC,EAAE,IACtB+C,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,EAJNpH,KAAK0D,MAAMuD,IAOnBK,MAAO,SAAgBC,GACnB,IAAIC,EAAOxH,KACPyH,EAAQ,CAAC,GAETC,EAAS,CAAC,MACVC,EAAS,GACTvB,EAAQpG,KAAKoG,MACbnB,EAAS,GACTE,EAAW,EACXD,EAAS,EACT0C,EAAa,EACbC,EAAS,EACTC,EAAM,EAENC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GAIpCC,EAAQC,OAAOC,OAAOrI,KAAKmI,OAC3BG,EAAc,CAAE3E,GAAI,IAExB,IAAK,IAAIxC,KAAKnB,KAAK2D,GACbyE,OAAOG,UAAUC,eAAeP,KAAKjI,KAAK2D,GAAIxC,KAChDmH,EAAY3E,GAAGxC,GAAKnB,KAAK2D,GAAGxC,IAIhCgH,EAAMM,SAASlB,EAAOe,EAAY3E,IAClC2E,EAAY3E,GAAGwE,MAAQA,EACvBG,EAAY3E,GAAGF,OAASzD,KACG,oBAAhBmI,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAO7B,KAAK6C,GAEZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OAQ5C,SAASE,EAAUC,GACftB,EAAMnG,OAASmG,EAAMnG,OAAS,EAAIyH,EAClCrB,EAAOpG,OAASoG,EAAOpG,OAASyH,EAChCpB,EAAOrG,OAASqG,EAAOrG,OAASyH,EATK,oBAA9BT,EAAY3E,GAAGqD,WACtBhH,KAAKgH,WAAasB,EAAY3E,GAAGqD,WAEjChH,KAAKgH,WAAaoB,OAAOY,eAAehJ,MAAMgH,WAqBlD,IAXA,IAUIiC,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAV3EC,EAAM,WACN,IAAIC,EAMJ,MAHqB,kBAFrBA,EAAQxB,EAAMuB,OAAS5B,KAGnB6B,EAAQnC,EAAK5D,SAAS+F,IAAUA,GAE7BA,GAGsCC,EAAQ,KAC5C,CAiBT,GAfAT,EAAQ1B,EAAMA,EAAMnG,OAAS,GAGzBtB,KAAK+G,eAAeoC,GACpBC,EAASpJ,KAAK+G,eAAeoC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAGbN,EAAShD,EAAM+C,IAAU/C,EAAM+C,GAAOF,IAKpB,qBAAXG,IAA2BA,EAAO9H,SAAW8H,EAAO,GAAI,KAC3DS,EAKKC,EAAT,SAAwCX,GAKpC,IAJA,IAAIY,EAActC,EAAMnG,OAAS,EAC7B0I,EAAQ,IAGJ,CAEJ,GAAKnC,EAAO1H,aAAeiG,EAAM+C,GAC7B,OAAOa,EAEX,GAAc,IAAVb,GAAeY,EAAc,EAC7B,OAAO,EAGXZ,EAAQ1B,EADRsC,GAAe,KAEbC,IAnBNC,EAAS,GAuBb,GAAKrC,EA0BMsB,IAAmBpB,IAC1B+B,EAAmBC,EAA+BX,QA3BrC,CAMb,IAAKG,KAJLO,EAAmBC,EAA+BX,GAGlDM,EAAW,GACDrD,EAAM+C,GACRnJ,KAAK6D,WAAWyF,IAAMA,EAAIzB,GAC1B4B,EAAS3D,KAAK,IAAI9F,KAAK6D,WAAWyF,GAAG,KAIzCW,EADA9B,EAAM+B,aACG,wBAAwB/E,EAAS,GAAG,MAAMgD,EAAM+B,eAAe,eAAeT,EAASU,KAAK,MAAQ,WAAanK,KAAK6D,WAAWoF,IAAWA,GAAS,IAErJ,wBAAwB9D,EAAS,GAAG,iBAC9B8D,GAAUnB,EAAM,eACJ,KAAK9H,KAAK6D,WAAWoF,IAAWA,GAAQ,KAEvEjJ,KAAKgH,WAAWiD,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO3J,KAAK6D,WAAWoF,IAAWA,EAClCqB,KAAMnC,EAAMhD,SACZoF,IAAK5B,EACLc,SAAUA,EACVtC,aAAmC,IAArB0C,IAOtB,GAAkB,GAAdjC,EAAiB,CACjB,GAAIqB,IAAWnB,GAAOoB,IAAmBpB,EACrC,MAAM,IAAIT,MAAM4C,GAAU,gEAI9B/E,EAASiD,EAAMjD,OACfD,EAASkD,EAAMlD,OACfE,EAAWgD,EAAMhD,SACjBwD,EAAQR,EAAMO,OACdO,EAASS,IAIb,IAAyB,IAArBG,EACA,MAAM,IAAIxC,MAAM4C,GAAU,8DAE9BnB,EAASe,GAETX,EAAkBD,GAAUpB,EAAS,KAAOoB,EAC5CA,EAASpB,EACTsB,EAAQ1B,EAAMA,EAAMnG,OAAO,GAC3B8H,EAAShD,EAAM+C,IAAU/C,EAAM+C,GAAOtB,GACtCD,EAAa,EAIjB,GAAIwB,EAAO,aAAcoB,OAASpB,EAAO9H,OAAS,EAC9C,MAAM,IAAI+F,MAAM,oDAAoD8B,EAAM,YAAYF,GAG1F,OAAQG,EAAO,IACX,KAAK,EAGD3B,EAAM3B,KAAKmD,GACXvB,EAAO5B,KAAKqC,EAAMlD,QAClB0C,EAAO7B,KAAKqC,EAAMO,QAClBjB,EAAM3B,KAAKsD,EAAO,IAClBH,EAAS,KACJC,GAUDD,EAASC,EACTA,EAAiB,OAVjBhE,EAASiD,EAAMjD,OACfD,EAASkD,EAAMlD,OACfE,EAAWgD,EAAMhD,SACjBwD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAOR,MAEJ,KAAK,EAoBD,GAhBA2B,EAAMvJ,KAAK+E,aAAaqE,EAAO,IAAI,GAGnCQ,EAAM/D,EAAI6B,EAAOA,EAAOpG,OAAOiI,GAE/BK,EAAMtE,GAAK,CACPU,WAAY2B,EAAOA,EAAOrG,QAAQiI,GAAK,IAAIvD,WAC3CyE,UAAW9C,EAAOA,EAAOrG,OAAO,GAAGmJ,UACnCxE,aAAc0B,EAAOA,EAAOrG,QAAQiI,GAAK,IAAItD,aAC7CyE,YAAa/C,EAAOA,EAAOrG,OAAO,GAAGoJ,aAErC9B,IACFgB,EAAMtE,GAAGqF,MAAQ,CAAChD,EAAOA,EAAOrG,QAAQiI,GAAK,IAAIoB,MAAM,GAAIhD,EAAOA,EAAOrG,OAAO,GAAGqJ,MAAM,KAI1E,qBAFjBtB,EAAIrJ,KAAKgF,cAAc4F,MAAMhB,EAAO,CAAC3E,EAAQC,EAAQC,EAAUmD,EAAY3E,GAAIyF,EAAO,GAAI1B,EAAQC,GAAQkD,OAAO9C,KAG7G,OAAOsB,EAIPE,IACA9B,EAAQA,EAAMO,MAAM,GAAG,EAAEuB,EAAI,GAC7B7B,EAASA,EAAOM,MAAM,GAAI,EAAEuB,GAC5B5B,EAASA,EAAOK,MAAM,GAAI,EAAEuB,IAGhC9B,EAAM3B,KAAK9F,KAAK+E,aAAaqE,EAAO,IAAI,IACxC1B,EAAO5B,KAAK8D,EAAM/D,GAClB8B,EAAO7B,KAAK8D,EAAMtE,IAElBkE,EAAWpD,EAAMqB,EAAMA,EAAMnG,OAAO,IAAImG,EAAMA,EAAMnG,OAAO,IAC3DmG,EAAM3B,KAAK0D,GACX,MAEJ,KAAK,EAED,OAAO,GAKnB,OAAO,IAGAwI,EAAUlH,EAAQ,KAAlBkH,OACP,EAA0ClH,EAAQ,KAA3CmH,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,oBACnB,EAAkCpH,EAAQ,KAAnCkI,EAAP,EAAOA,OAAQC,EAAf,EAAeA,gBACRlB,GAAQjH,EAAQ,KAAhBiH,KACP,GAAmCjH,EAAQ,GAApCsI,GAAP,GAAOA,UAAWC,GAAlB,GAAkBA,cAClB,GAA0CvI,EAAQ,KAA3C0H,GAAP,GAAOA,WAAYC,GAAnB,GAAmBA,oBACZ1M,GAAc+E,EAAQ,IAAtB/E,WACHN,GAAe,GACfiO,GAAI,GAERvL,GACS,CAEbL,IAAI,EAEJd,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlH,KAAK2D,GAAGF,OAGR,MAAM,IAAI4D,MAAMJ,GAFhBjH,KAAK2D,GAAGF,OAAOuD,WAAWC,EAAKC,IAO3CuB,SAAS,SAAUlB,EAAO5D,GAiBlB,OAhBA3D,KAAK2D,GAAKA,GAAM3D,KAAK2D,IAAM,GAC3B3D,KAAK+K,OAASxD,EACdvH,KAAKgL,MAAQhL,KAAKiL,WAAajL,KAAKkL,MAAO,EAC3ClL,KAAKmF,SAAWnF,KAAKkF,OAAS,EAC9BlF,KAAKiF,OAASjF,KAAKmL,QAAUnL,KAAKqK,MAAQ,GAC1CrK,KAAKoL,eAAiB,CAAC,WACvBpL,KAAK0I,OAAS,CACV1C,WAAY,EACZC,aAAc,EACdwE,UAAW,EACXC,YAAa,GAEb1K,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAAC,EAAE,IAE3B3K,KAAKqL,OAAS,EACPrL,MAIfuH,MAAM,WACE,IAAI+D,EAAKtL,KAAK+K,OAAO,GAkBrB,OAjBA/K,KAAKiF,QAAUqG,EACftL,KAAKkF,SACLlF,KAAKqL,SACLrL,KAAKqK,OAASiB,EACdtL,KAAKmL,SAAWG,EACJA,EAAGjB,MAAM,oBAEjBrK,KAAKmF,WACLnF,KAAK0I,OAAO+B,aAEZzK,KAAK0I,OAAOgC,cAEZ1K,KAAK6I,QAAQD,QACb5I,KAAK0I,OAAOiC,MAAM,KAGtB3K,KAAK+K,OAAS/K,KAAK+K,OAAO/C,MAAM,GACzBsD,GAIfC,MAAM,SAAUD,GACR,IAAI/B,EAAM+B,EAAGhK,OACTkK,EAAQF,EAAGG,MAAM,iBAErBzL,KAAK+K,OAASO,EAAKtL,KAAK+K,OACxB/K,KAAKiF,OAASjF,KAAKiF,OAAOyG,OAAO,EAAG1L,KAAKiF,OAAO3D,OAASiI,GAEzDvJ,KAAKqL,QAAU9B,EACf,IAAIoC,EAAW3L,KAAKqK,MAAMoB,MAAM,iBAChCzL,KAAKqK,MAAQrK,KAAKqK,MAAMqB,OAAO,EAAG1L,KAAKqK,MAAM/I,OAAS,GACtDtB,KAAKmL,QAAUnL,KAAKmL,QAAQO,OAAO,EAAG1L,KAAKmL,QAAQ7J,OAAS,GAExDkK,EAAMlK,OAAS,IACftB,KAAKmF,UAAYqG,EAAMlK,OAAS,GAEpC,IAAI+H,EAAIrJ,KAAK0I,OAAOiC,MAgBpB,OAdA3K,KAAK0I,OAAS,CACV1C,WAAYhG,KAAK0I,OAAO1C,WACxByE,UAAWzK,KAAKmF,SAAW,EAC3Bc,aAAcjG,KAAK0I,OAAOzC,aAC1ByE,YAAac,GACRA,EAAMlK,SAAWqK,EAASrK,OAAStB,KAAK0I,OAAOzC,aAAe,GAC5D0F,EAASA,EAASrK,OAASkK,EAAMlK,QAAQA,OAASkK,EAAM,GAAGlK,OAChEtB,KAAK0I,OAAOzC,aAAesD,GAG7BvJ,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAACtB,EAAE,GAAIA,EAAE,GAAKrJ,KAAKkF,OAASqE,IAEpDvJ,KAAKkF,OAASlF,KAAKiF,OAAO3D,OACnBtB,MAIf4L,KAAK,WAEG,OADA5L,KAAKgL,OAAQ,EACNhL,MAIf6L,OAAO,WACC,OAAI7L,KAAK6I,QAAQiD,iBACb9L,KAAKiL,YAAa,EASfjL,MAPIA,KAAKgH,WAAW,0BAA4BhH,KAAKmF,SAAW,GAAK,mIAAqInF,KAAKkK,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACPW,KAAMtK,KAAKmF,YAQ3B4G,KAAK,SAAUhD,GACP/I,KAAKuL,MAAMvL,KAAKqK,MAAMrC,MAAMe,KAIpCiD,UAAU,WACF,IAAIC,EAAOjM,KAAKmL,QAAQO,OAAO,EAAG1L,KAAKmL,QAAQ7J,OAAStB,KAAKqK,MAAM/I,QACnE,OAAQ2K,EAAK3K,OAAS,GAAK,MAAM,IAAM2K,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOpM,KAAKqK,MAIhB,OAHI+B,EAAK9K,OAAS,KACd8K,GAAQpM,KAAK+K,OAAOW,OAAO,EAAG,GAAGU,EAAK9K,UAElC8K,EAAKV,OAAO,EAAE,KAAOU,EAAK9K,OAAS,GAAK,MAAQ,KAAK4K,QAAQ,MAAO,KAIpFhC,aAAa,WACL,IAAImC,EAAMrM,KAAKgM,YACXM,EAAI,IAAI9B,MAAM6B,EAAI/K,OAAS,GAAG6I,KAAK,KACvC,OAAOkC,EAAMrM,KAAKmM,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAASlC,EAAOmC,GACnB,IAAI7C,EACA6B,EACAiB,EAwDJ,GAtDIzM,KAAK6I,QAAQiD,kBAEbW,EAAS,CACLtH,SAAUnF,KAAKmF,SACfuD,OAAQ,CACJ1C,WAAYhG,KAAK0I,OAAO1C,WACxByE,UAAWzK,KAAKyK,UAChBxE,aAAcjG,KAAK0I,OAAOzC,aAC1ByE,YAAa1K,KAAK0I,OAAOgC,aAE7BzF,OAAQjF,KAAKiF,OACboF,MAAOrK,KAAKqK,MACZqC,QAAS1M,KAAK0M,QACdvB,QAASnL,KAAKmL,QACdjG,OAAQlF,KAAKkF,OACbmG,OAAQrL,KAAKqL,OACbL,MAAOhL,KAAKgL,MACZD,OAAQ/K,KAAK+K,OACbpH,GAAI3D,KAAK2D,GACTyH,eAAgBpL,KAAKoL,eAAepD,MAAM,GAC1CkD,KAAMlL,KAAKkL,MAEXlL,KAAK6I,QAAQD,SACb6D,EAAO/D,OAAOiC,MAAQ3K,KAAK0I,OAAOiC,MAAM3C,MAAM,MAItDwD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnBrK,KAAKmF,UAAYqG,EAAMlK,QAE3BtB,KAAK0I,OAAS,CACV1C,WAAYhG,KAAK0I,OAAO+B,UACxBA,UAAWzK,KAAKmF,SAAW,EAC3Bc,aAAcjG,KAAK0I,OAAOgC,YAC1BA,YAAac,EACAA,EAAMA,EAAMlK,OAAS,GAAGA,OAASkK,EAAMA,EAAMlK,OAAS,GAAG+I,MAAM,UAAU,GAAG/I,OAC5EtB,KAAK0I,OAAOgC,YAAcL,EAAM,GAAG/I,QAEpDtB,KAAKiF,QAAUoF,EAAM,GACrBrK,KAAKqK,OAASA,EAAM,GACpBrK,KAAK0M,QAAUrC,EACfrK,KAAKkF,OAASlF,KAAKiF,OAAO3D,OACtBtB,KAAK6I,QAAQD,SACb5I,KAAK0I,OAAOiC,MAAQ,CAAC3K,KAAKqL,OAAQrL,KAAKqL,QAAUrL,KAAKkF,SAE1DlF,KAAKgL,OAAQ,EACbhL,KAAKiL,YAAa,EAClBjL,KAAK+K,OAAS/K,KAAK+K,OAAO/C,MAAMqC,EAAM,GAAG/I,QACzCtB,KAAKmL,SAAWd,EAAM,GACtBV,EAAQ3J,KAAKgF,cAAciD,KAAKjI,KAAMA,KAAK2D,GAAI3D,KAAMwM,EAAcxM,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,IAChHtB,KAAKkL,MAAQlL,KAAK+K,SAClB/K,KAAKkL,MAAO,GAEZvB,EACA,OAAOA,EACJ,GAAI3J,KAAKiL,WAAY,CAExB,IAAK,IAAI9J,KAAKsL,EACVzM,KAAKmB,GAAKsL,EAAOtL,GAErB,OAAO,EAEX,OAAO,GAIfiL,KAAK,WACG,GAAIpM,KAAKkL,KACL,OAAOlL,KAAK8H,IAMhB,IAAI6B,EACAU,EACAsC,EACAC,EAPC5M,KAAK+K,SACN/K,KAAKkL,MAAO,GAOXlL,KAAKgL,QACNhL,KAAKiF,OAAS,GACdjF,KAAKqK,MAAQ,IAGjB,IADA,IAAIwC,EAAQ7M,KAAK8M,gBACR5M,EAAI,EAAGA,EAAI2M,EAAMvL,OAAQpB,IAE9B,IADAyM,EAAY3M,KAAK+K,OAAOV,MAAMrK,KAAK6M,MAAMA,EAAM3M,SAC5BmK,GAASsC,EAAU,GAAGrL,OAAS+I,EAAM,GAAG/I,QAAS,CAGhE,GAFA+I,EAAQsC,EACRC,EAAQ1M,EACJF,KAAK6I,QAAQiD,gBAAiB,CAE9B,IAAc,KADdnC,EAAQ3J,KAAKuM,WAAWI,EAAWE,EAAM3M,KAErC,OAAOyJ,EACJ,GAAI3J,KAAKiL,WAAY,CACxBZ,GAAQ,EACR,SAGA,OAAO,EAER,IAAKrK,KAAK6I,QAAQkE,KACrB,MAIZ,OAAI1C,GAEc,KADdV,EAAQ3J,KAAKuM,WAAWlC,EAAOwC,EAAMD,MAE1BjD,EAKK,KAAhB3J,KAAK+K,OACE/K,KAAK8H,IAEL9H,KAAKgH,WAAW,0BAA4BhH,KAAKmF,SAAW,GAAK,yBAA2BnF,KAAKkK,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACPW,KAAMtK,KAAKmF,YAM3BuE,IAAI,WACI,IAAIL,EAAIrJ,KAAKoM,OACb,OAAI/C,GAGOrJ,KAAK0J,OAKxBsD,MAAM,SAAgBC,GACdjN,KAAKoL,eAAetF,KAAKmH,IAIjCC,SAAS,WAED,OADQlN,KAAKoL,eAAe9J,OAAS,EAC7B,EACGtB,KAAKoL,eAAe+B,MAEpBnN,KAAKoL,eAAe,IAKvC0B,cAAc,WACN,OAAI9M,KAAKoL,eAAe9J,QAAUtB,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,GACxEtB,KAAKoN,WAAWpN,KAAKoL,eAAepL,KAAKoL,eAAe9J,OAAS,IAAIuL,MAErE7M,KAAKoN,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBtE,GAEpB,OADAA,EAAI/I,KAAKoL,eAAe9J,OAAS,EAAIgM,KAAKC,IAAIxE,GAAK,KAC1C,EACE/I,KAAKoL,eAAerC,GAEpB,WAKnByE,UAAU,SAAoBP,GACtBjN,KAAKgN,MAAMC,IAInBQ,eAAe,WACP,OAAOzN,KAAKoL,eAAe9J,QAEnCuH,QAAS,CAAC,oBAAmB,GAC7B7D,cAAe,SAAmBrB,EAAG+J,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAAE3N,KAAKgN,MAAM,UAAW0G,GAAI,GACjC,MACA,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAAGA,IAAShG,EAAIzI,OAAUjF,KAAKgN,MAAM,UAC1C,MACA,KAAK,EAIe,OAHAhN,KAAKgN,MAAM,WACXU,EAAIzI,OAAQyO,GACZA,GAAM,GACC,GAG3B,KAAK,EAAE1T,KAAKgN,MAAM,UAAW0G,GAAI,GACjC,MACA,KAAK,EAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAAIA,IAAShG,EAAIzI,OAAUjF,KAAKgN,MAAM,UAC3C,MACA,KAAK,GAIe,OAHAhN,KAAKgN,MAAM,WACXU,EAAIzI,OAAQyO,GACZA,GAAM,GACC,GAG3B,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACL,MACA,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG7F,QAAQC,IAAI,+BAA8BJ,EAAIzI,OAAS,kBAAoByI,EAAIhF,OAAO1C,WAAa,oBAAsB0H,EAAIhF,OAAOzC,gBAI5I4G,MAAO,CAAC,YAAY,aAAa,gBAAgB,gBAAgB,gBAAgB,gBAAgB,iBAAiB,aAAa,YAAY,aAAa,gBAAgB,gBAAgB,gBAAgB,gBAAgB,iBAAiB,aAAa,aAAa,WAAW,aAAa,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,eAAe,WAAW,WAAW,UAAU,WAAW,cAAc,UAAU,WAAW,WAAW,WAAW,UAAU,UAAU,aAAa,cAAc,cAAc,WAAW,gBAAgB,oBAAoB,qBAAqB,eAAe,eAAe,mBAAmB,eAAe,uCAAiC,UAAU,WAC3rf4F,GAAOxF,UAAY9E,EAAOA,EAAOsK,OAASA,GACnC,IAAIA,GA53BQ,GAi4BnBC,EAAQvK,OAASuM,EACjBhC,EAAQD,OAASiC,EAAYjC,OAC7BC,EAAQ1G,MAAQ,WAAc,OAAO0I,EAAY1I,MAAMsD,MAAMoF,EAAa9H,YAC1E8F,EAAQC,KAAO,SAAuBlG,GAC7BA,EAAK,KACN8F,QAAQC,IAAI,UAAU/F,EAAK,GAAG,SAC9BmG,EAAQC,KAAK,IAEjB,IAAIC,EAAStD,EAAQ,IAAMuD,aAAavD,EAAQ,IAAQwD,UAAUvG,EAAK,IAAK,QAC5E,OAAOiG,EAAQvK,OAAO6D,MAAM8G,IAEKtD,WAAiByD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKxG,MAAM,M,6HCn9BrBgK,EAAb,WAKI,WACO1H,EACAqJ,EACAlF,EACAmF,EACAC,EACA/B,GAAsB,yBALtBxH,OAKqB,KAJrBqJ,SAIqB,KAHrBlF,KAGqB,KAFrBmF,aAEqB,KADrBC,aACqB,KAArB/B,YAAqB,KAT5BgC,WAS4B,OAR5BC,mBAQ4B,EACxB/T,KAAK8T,OAAS,EACd9T,KAAK+T,eAAiB,EAb9B,+CAgBI,SAAmBC,GACfhU,KAAK8R,UAAYkC,IAjBzB,yBAoBI,SAAmBC,GAEf,IAAK,IAAMC,KADXD,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,WAAcH,KAAKyO,GAAGtO,WAAa,QACzFH,KAAK6T,WACnBI,EAAQjU,KAAK6T,WAAWK,GAAKC,YAAYF,GACzCA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAlD,SAA+EH,KAAK6T,WAAWK,GAAK5J,KAAKnK,WAAa,IAAMH,KAAK6T,WAAWK,GAAKP,OAAOxT,WAAa,MAElL,OAAO8T,MA1Bf,M,2ICEY/B,E,gCAAAA,O,eAAAA,I,iBAAAA,I,eAAAA,I,aAAAA,I,cAAAA,M,KAQL,IAAMD,EAAb,WAEI,WACO3H,EACAqJ,EACAS,EACAC,EACAC,EACAC,GAAa,yBALbjK,OAKY,KAJZqJ,SAIY,KAHZS,UAGY,KAFZC,UAEY,KADZC,gBACY,KAAZC,MARX,2CAUI,SAAeC,EAAcC,GAEzB,IAAIC,EAAW1U,KAAKoU,QAAQO,QAAQH,EAAKC,GACrCG,EAAW5U,KAAKqU,QAAQM,QAAQH,EAAKC,GAEzC,GAAIC,EAASG,OAASxB,gBAAcC,QAAWoB,EAASG,OAASxB,gBAAcE,QAAWqB,EAASC,OAASxB,gBAAcC,QAAUsB,EAASC,OAASxB,gBAAcE,QAAUvT,KAAKsU,gBAAkBpC,EAAoBC,KAGpN,IAAKuC,EAASG,OAASxB,gBAAcE,QAAYqB,EAASC,OAASxB,gBAAcE,OAAS,CAE3F,GAAGvT,KAAKsU,gBAAkBpC,EAAoBE,MAC1C,MAAO,CAAE0C,MAAQJ,EAASI,MAAQF,EAASE,MAASD,KAAMxB,gBAAcE,QACtE,GAAGvT,KAAKsU,gBAAkBpC,EAAoBG,KAChD,MAAO,CAAEyC,MAAQJ,EAASI,MAAQF,EAASE,MAASD,KAAMxB,gBAAcE,QACtE,GAAGvT,KAAKsU,gBAAkBpC,EAAoBI,IAAI,CAEpD,GAAGyC,OAAOH,EAASE,QAAU,EACzB,MAAO,CAAEA,MAAQJ,EAASI,MAAQF,EAASE,MAASD,KAAMxB,gBAAcE,QAExE,MAAM,IAAIlM,MAAM,6BAA6BuN,EAAS,8CAA8C5U,KAAKsK,KAAK,WAAWtK,KAAK2T,QAGhI,GAAI3T,KAAKsU,gBAAkBpC,EAAoBK,IACjD,MAAQ,CAAEuC,MAAQJ,EAASI,MAAQF,EAASE,MAASD,KAAMxB,gBAAcE,QAEzE,MAAM,IAAIlM,MAAM,gDAAkDrH,KAAKuU,IAAM,YAAYvU,KAAKsK,KAAK,WAAWtK,KAAK2T,QAIvH,MAAM,IAAItM,MAAM,8DAA8DuN,EAASC,KAAK,iBAAiBD,EAASC,KAAM,YAAY7U,KAAKsK,KAAK,WAAWtK,KAAK2T,QAvBlK,MAAQ,CAAEmB,MAAQJ,EAASI,MAAQF,EAASE,MAAQD,KAAMxB,gBAAcE,UAhBpF,yBA4CI,SAAmBU,GAMf,OALAA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,WAAcH,KAAKuU,IAAIpU,WAAa,QAC5G8T,EAAQjU,KAAKoU,QAAQD,YAAYF,GACjCA,EAAQjU,KAAKqU,QAAQF,YAAYF,GACjCA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,SAAWH,KAAKoU,QAAQ9J,KAAO,IAAMtK,KAAKoU,QAAQT,OAAOxT,WAAa,MAC9I8T,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,SAAWH,KAAKqU,QAAQ/J,KAAO,IAAMtK,KAAKqU,QAAQV,OAAOxT,WAAa,UAjDtJ,M,mICRY8S,E,gCAAAA,O,aAAAA,I,YAAAA,M,KAKL,IAAMD,EAAb,WAEI,WACO1I,EACAqJ,EACAS,EACAC,EACAC,EACAC,GAAa,yBALbjK,OAKY,KAJZqJ,SAIY,KAHZS,UAGY,KAFZC,UAEY,KADZC,gBACY,KAAZC,MARX,2CAUI,SAAeC,EAAeC,GAE1B,IAAIC,EAAW1U,KAAKoU,QAAQO,QAAQH,EAAKC,GAEzC,GAAIC,EAASG,OAASxB,gBAAc2B,KAAK,CAErC,IAAuB,IAAnBN,EAASI,OAAmB9U,KAAKsU,gBAAkBrB,EAAgBC,IAEnE,MAAQ,CAAE4B,MAAOJ,EAASI,MAAOD,KAAMxB,gBAAc2B,MAClD,IAAuB,IAAnBN,EAASI,OAAkB9U,KAAKsU,gBAAkBrB,EAAgBE,GAEzE,MAAQ,CAAE2B,MAAOJ,EAASI,MAAOD,KAAMxB,gBAAc2B,MAGzD,IAAIJ,EAAW5U,KAAKqU,QAAQM,QAAQH,EAAKC,GAEzC,GAAIG,EAASC,OAASxB,gBAAc2B,KAAK,CAErC,GAAIhV,KAAKsU,gBAAkBrB,EAAgBC,IAEvC,MAAO,CAAE4B,MADMJ,EAASI,OAASF,EAASE,MAClBD,KAAMxB,gBAAc2B,MAC1C,GAAIhV,KAAKsU,gBAAkBrB,EAAgBE,GAE7C,MAAO,CAAE2B,MADMJ,EAASI,OAASF,EAASE,MAClBD,KAAMxB,gBAAc2B,MAE5C,MAAM,IAAI3N,MAAM,gDAAkDrH,KAAKuU,IAAM,YAAYvU,KAAKsK,KAAK,WAAWtK,KAAK2T,QAIvH,MAAM,IAAItM,MAAM,8DAA8DuN,EAASC,KAAO,UAAU7U,KAAKsK,KAAK,WAAWtK,KAAK2T,QAKtI,MAAM,IAAItM,MAAM,8DAA8DqN,EAASG,KAAO,UAAU7U,KAAKsK,KAAK,WAAWtK,KAAK2T,UA5C9I,yBAkDI,SAAmBM,GAMf,OALAA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,WAAcH,KAAKuU,IAAIpU,WAAa,QAC5G8T,EAAQjU,KAAKoU,QAAQD,YAAYF,GACjCA,EAAQjU,KAAKqU,QAAQF,YAAYF,GACjCA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,SAAWH,KAAKoU,QAAQ9J,KAAO,IAAMtK,KAAKoU,QAAQT,OAAOxT,WAAa,MAC9I8T,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,SAAWH,KAAKqU,QAAQ/J,KAAO,IAAMtK,KAAKqU,QAAQV,OAAOxT,WAAa,UAvDtJ,M,sHCFa4R,EAAb,WAKI,WACWzH,EACAqJ,EACAsB,EACAC,GACR,yBAJQ5K,OAIT,KAHSqJ,SAGT,KAFSsB,YAET,KADSC,WACT,KARFC,YAQE,OAPFC,oBAOE,EACEpV,KAAKmV,OAAS,GACdnV,KAAKoV,eAAiB,GAZ9B,sDAeI,WAEI,IAFmC,EAE/BC,EAAqB,GAFU,cAGdrV,KAAKiV,WAHS,IAGnC,2BAAqC,CAAC,IAA3BK,EAA0B,QAEjC,GAA0B,UAAtBA,EAAO1B,WAAwB,CAE/B,KAAIyB,EAAS/T,OAAS,GAGlB,MAAM,IAAI+F,MAAM,mEAAqEiO,EAAOhL,KAAO,WAAagL,EAAO3B,QAFvH0B,EAASlI,WAKbkI,EAASvP,KAAKwP,IAba,8BAgBnC,OAAOD,IA/Bf,wBAkCI,WAEI,IAFyB,EAErBF,EAAiB,GAFI,cAIHnV,KAAKmV,QAJF,IAIzB,2BAAmC,CAC/BA,GAD+B,SAJV,8BAOzB,OAAOA,IAzCf,qBA4CI,SAAeX,EAAcC,GAIzB,OAHAzU,KAAKuV,mBACLvV,KAAKiV,UAAYjV,KAAKwV,qBAEA,QAAlBxV,KAAKkV,UA8CLlV,KAAKmV,OAAS,GACdnV,KAAKyV,SAASjB,EAAK,EAAGC,GACf,CAAEK,MAAO9U,KAAKmV,OAAQN,KAAMxB,gBAAcqC,QA9C7C1V,KAAKiV,UAAU3T,OAAS,GAAKkT,EAAImB,cAAcrU,OAAS,IAEpDkT,EAAI5F,gBAAkB5O,KAAKiV,UAAU,GAAGxG,IAAuC,SAAjCzO,KAAKiV,UAAU,GAAGrB,YAE3B,KAAjC9T,IAAWQ,mBACXR,IAAW8V,wBAEf9V,IAAW+V,aAAa,8CACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,iBAAmBuU,EAAIzF,MAAQ,MAC5EjP,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,iBAAmBD,KAAKiV,UAAU,GAAGnB,MAAQ,MAC1FhU,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAW+V,aAAa,eAAkB/V,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAW+V,aAAa,eAAkB/V,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAW+V,aAAa,WAAa/V,IAAWiB,aAAe,KAC/DjB,IAAW+V,aAAa,sBACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,aAC7CH,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,mBAAqBH,IAAWG,EAAI,GAAK,QACtFH,IAAWG,IAEXH,IAAW+V,aAAa,QAAS/V,IAAWG,EAAI,GAAI,iBACpDH,IAAW+V,aAAa,WAAa/V,IAAWiB,aAAe,KAG3Df,KAAK8V,sBAAsBtB,EAAK,KAE5BxU,KAAKiV,UAAU3T,OAAS,EACxBtB,KAAKyV,SAASjB,EAAK,GAEnBxU,KAAK+V,eAAevB,EAAK,MAGM,aAAhCxU,KAAKiV,UAAU,GAAGnD,WACzB9R,KAAKyV,SAASjB,EAAK,IASxB,CAAEM,MAAO9U,KAAKgW,aAAcnB,KAAMxB,gBAAcC,WAlG/D,sBAqGI,SAAiB2C,EAAmBC,EAAsBzB,GAEtD,QAAqB5C,IAAjB4C,EAA4B,CAE5B,GAAgD,WAA5CzU,KAAKiV,UAAUiB,GAActC,YAAsE,SAA3C5T,KAAKiV,UAAUiB,GAAcpE,UAkBrF,MAAM,IAAIzK,MAAM,qCAAuCrH,KAAKiV,UAAUiB,GAAczH,IAhBhFzO,KAAKiV,UAAU3T,OAAS4U,EAAe,EACvClW,KAAKyV,SAASQ,EAAUC,EAAe,EAAGzB,GAGpB,QAAlBzU,KAAKkV,SACLlV,KAAKmV,OAAOrP,KAAK,CAAEgP,MAAOL,EAAa7O,MAAMuQ,WAAW,IAAM,IAAKtB,KAAMxB,gBAAcC,SAGxC,SAA3CtT,KAAKiV,UAAUiB,GAAcpE,UAC7B9R,KAAKmV,OAAOrP,KAAK2O,EAAa7O,MAAMuQ,WAAW,IAAM,IAAM,MAE3DnW,KAAKmV,OAAOrP,KAAK2O,EAAa7F,cAAgB,OAAU6F,EAAa7O,MAAMuQ,WAAW,IAAM,IAAM,YAUlH,GAAgD,aAA5CnW,KAAKiV,UAAUiB,GAActC,WAA2B,CAGnB,KAAjC9T,IAAWa,mBACXb,IAAWsW,0BAEftW,IAAW+V,aAAa,wDACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,kBAAkBD,KAAKiV,UAAUiB,GAAcpC,MAAM,MAC9FhU,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,UAAUH,IAAWiB,aAAa,KAC3EjB,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAC3DjB,IAAW+V,aAAa,wBACxB/V,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAG3D,IAAMsV,EAAOJ,EAASK,YAAYtW,KAAKiV,UAAUiB,GAAczH,IAC/D,GAAY,MAAR4H,EAEIrW,KAAKuW,sBAAsBN,EAAUI,EAAMH,KAEvClW,KAAKiV,UAAU3T,OAAS4U,EAAe,EACvClW,KAAKyV,SAASQ,EAAUC,EAAe,EAAGG,GAGpB,QAAlBrW,KAAKkV,SACLlV,KAAKmV,OAAOrP,KAAK,CAAEgP,MAAOuB,EAAKzQ,MAAMuQ,WAAW,IAAM,IAAKtB,KAAMxB,gBAAcC,UAE3C,KAAhCxT,IAAWc,kBACXd,IAAW0W,wBAEf1W,IAAW+V,aAAa,iDACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBoW,EAAKtH,MAAM,MACrEjP,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBoW,EAAKrH,OAAO,MACtElP,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,UAAUH,IAAWiB,aAAa,KAC3EjB,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAC3DjB,IAAW+V,aAAa,4BACxB/V,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAC3DjB,IAAW+V,aAAa,2BACxB7V,KAAKmV,OAAOrP,KAAKuQ,EAAKzH,cAAgB,OAAUyH,EAAKzQ,MAAMuQ,WAAW,IAAM,IAAM,cAI3F,GAAIF,EAASN,cAAcrU,OAAS,GAAgD,aAA3CtB,KAAKiV,UAAUiB,GAAcpE,WAA4B9R,KAAKiV,UAAU3T,SAAW4U,EAAe,EAAG,CAAC,IAAD,gBAEzHD,EAASN,eAFgH,IAEjJ,2BAAgD,CAAC,IAAtCc,EAAqC,QAC5CzW,KAAKyV,SAASgB,EAAWP,IAHoH,qCAOlJ,GAAgD,mBAA5ClW,KAAKiV,UAAUiB,GAActC,YAEpC,GAA+C,aAA3C5T,KAAKiV,UAAUiB,GAAcpE,WAA4B9R,KAAKiV,UAAU3T,SAAW4U,EAAe,EAElGlW,KAAK0W,wBAAwBT,QAI7B,GAAIA,EAASU,cAAcrV,OAAS,EAAG,CAAC,IAAD,gBAEhB2U,EAASU,eAFO,IAEnC,2BAA2C,CAAC,IAAjCN,EAAgC,QAEnCrW,KAAKuW,sBAAsBN,EAAUI,EAAMH,KAEvClW,KAAKiV,UAAU3T,OAAS4U,EAAe,EACvClW,KAAKyV,SAASQ,EAAUC,EAAe,EAAGG,GAGpB,QAAlBrW,KAAKkV,SACLlV,KAAKmV,OAAOrP,KAAK,CAAEgP,MAAOuB,EAAKzQ,MAAMuQ,WAAW,IAAM,IAAKtB,KAAMxB,gBAAcC,SAE/EtT,KAAKmV,OAAOrP,KAAKuQ,EAAKzH,cAAgB,OAAUyH,EAAKzQ,MAAMuQ,WAAW,IAAM,IAAM,SAb/D,qCAqBxC,GAAgD,UAA5CnW,KAAKiV,UAAUiB,GAActC,WAAwB,CAE5D,GAAI5T,KAAKiV,UAAU3T,SAAW4U,EAAe,EAazC,MAAM,IAAI7O,MAAM,wGAX+B,aAA3CrH,KAAKiV,UAAUiB,GAAcpE,UAEN,KAAnBmE,EAAShC,OACTjU,KAAKmV,OAAOrP,KAAKmQ,EAAShC,MAAQ,MAItCjU,KAAK4W,qBAAqBX,QAO/B,GAAgD,WAA5CjW,KAAKiV,UAAUiB,GAActC,WAEhC5T,KAAKiV,UAAU3T,OAAS4U,EAAe,EACvClW,KAAKyV,SAASQ,EAAUC,EAAe,GAEvClW,KAAK+V,eAAeE,EAAU,SAG/B,GAAgD,eAA5CjW,KAAKiV,UAAUiB,GAActC,YAEpC,GAAIqC,EAASN,cAAcrU,OAAS,EAAG,CAAC,IAAD,gBAEX2U,EAASN,eAFE,IAEnC,2BAAgD,CAAC,IAAtCkB,EAAqC,QAExC7W,KAAK8W,uBAAuBb,EAAUY,EAAWX,KAE7ClW,KAAKiV,UAAU3T,OAAS4U,EAAe,EACvClW,KAAKyV,SAASoB,EAAWX,EAAe,GAExClW,KAAK+V,eAAec,EAAW,MATR,oCAgBpC,IAAgD,SAA5C7W,KAAKiV,UAAUiB,GAActC,WAkDpC,MAAM,IAAIvM,MAAM,mCAAqCrH,KAAKiV,UAAUiB,GAActC,WAAa,gBAAkB5T,KAAKiV,UAAUiB,GAActC,WAA9H,uCACA5T,KAAKiV,UAAUiB,GAAc5L,KAAO,cAAgBtK,KAAKiV,UAAUiB,GAAcvC,QAjDjG,GAAIsC,EAASN,cAAcrU,OAAS,EAAG,CAAC,IAAD,gBAEX2U,EAASN,eAFE,IAEnC,2BAAgD,CAAC,IAAtCkB,EAAqC,QAExCA,EAAUjI,gBAAkB5O,KAAKiV,UAAUiB,GAAczH,IAGpB,KAAjC3O,IAAWQ,mBACXR,IAAW8V,wBAEf9V,IAAW+V,aAAa,8CACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,iBAAmB4W,EAAU9H,MAAQ,MAClFjP,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,iBAAmBD,KAAKiV,UAAUiB,GAAcpC,MAAQ,MACrGhU,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAW+V,aAAa,eAAkB/V,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAW+V,aAAa,eAAkB/V,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAW+V,aAAa,WAAa/V,IAAWiB,aAAe,KAC/DjB,IAAW+V,aAAa,sBACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,aAC7CH,IAAWG,IACXH,IAAW+V,aAAa,IAAM/V,IAAWG,EAAI,mBAAqBH,IAAWG,EAAI,GAAK,QACtFH,IAAWG,IAEXH,IAAW+V,aAAa,QAAS/V,IAAWG,EAAI,GAAI,iBACpDH,IAAW+V,aAAa,WAAa/V,IAAWiB,aAAe,KAG3Df,KAAK8W,uBAAuBb,EAAUY,EAAWX,KAE7ClW,KAAKiV,UAAU3T,OAAS4U,EAAe,EACvClW,KAAKyV,SAASoB,EAAWX,EAAe,GAExClW,KAAK+V,eAAec,EAAW,MAGW,aAA3C7W,KAAKiV,UAAUiB,GAAcpE,WACpC9R,KAAKyV,SAASoB,EAAWX,IA1CE,mCAtQvD,kCA4TI,SAA6BD,GAMzB,GAJuB,KAAnBA,EAAShC,OACTjU,KAAKmV,OAAOrP,KAAKmQ,EAAShC,MAAQ,MAGlCgC,EAASN,cAAcrU,OAAS,EAAG,CAAC,IAAD,gBAEX2U,EAASN,eAFE,IAEnC,2BAAgD,CAAC,IAAtCkB,EAAqC,QAC5C7W,KAAK4W,qBAAqBC,IAHK,kCAlU/C,qCA0UI,SAAgCZ,GAAoB,IAAD,gBAE5BA,EAASU,eAFmB,IAE/C,2BAA2C,CAAC,IAAjCN,EAAgC,QAEjB,QAAlBrW,KAAKkV,SACLlV,KAAKmV,OAAOrP,KAAK,CAAEgP,MAAOuB,EAAKzQ,MAAMuQ,WAAW,IAAM,IAAKtB,KAAMxB,gBAAcC,SAG/EtT,KAAKmV,OAAOrP,KAAKuQ,EAAKzH,cAAgB,OAAUyH,EAAKzQ,MAAMuQ,WAAW,IAAM,IAAM,QAR3C,8BAY/C,GAAIF,EAASN,cAAcrU,OAAS,EAAG,CAAC,IAAD,gBAEX2U,EAASN,eAFE,IAEnC,2BAAgD,CAAC,IAAtCkB,EAAqC,QAC5C7W,KAAK0W,wBAAwBG,IAHE,kCAtV/C,4BA+VI,SAAuBZ,EAAmBc,GAEtC,GAAsB,QAAlB/W,KAAKkV,SAEDe,EAASN,cAAcrU,OAAS,GAAwC,IAAlC2U,EAASN,cAAcrU,QAAmC,KAAnB2U,EAAShC,MACtFjU,KAAKmV,OAAOrP,KAAK,CAAEgP,MAAOmB,EAASrH,cAAeiG,KAAMxB,gBAAc2D,OAEtEhX,KAAKmV,OAAOrP,KAAK,CAAEgP,MAAOmB,EAAShC,MAAOY,KAAMxB,gBAAcC,aAG/D,CAEiC,KAAhCxT,IAAWU,kBACXV,IAAWmX,wBAEfnX,IAAW+V,aAAa,oDACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBgW,EAASlH,MAAM,MACzEjP,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,UAAUH,IAAWiB,aAAa,KAC3EjB,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAC3DjB,IAAW+V,aAAa,4BACxB/V,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAE3D,IAhBG,EAgBCmW,EAAY,GAhBb,cAiBgBjB,EAASU,eAjBzB,IAiBH,2BAA2C,CAAC,IAAjCN,EAAgC,QACvCa,GAAab,EAAKzH,cAAgB,OAAUyH,EAAKzQ,MAAMuQ,WAAW,IAAM,IAAM,MAC1C,KAAhCrW,IAAWc,kBACXd,IAAW0W,wBAEf1W,IAAW+V,aAAa,iDACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBoW,EAAKtH,MAAM,MACrEjP,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBoW,EAAKrH,OAAO,MACtElP,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,UAAUH,IAAWiB,aAAa,KAC3EjB,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAC3DjB,IAAW+V,aAAa,4BACxB/V,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,MAnC5D,8BAwCH,GAAsC,IAAlCkV,EAASN,cAAcrU,QAAmC,KAAnB2U,EAAShC,MAEhDnU,IAAW+V,aAAa,qCACxB/V,IAAW+V,aAAa,qCACxB/V,IAAW+V,aAAa,kDAExB7V,KAAKmV,OAAOrP,KAAKiR,EAAM,IAAMd,EAASrH,cAAgB,IAAMsI,EAAY,aAEvE,GAAIjB,EAASN,cAAcrU,OAAS,EAAG,CAExCxB,IAAW+V,aAAa,qCACxB/V,IAAW+V,aAAa,kDAExB7V,KAAKmV,OAAOrP,KAAKiR,EAAM,IAAMd,EAASrH,cAAgB,IAAMsI,EAAY,OALhC,oBAMhBjB,EAASN,eANO,IAMxC,2BAAgD,CAAC,IAAtCkB,EAAqC,QAC5C7W,KAAK+V,eAAec,EAAWE,EAAM,QAPD,8BASxC/W,KAAKmV,OAAOrP,KAAKiR,EAAM,KAAOd,EAASrH,cAAgB,OAErB,KAA9B9O,IAAWW,gBACXX,IAAWqX,sBAEfrX,IAAW+V,aAAa,yDACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBgW,EAASlH,MAAM,MACzEjP,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,UAAUH,IAAWiB,aAAa,KAC3EjB,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAC3DjB,IAAW+V,aAAa,0BACxB/V,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,UAG3DjB,IAAW+V,aAAa,qCAES,KAA7B/V,IAAWS,eACXT,IAAWsX,qBAEftX,IAAW+V,aAAa,oDACxB/V,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBgW,EAASlH,MAAM,MACzEjP,IAAWG,IACXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,iBAAiBgW,EAASjH,OAAO,MAC1ElP,IAAWG,IAEXH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,UAAUH,IAAWiB,aAAa,KAC3EjB,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,IAAI/V,IAAWG,EAAE,OAAOH,IAAWG,EAAE,SAC7DH,IAAW+V,aAAa,eAAe/V,IAAWG,EAAE,SAAUH,IAAWG,EAAE,GAAG,KAC9EH,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAC3DjB,IAAW+V,aAAa,yBACxB/V,IAAW+V,aAAa,WAAW/V,IAAWiB,aAAa,KAE3Df,KAAKmV,OAAOrP,KAAKiR,EAAM,IAAMd,EAASrH,cAAgB,IAAMsI,EAAY,IAAMjB,EAAShC,MAAQ,KAAOgC,EAASrH,cAAgB,UAxc/I,mCA8cI,SAA8BqH,EAAmBxB,EAAuByB,GAEpE,IAAK,IAAIhW,EAAI,EAAGA,EAAIF,KAAKiV,UAAUiB,GAAcrC,WAAWvS,OAAQpB,IAAK,CAErE,IAAImX,EAAkBrX,KAAKiV,UAAUiB,GAAcrC,WAAW3T,GAAGyU,QAAQsB,EAAUxB,GACnF,GAAI4C,EAAOvC,QAAUzB,gBAAcE,QAE/B,GAAI8D,EAAOvC,MAAQ,GAAK,GAAKuC,EAAOvC,MAAQ,EAAImB,EAASN,cAAcrU,QAC/D2U,EAASU,cAAcU,EAAOvC,MAAQ,KAAOL,EAC7C,OAAO,OAGZ,GAAI4C,EAAOvC,MAAMxT,OAAS,GAAK+V,EAAOxC,OAASxB,gBAAcqC,MAEhE,GAAI2B,EAAOvC,MAAMD,OAASxB,gBAAc2D,KACpC,OAAO,OAER,IAAqB,IAAjBK,EAAOvC,MACd,OAAO,EAIf,OAAO,IApef,oCAueI,SAA+BmB,EAAmBY,EAAoBX,GAElE,IAAK,IAAIhW,EAAI,EAAGA,EAAIF,KAAKiV,UAAUiB,GAAcrC,WAAWvS,OAAQpB,IAAK,CAErE,IAAImX,EAAkBrX,KAAKiV,UAAUiB,GAAcrC,WAAW3T,GAAGyU,QAAQkC,GACzE,GAAIQ,EAAOxC,OAASxB,gBAAcE,QAE9B,GAAI8D,EAAOvC,MAAQ,GAAK,GAAKuC,EAAOvC,MAAQ,EAAImB,EAASN,cAAcrU,QAC/D2U,EAASN,cAAc0B,EAAOvC,MAAQ,KAAO+B,EAC7C,OAAO,OAGZ,GAAIQ,EAAOvC,MAAMxT,OAAS,GAAK+V,EAAOxC,OAASxB,gBAAcqC,MAEhE,GAAI2B,EAAOvC,MAAMD,OAASxB,gBAAc2D,MAChCK,EAAOvC,QAAU+B,EAAUjI,cAC3B,OAAO,OAGZ,IAAqB,IAAjByI,EAAOvC,MACd,OAAO,EAGf,OAAO,IA9ff,mCAigBI,SAA8B+B,EAAoBX,GAE9C,IAAK,IAAIhW,EAAI,EAAGA,EAAIF,KAAKiV,UAAUiB,GAAcrC,WAAWvS,OAAQpB,IAAK,CAErE,IAAImX,EAAkBrX,KAAKiV,UAAUiB,GAAcrC,WAAW3T,GAAGyU,QAAQkC,GACzE,GAAIQ,EAAOxC,OAASxB,gBAAcE,QAE9B,GAAqB,IAAjB8D,EAAOvC,MACP,OAAO,MAER,IAAqB,KAAjBuC,EAAOvC,OAAgBuC,EAAOxC,OAASxB,gBAAcjM,MAC5D,OAAO,EACJ,IAAqB,IAAjBiQ,EAAOvC,MACd,OAAO,GAGf,OAAO,IAjhBf,yBAohBI,SAAmBb,GAQf,IAAK,IAAMC,IAPW,aAAlBlU,KAAKkV,SACLjB,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,iBAC/C,aAAlBH,KAAKkV,SACZjB,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,kBAExE8T,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,mBAE1DH,KAAKiV,UACnBhB,EAAQjU,KAAKiV,UAAUf,GAAKC,YAAYF,GACpCjU,KAAKsK,KAAKnK,aAAeH,KAAKiV,UAAUf,GAAK5J,KAAKnK,YAAcH,KAAK2T,OAAOxT,aAAeH,KAAKiV,UAAUf,GAAKP,OAAOxT,aACtH8T,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAlD,SAA+EH,KAAKiV,UAAUf,GAAK5J,KAAKnK,WAAa,IAAMH,KAAKiV,UAAUf,GAAKP,OAAOxT,WAAa,OAGpL,OAAO8T,IAliBf,8BAqiBI,WACInU,IAAW+V,aAAa,+CADF,oBAGJ7V,KAAKiV,WAHD,IAGtB,2BAAkC,CAAC,IAAxBf,EAAuB,QAC9BpU,IAAWiB,eACXmT,EAAIJ,MAAQhU,IAAWiB,aACvBjB,IAAW+V,aAAa,SAAW/V,IAAWiB,aAAaZ,WAAnC,UACH,aAAjB+T,EAAIN,aACJ9T,IAAW+V,aAAa,sCACxB/V,IAAW+V,aAAa,eAE5B,IAAK,IAAI3V,EAAI,EAAGA,EAAIgU,EAAIzF,GAAGnN,OAAQpB,IAC/BJ,IAAW+V,aAAa,kBAAoB3B,EAAIzF,GAAG6I,WAAWpX,GAAtC,mBAAqEgU,EAAIzF,GAAGvO,GAAGC,YACvGL,IAAW+V,aAAa,cACpB3V,EAAI,IAAMgU,EAAIzF,GAAGnN,SACjBxB,IAAW+V,aAAa,yCACxB/V,IAAW+V,aAAa,gBAhBd,mCAriB9B,M,2ICFYpD,E,wCAAAA,O,iBAAAA,I,mCAAAA,I,iBAAAA,I,2BAAAA,I,iBAAAA,I,4BAAAA,M,KAUL,IAAMD,EAAb,WAEI,WACOlI,EACAqJ,EACAS,EACAC,EACAC,EACAC,GAAa,yBALbjK,OAKY,KAJZqJ,SAIY,KAHZS,UAGY,KAFZC,UAEY,KADZC,gBACY,KAAZC,MARX,2CAUI,SAAeC,EAAeC,GAE1B,IAAIC,EAAW1U,KAAKoU,QAAQO,QAAQH,EAAKC,GACrCG,EAAW5U,KAAKqU,QAAQM,QAAQH,EAAKC,GAEzC,GAAIC,EAASG,OAASxB,gBAAcqC,MAAQd,EAASC,OAASxB,gBAAcqC,KAAM,CAAC,IAAD,gBAEzDhB,EAASI,OAFgD,IAE9E,2BAAsC,CAAC,IAAD,EAA3ByC,EAA2B,sBACb3C,EAASE,OADI,IAClC,2BAAqC,CAAC,IAA3B0C,EAA0B,QAEjC,GAAID,EAAO1C,OAASxB,gBAAc2D,MAAQQ,EAAO3C,OAASxB,gBAAc2D,MAEpE,GAAIhX,KAAKyX,QAAQF,EAAQC,GACrB,MAAO,CAAC1C,OAAO,EAAMD,KAAMxB,gBAAc2B,WAG5C,GAAIuC,EAAO1C,OAASxB,gBAAc2D,MAAQQ,EAAO3C,OAASxB,gBAAc2D,MAEzE,GAAIhX,KAAKyX,QAAQF,EAAQC,GACrB,MAAO,CAAC1C,OAAO,EAAMD,KAAMxB,gBAAc2B,WAI7C,GAAIhV,KAAKyX,QAAQF,EAAQC,GACrB,MAAO,CAAC1C,OAAO,EAAMD,KAAMxB,gBAAc2B,OAjBnB,gCAFwC,8BAwB9E,MAAO,CAACF,OAAO,EAAQD,KAAOxB,gBAAc2B,MAE1C,GAAIN,EAASG,OAASxB,gBAAcqC,KAAK,CAAC,IAAD,gBAEtBhB,EAASI,OAFa,IAE3C,2BAAqC,CAAC,IAA3ByC,EAA0B,QACjC,GAAIA,EAAO1C,OAASxB,gBAAc2D,MAC1BhX,KAAKyX,QAAQF,EAAQ3C,GACrB,MAAO,CAACE,OAAO,EAAMD,KAAMxB,gBAAc2B,OALV,8BAS3C,MAAO,CAACF,OAAO,EAAQD,KAAOxB,gBAAc2B,MAE1C,GAAIJ,EAASC,OAASxB,gBAAcqC,KAAK,CAAC,IAAD,gBAEtBd,EAASE,OAFa,IAE3C,2BAAqC,CAAC,IAA3B0C,EAA0B,QACjC,GAAIA,EAAO3C,OAASxB,gBAAc2D,MAC1BhX,KAAKyX,QAAQ/C,EAAU8C,GACvB,MAAO,CAAC1C,OAAO,EAAMD,KAAMxB,gBAAc2B,OALV,8BAS3C,MAAO,CAACF,OAAO,EAAQD,KAAOxB,gBAAc2B,MAG5C,MAAO,CAAEF,MAAO9U,KAAKyX,QAAQ/C,EAAUE,GAAWC,KAAMxB,gBAAc2B,QAhElF,qBAqEI,SAAgBN,EAAoBE,GAEhC,GAAI5U,KAAKsU,gBAAkB7B,EAAoBC,MAE3C,OADegC,EAASI,QAAUF,EAASE,MAExC,GAAI9U,KAAKsU,gBAAkB7B,EAAoBE,eAElD,OADe+B,EAASI,QAAUF,EAASE,MAEzC,GAAI9U,KAAKsU,gBAAkB7B,EAAoBG,MAEjD,OADe8B,EAASI,MAAQF,EAASE,MAEtC,GAAI9U,KAAKsU,gBAAkB7B,EAAoBI,WAElD,OADe6B,EAASI,OAASF,EAASE,MAEvC,GAAI9U,KAAKsU,gBAAkB7B,EAAoBK,MAElD,OADe4B,EAASI,MAAQF,EAASE,MAEtC,GAAI9U,KAAKsU,gBAAkB7B,EAAoBM,WAElD,OADe2B,EAASI,OAASF,EAASE,MAI1C,MAAM,IAAIzN,MAAM,gDAAkDrH,KAAKuU,IAAM,YAAYvU,KAAKsK,KAAK,WAAWtK,KAAK2T,UA3F/H,yBA+FI,SAAmBM,GAMf,OALAA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,WAAcH,KAAKuU,IAAIpU,WAAa,QAC5G8T,EAAQjU,KAAKoU,QAAQD,YAAYF,GACjCA,EAAQjU,KAAKqU,QAAQF,YAAYF,GACjCA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,SAAWH,KAAKoU,QAAQ9J,KAAO,IAAMtK,KAAKoU,QAAQT,OAAOxT,WAAa,MAC9I8T,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,SAAWH,KAAKqU,QAAQ/J,KAAO,IAAMtK,KAAKqU,QAAQV,OAAOxT,WAAa,UApGtJ,M,wNCbauX,EAST,WAAYhJ,EAAaC,EAAegJ,EAAc3D,EAAY4D,EAAchS,GAAc,yBAR9F8I,WAQ6F,OAP7FC,aAO6F,OAN7FgJ,YAM6F,OAL7F3D,UAK6F,OAJ7F4D,YAI6F,OAH7FhS,WAG6F,EACzF5F,KAAK0O,MAAMA,EACX1O,KAAK2O,QAAQA,EACb3O,KAAK2X,OAAOA,EACZ3X,KAAKgU,KAAKA,EACVhU,KAAK4X,OAAOA,EACZ5X,KAAK4F,MAAMA,GAIfiS,EAAK,OACLC,EAAM,MACNC,EAAM,MACNC,EAAS,GAEN,SAASC,EAAmB1I,EAAa2I,EAA8BC,GAK1E,IAAK,IAAMjE,KAFX8D,GADAA,GADAA,EAASzI,EAAK0E,MAAM/H,QAAQ2L,EAAI,eAChB3L,QAAQ4L,EAAI,YACZ5L,QAAQ6L,EAAI,WAC5BG,EAAUpS,KAAK,IAAI4R,EAAanI,EAAKb,MAAMa,EAAKZ,QAAQY,EAAKX,cAAc,UAAUuJ,EAAQH,IAC3EzI,EAAKoH,cAGnBqB,GADAA,GADAA,EAASzI,EAAKoH,cAAczC,GAAKtO,MAAMsG,QAAQ2L,EAAI,eACnC3L,QAAQ4L,EAAI,YACZ5L,QAAQ6L,EAAI,WAC5BG,EAAUpS,KAAK,IAAI4R,EAAanI,EAAKoH,cAAczC,GAAKxF,MAAMa,EAAKoH,cAAczC,GAAKvF,QAAQY,EAAKoH,cAAczC,GAAKtF,cAAc,WAAWW,EAAKX,cAAcoJ,IAEtK,IAAK,IAAM9D,KAAO3E,EAAKoG,cACnBuC,EAAYD,EAAmB1I,EAAKoG,cAAczB,GAAKgE,EAAU3I,EAAKX,eAE1E,OAAOsJ,EAGJ,SAASE,EAAgCtI,EAA0BmE,GAEtE,IAAK,IAAMC,KADXD,GAAS,oCACSnE,EACdmE,GAAS,IAAMC,EAGnB,IAAK,IAAMA,KADXD,GAAS,WACSnE,EACdmE,GAAS,IAAMnE,EAAMoE,GAAKxF,MAG9B,IAAK,IAAMwF,KADXD,GAAS,aACSnE,EACdmE,GAAS,IAAMnE,EAAMoE,GAAKvF,QAG9B,IAAK,IAAMuF,KADXD,GAAS,YACSnE,EACdmE,GAAS,IAAMnE,EAAMoE,GAAKyD,OAG9B,IAAK,IAAMzD,KADXD,GAAS,UACSnE,EACdmE,GAAS,IAAMnE,EAAMoE,GAAKF,KAG9B,IAAK,IAAME,KADXD,GAAS,YACSnE,EACdmE,GAAS,IAAMnE,EAAMoE,GAAK0D,OAG9B,IAAK,IAAM1D,KADXD,GAAS,WACSnE,EACdmE,GAAS,IAAMnE,EAAMoE,GAAKtO,MAG9B,OADAqO,GAAS,O,WCtEN,SAASoE,EAAY3S,GACxB4S,EAAqB5S,EAAI,IAItB,SAAS4S,EAAqB/I,GACjCzP,IAAW+V,aAAa,uCACxB/V,IAAWiB,eAEXwO,EAAKR,MAAQjP,IAAWiB,aACxBjB,IAAW+V,aAAa,SAAW/V,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAW+V,aAAa,IACxB/V,IAAW+V,aAAa,gCAAkCtG,EAAKX,cAAczO,WAAa,oBAC1F,IAAK,IAAID,EAAI,EAAGA,EAAIqP,EAAKX,cAActN,OAAQpB,IAC3CJ,IAAW+V,aAAa,kBAAoBtG,EAAKX,cAAc0I,WAAWpX,GAAlD,mBAAiFqP,EAAKX,cAAc1O,GAAGC,YAC/HL,IAAW+V,aAAa,cACpB3V,EAAI,IAAMqP,EAAKX,cAActN,SAC7BxB,IAAW+V,aAAa,yCACxB/V,IAAW+V,aAAa,eAGhC,GAAwB,IAApBtG,EAAK0E,MAAM3S,OAAY,CACvBxB,IAAWiB,eACXwO,EAAKP,OAASlP,IAAWiB,aACzBjB,IAAW+V,aAAa,MACxB/V,IAAW+V,aAAa,uCACxB/V,IAAW+V,aAAa,SAAW/V,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAW+V,aAAa,IACxB/V,IAAW+V,aAAa,oBAAsBtG,EAAKX,cAAczO,WAAa,oBAC9E,IAAK,IAAID,EAAI,EAAGA,EAAIqP,EAAK0E,MAAM3S,OAAQpB,IACnCJ,IAAW+V,aAAa,kBAAoBtG,EAAK0E,MAAMqD,WAAWpX,GAA1C,mBAAyEqP,EAAK0E,MAAM/T,GAAGC,YAC/GL,IAAW+V,aAAa,cACpB3V,EAAI,IAAMqP,EAAK0E,MAAM3S,SACrBxB,IAAW+V,aAAa,yCACxB/V,IAAW+V,aAAa,eA7BY,oBAiC1BtG,EAAKoH,eAjCqB,IAiChD,2BAA0C,CAAC,IAAhC4B,EAA+B,QACtCzY,IAAW+V,aAAa,IACxB/V,IAAWiB,eACXwX,EAAQxJ,MAAQjP,IAAWiB,aAC3BjB,IAAW+V,aAAa,uCACxB/V,IAAW+V,aAAa,SAAW/V,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAW+V,aAAa,IACxB/V,IAAW+V,aAAa,aAAe0C,EAAQ3J,cAAczO,WAAa,iBAAmBoP,EAAKX,cAAczO,WAAa,oBAC7H,IAAK,IAAID,EAAI,EAAGA,EAAIqY,EAAQ3J,cAActN,OAAQpB,IAC9CJ,IAAW+V,aAAa,kBAAoB0C,EAAQ3J,cAAc0I,WAAWpX,GAArD,mBAAqFqY,EAAQ3J,cAAc1O,GAAGC,YACtIL,IAAW+V,aAAa,cACpB3V,EAAI,IAAMqY,EAAQ3J,cAActN,SAChCxB,IAAW+V,aAAa,yCACxB/V,IAAW+V,aAAa,eAGhC0C,EAAQ3S,MAAM2S,EAAQ3S,MAAMuQ,WAAW,IAAK,IAC5CoC,EAAQ3S,MAAM2S,EAAQ3S,MAAMuQ,WAAW,IAAI,IAC3CrW,IAAWiB,eACXwX,EAAQvJ,OAASlP,IAAWiB,aAC5BjB,IAAW+V,aAAa,uCACxB/V,IAAW+V,aAAa,SAAW/V,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAW+V,aAAa,IACxB/V,IAAW+V,aAAa,cAAgB0C,EAAQ3J,cAAgB,oBAChE,IAAK,IAAI1O,EAAI,EAAGA,EAAIqY,EAAQ3S,MAAMtE,OAAQpB,IACtCJ,IAAW+V,aAAa,kBAAoB0C,EAAQ3S,MAAM0R,WAAWpX,GAA7C,mBAA4EqY,EAAQ3S,MAAM1F,GAAGC,YACrHL,IAAW+V,aAAa,cACpB3V,EAAI,IAAMqY,EAAQ3S,MAAMtE,SACxBxB,IAAW+V,aAAa,yCACxB/V,IAAW+V,aAAa,gBA9DY,8BAmEhD,IAAK,IAAM3B,KADXpU,IAAW+V,aAAa,MACNtG,EAAKoG,cAEnB2C,EAAqB/I,EAAKoG,cAAczB,I,mBClE1CzQ,EAASqH,EAAQ,KACjB0N,EAAe1N,EAAQ,KACvB2N,EAAa3N,EAAQ,KAMrB4N,EAAO5N,EAAQ,KAEA6N,E,4MACjBxP,MAAQ,CACJyP,cAAe,GACfhH,MAAO,GACPiH,IAAK,GACLC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,cAAe,GACfC,iBAAkB,GAClBC,YAAa,GACbC,gBAAiB,I,EAErB9R,MAAQ,WACJ,IAAI5B,EAUA2T,EATA5T,EAAe,GAOfwO,EAAQ,GACRqF,EAAS,EAET3T,EAAW,GAEf,IACI,IAAM0R,EAAS5T,EAAO6D,MAAM,EAAK6B,MAAM0P,KAMvC,GALAnT,EAAM2R,EAAO3R,IACbC,EAAW0R,EAAO1R,SAClBF,EAAe4R,EAAO5R,aACtB4T,EAAgB,IAAInT,UAAQ,SAAU,GAAI,EAAG,EAAG,GAAIR,GAExB,IAAxBD,EAAanE,OAAc,CAC3B,IAAIiY,EAAYf,EAAalR,MAAM,EAAK6B,MAAM0P,KAC9C,EAAKW,SAAS,CACVT,WAAY,cAAgBU,oCAA0BF,EAAU3J,kBAAkB,GAAI2J,EAAU3J,kBAAkB,GAnB5G,IAmB+H,IACrIkJ,UAAW,cAAgBY,gCAAsBH,EAAU1J,WArBtD,IAqBgF,IACrFqJ,iBAAkB,cAAgBd,EAAgCH,EAAmBoB,EAvB7E,GAuB2G,UAnBvG,IAmBuI,WAGvJ,EAAKG,SAAS,CACVR,YAAa,cAAgBW,oCAA0BlU,EAxBhD,IAwB8E,MAG/F,MAAO2B,GACLyG,QAAQC,IAAI1G,GACZwS,MAAM,kCAGV,IACI,IAAMC,EAASpB,EAAWnR,MAAM,EAAK6B,MAAMyI,OACvCkI,EAAcD,EAAOjI,MACzB/D,QAAQC,IAAIgM,GACZ,IAAIC,EAAeF,EAAOpU,aAE1B,GAA4B,IAAxBsU,EAAazY,OAAc,CAC3B,IAAK,IAAM4S,KAAO4F,EACd7F,EAAQ6F,EAAY5F,GAAKC,YAAYF,GACjCqF,EAASQ,EAAYxY,SACrB2S,GAAS,OAASC,EAAI/T,WAAa,iBACnC8T,GAAS,OAAS6F,EAAY5F,GAAK5J,KAAKnK,WAAa,IAAM2Z,EAAY5F,GAAKP,OAAOxT,WAAa,SAAW+T,EAAI/T,WAAa,MAC5H8T,GAAS,OAASC,EAAI/T,WAAa,SAAW2Z,EAAYR,GAAQhP,KAAKnK,WAAa,IAAM2Z,EAAYR,GAAQ3F,OAAOxT,WAAa,MAClImZ,KAGR,EAAKE,SAAS,CACVL,YAAa,cAAgBlF,EAAQ,WAGzCpG,QAAQC,IAAIiM,EAAazY,QACzB,EAAKkY,SAAS,CACVP,cAAe,cAAgBU,oCAA0BI,EApD9C,IAoDgF,MAKnGlM,QAAQC,IAAImG,GAEZ,EAAKuF,SAAS,CACVL,YAAa,cAAgBlF,EAAQ,MAGzC,IAjCA,EAiCI+F,EAA8B,GAC9B7E,EAAS,GAlCb,cAmCoB2E,GAnCpB,IAmCA,2BAAiC,CAAC,IAAvBG,EAAsB,QAC7B,IACI9E,GAAU8E,EAAMtF,QAAQjP,EAAI,IAAIoP,MAClC,MAAO1N,GACL4S,EAAkBlU,KAAKsB,KAvC/B,8BA0CiB,UAAbzB,EACA,EAAK6T,SAAS,CACVZ,cAAeF,EAAKwB,OAAO/E,KAG/B,EAAKqE,SAAS,CACVZ,cAAezD,IAIzB,MAAO/N,GACLyG,QAAQC,IAAI1G,K,EAGhB+S,SAAW,WACX,GAAqB,KAAjB,EAAKhR,MAAM0P,IAAf,CAGA,IAAMxB,EAAS5T,EAAO6D,MAAM,EAAK6B,MAAM0P,KAEnCiB,EADWrB,EAAWnR,MAAM,EAAK6B,MAAMyI,OAClBA,MACrBlM,EAAM2R,EAAO3R,IACb0U,EAAW,GACfvM,QAAQC,IAAIgM,GACZzB,EAAY3S,GAVK,oBAWGoU,GAXH,IAWjB,2BAAiC,CAAC,IAAvBG,EAAsB,QAC7B,IACIG,GAAaH,EAAMtF,QAAQjP,EAAI,IAAIoP,MACrC,MAAO1N,GACLyG,QAAQC,IAAI1G,KAfH,8BAkBjB,EAAKoS,SAAS,CACVZ,cAAe,sCAAuCwB,EAAY,0CAA0Cta,IAAWua,mB,EAG/HC,iBAAmB,SAAAC,GAEf,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,GAClBC,EAAOG,OAAS,SAACC,GACb,IACI,EAAKpB,SAAS,CACVX,IAAK+B,EAAEC,OAAOxD,SAEpB,MAAOuD,GACL/M,QAAQC,IAAI8M,M,EAIxBE,sBAAwB,SAAAP,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,GAClBC,EAAOG,OAAS,SAACC,GAEb,IACI,EAAKpB,SAAS,CACV5H,MAAOgJ,EAAEC,OAAOxD,SAEtB,MAAOuD,GACL/M,QAAQC,IAAI8M,M,EAIxBG,gBAAkB,SAAAH,GAES,YAAnBA,EAAEC,OAAO/F,MACT,EAAK0E,SAAS,CACVJ,gBAAiB,KAEK,YAAnBwB,EAAEC,OAAO/F,MAChB,EAAK0E,SAAS,CACVJ,gBAAiB,EAAKjQ,MAAM2P,YAEN,2BAAnB8B,EAAEC,OAAO/F,MAChB,EAAK0E,SAAS,CACVJ,gBAAiB,EAAKjQ,MAAM4P,aAEN,2BAAnB6B,EAAEC,OAAO/F,MAChB,EAAK0E,SAAS,CACVJ,gBAAiB,EAAKjQ,MAAM6P,cAEN,0BAAnB4B,EAAEC,OAAO/F,MAChB,EAAK0E,SAAS,CACVJ,gBAAiB,EAAKjQ,MAAM+P,mBAEN,cAAnB0B,EAAEC,OAAO/F,MAChB,EAAK0E,SAAS,CACVJ,gBAAiB,EAAKjQ,MAAMgQ,cAEN,6BAAnByB,EAAEC,OAAO/F,OAChB,EAAK0E,SAAS,CACVJ,gBAAiB,EAAKjQ,MAAM8P,iB,4CAIxC,WAAU,IAAD,OACL,OACI,qCACI,eAAC+B,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,aAAnB,kBACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiB9M,GAAG,mBAApB,SACI,eAAC+M,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,eAACC,EAAA,EAAD,CAAaC,MAAM,YAAYlN,GAAG,0BAAlC,UACI,cAAC,aAAD,CAAYmN,QAAS,EAAGC,SAAU7b,KAAK8a,sBAAuBgB,QAAS,SAAAC,GAAM,OAAIlO,QAAQC,IAAIiO,IAA7F,SACI,cAACL,EAAA,EAAYM,KAAb,2BAEJ,cAAC,aAAD,CAAYJ,QAAS,EAAGC,SAAU7b,KAAKsa,iBAAkBwB,QAAS,SAAAC,GAAM,OAAIlO,QAAQC,IAAIiO,IAAxF,SACI,cAACL,EAAA,EAAYM,KAAb,4BAGR,eAACN,EAAA,EAAD,CAAaC,MAAM,QAAQlN,GAAG,0BAA9B,UACI,cAACiN,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACvB,EAAKzC,SAAS,CACV5H,MAAO,MAFf,mBAKA,cAAC8J,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACvB,EAAKzC,SAAS,CACVX,IAAK,MAFb,oBAMJ,eAAC6C,EAAA,EAAD,CAAaC,MAAM,OAAOlN,GAAG,0BAA7B,UACI,cAACiN,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACJnR,EAAQ,GAC3BoR,CAAa,EAAK/S,MAAMyI,MAAO,cAFnC,mBAIA,cAAC8J,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACJnR,EAAQ,GAC3BoR,CAAa,EAAK/S,MAAM0P,IAAK,YAFjC,4BAShB,sBAAK4C,UAAU,YAAf,UACI,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACI,cAACC,EAAA,EAAKC,QAAN,CACI3H,KAAK,OACL4H,YAAY,4BACZ3H,MAAO9U,KAAKmJ,MAAMyI,MAClBiK,SAAU,SAACjB,GACP,EAAKpB,SAAS,CACV5H,MAAOgJ,EAAEC,OAAO/F,aAIhC,cAACsH,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUV,QAASjc,KAAKma,SAAxC,wBAEJ,cAACiC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUV,QAASjc,KAAKsH,MAAxC,0BAGR,uBAEA,uBACA,cAACiV,EAAA,EAAKC,QAAN,CAAcI,GAAG,WAAWH,YAAY,WAAWI,KAAM,GAAI/H,MAAO9U,KAAKmJ,MAAM0P,IAAKgD,SAAU,SAACjB,GAC3F,EAAKpB,SAAS,CACVX,IAAK+B,EAAEC,OAAO/F,cAK1B,qBAAK2G,UAAU,YAAf,SACI,cAACc,EAAA,EAAKO,MAAN,UACI,eAACP,EAAA,EAAKC,QAAN,CAAcI,GAAG,SAASG,KAAK,OAAOC,KAAK,KAAKnB,SAAU7b,KAAK+a,gBAA/D,UACI,6CACA,2DACA,4DACA,6CACA,4DACA,+CACA,qEAOuB,KAA/B/a,KAAKmJ,MAAMiQ,gBACP,qBAAKqC,UAAU,6BAAf,SACI,cAACwB,EAAA,EAAD,CAAUxB,UAAU,oCAAoCyB,IAAKld,KAAKmJ,MAAMiQ,gBAAiBvQ,QAAS,CAAEsU,OAAQ,IAAKC,MAAO,KAAMC,MAAM,OAExI,wBAIR,qBAAK5B,UAAU,YAAf,SACI,cAACc,EAAA,EAAKC,QAAN,CAAcI,GAAG,WAAWC,KAAM,GAAI/H,MAAO9U,KAAKmJ,MAAMyP,cAAe0E,UAAQ,a,GA9RjEC,a,gBCLnBC,MAVf,WACE,OACE,8BACE,cAAC,IAAD,CAAQC,SAAS,wBAAjB,SACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjF,SCI1BkF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K,uJCjBa9X,EAMT,WAAYiO,EAAa5M,EAAcsH,EAAcC,GAAgB,yBALrEqF,UAKoE,OAJpE5M,WAIoE,OAHpEsH,WAGoE,OAFpEC,aAEoE,EAChE3O,KAAKgU,KAAOA,EACZhU,KAAKoH,MAAQA,EACbpH,KAAK0O,MAAQA,EACb1O,KAAK2O,QAAUA,GAKhB,SAASgL,EAA0B+E,EAA2BzK,GAEjE,IAAK,IAAMC,KADXD,GAAS,kCACSyK,EACdzK,GAAS,IAAMyK,EAASxK,GAAKF,KAGjC,IAAK,IAAME,KADXD,GAAS,WACSyK,EACdzK,GAAS,IAAMyK,EAASxK,GAAKxF,MAGjC,IAAK,IAAMwF,KADXD,GAAS,aACSyK,EACdzK,GAAS,IAAMyK,EAASxK,GAAKvF,QAGjC,IAAK,IAAMuF,KADXD,GAAS,iBACSyK,EACdzK,GAAS,IAAMyK,EAASxK,GAAK9M,MAIjC,OADA6M,GAAS,S,kIC5BDZ,E,yBAAAA,O,mBAAAA,I,mBAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,kBAAAA,M,KAUL,IAAMD,EAAb,WAEI,WACO9I,EACAqJ,EACA/N,EACAyN,GAAiC,yBAHjC/I,OAGgC,KAFhCqJ,SAEgC,KADhC/N,QACgC,KAAhCyN,gBANX,2CAQI,SAAemB,EAAcC,GAEzB,GAAIzU,KAAKqT,gBAAkBA,EAAcE,OACrC,MAAO,CAAEuB,MAAOC,OAAO/U,KAAK4F,OAAQiP,KAAMxB,EAAcE,QACtD,GAAIvT,KAAKqT,gBAAkBA,EAAcC,OAC3C,MAAO,CAAEwB,MAAO6J,OAAO3e,KAAK4F,OAAQiP,KAAMxB,EAAcC,QACtD,GAAmB,aAAftT,KAAK4F,MAEX,YAAqBiM,IAAjB4C,EACO,CAACK,MAAOL,EAAa5F,IAAKgG,KAAMxB,EAAcE,QAE9C,CAACuB,MAAON,EAAI3F,IAAKgG,KAAMxB,EAAcE,QAG9C,GAAmB,SAAfvT,KAAK4F,MAEX,YAAqBiM,IAAjB4C,EACO,CAACK,MAAOL,EAAa3F,KAAM+F,KAAMxB,EAAcE,QAE/C,CAACuB,MAAON,EAAI1F,KAAM+F,KAAMxB,EAAcE,QAIjD,MAAM,IAAIlM,MAAM,oDAAoDrH,KAAKsK,KAAK,WAAWtK,KAAK2T,UA/B1G,yBAmCI,SAAmBM,GAEf,OADAA,GAAS,OAASjU,KAAKsK,KAAKnK,WAAa,IAAMH,KAAK2T,OAAOxT,WAAa,WAAcH,KAAK4F,MAAMzF,WAAa,YApCtH,M,mMCfIye,E,eAISnP,EAAb,WAKI,WAAYkI,EAAc2B,EAAcuF,GAA2B,yBAJnElH,YAIkE,OAHlE2B,YAGkE,OAFlEuF,gBAEkE,EAC9D7e,KAAK2X,OAAOA,EACZ3X,KAAKsZ,OAAOA,EACZtZ,KAAK6e,WAAWA,EARxB,6CAWI,SAAUC,EAAcxF,EAAcxJ,GAClC8O,EAAQ,IAAInP,EAAQqP,EAAOxF,EAAOxJ,GAClC9P,KAAK6e,WAAW/Y,KAAK8Y,OAb7B,KAkBO,SAASlF,EAAsBqF,EAAc9K,GAEhD,GADAA,GAAS,OAAS8K,EAAMzF,OAAOnZ,WAAa,WAAc4e,EAAMpH,OAAS,QACrEoH,EAAMF,WAAWvd,OAAS,EAC1B,IAAK,IAAM4S,KAAO6K,EAAMF,WACpB5K,GAAS,OAAS8K,EAAMF,WAAW3K,GAAKoF,OAAOnZ,WAAa,WAAc4e,EAAMF,WAAW3K,GAAKyD,OAAS,QACzG1D,GAAS,OAAS8K,EAAMzF,OAAOnZ,WAAtB,SAAmD4e,EAAMF,WAAW3K,GAAKoF,OAAOnZ,WAAa,MAClG4e,EAAMF,WAAW3K,GAAK2K,WAAWvd,OAAS,IAE1C2S,EAAQyF,EAAsBqF,EAAMF,WAAW3K,GAAKD,IAIhE,OAAOA,EAGJ,SAASwF,EAA0BuF,EAA2BC,EAAqBhL,GAEtF,IAAK,IAAMC,KADXD,GAAS,wCACS+K,EACd/K,GAAS,IAAM+K,EAAa9K,GAGhC,IAAK,IAAMA,KADXD,GAAS,qBACSgL,EACdhL,GAAS,IAAMgL,EAAO/K,GAG1B,OADAD,GAAS,S,0GC5CA/N,EAAb,WAaI,WAAYuI,EAAWwF,EAAcvF,EAAcC,EAAgBgI,EAA8BuI,GAAuB,yBAZxHtQ,mBAYuH,OAXvH+H,mBAWuH,OAVvH1C,WAUuH,OATvH0B,mBASuH,OARvHjH,WAQuH,OAPvHC,aAOuH,OANvHE,SAMuH,OALvHC,UAKuH,OAJvHC,WAIuH,OAHvHC,YAGuH,EACnHhP,KAAK4O,cAAgBH,EACrBzO,KAAKiU,MAAQA,EACbjU,KAAK0O,MAAQA,EACb1O,KAAK2O,QAAUA,EACf3O,KAAK2W,cAAgBA,EACrB3W,KAAK2V,cAAgBuJ,EACrBlf,KAAK6O,KAAO,EACZ7O,KAAK8O,MAAQ,EACb9O,KAAK+O,OAAS,EACd/O,KAAKgP,QAAU,EACfhP,KAAKmf,iBACLnf,KAAKof,iBAzBb,kDA4BI,WACI,IAAK,IAAIxS,EAAQ,EAAGA,EAAQ5M,KAAK2V,cAAcrU,OAAQsL,IACnD5M,KAAK2V,cAAc/I,GAAOkC,KAAO9O,KAAK2V,cAAcrU,OACpDtB,KAAK2V,cAAc/I,GAAOiC,IAAMjC,IA/B5C,4BAmCI,WACI,IAAK,IAAIA,EAAQ,EAAGA,EAAQ5M,KAAK2W,cAAcrV,OAAQsL,IACnD5M,KAAK2W,cAAc/J,GAAOkC,KAAO9O,KAAK2W,cAAcrV,OACpDtB,KAAK2W,cAAc/J,GAAOiC,IAAMjC,IAtC5C,yBA0CI,SAAmByS,GAAqC,IAAD,gBAE7Brf,KAAK2W,eAFwB,IAEnD,2BAA0C,CAAC,IAAhCxQ,EAA+B,QACtC,GAAIA,EAAQyI,gBAAkByQ,EAC1B,OAAOlZ,GAJoC,8BAQnD,OAAO,SAlDf,M","file":"static/js/main.6491e09f.chunk.js","sourcesContent":["export class traduccion {\r\n    static t: number = -1;\r\n    static stackCounter: number = -1;\r\n    static etiquetaCounter: number = 0;\r\n    static tranlate: string = \"\";\r\n    static printString: boolean = false;\r\n    static metodostring:string = \"\";\r\n    static metodoConsultaXPATH:string = \"\";\r\n    static compararCadenas3d:string=\"\";\r\n    static etiquetaTexto:string=\"\";\r\n    static etiquetaApertura:string=\"\";\r\n    static etiquetaCierre:string=\"\";\r\n    static etiquetaUnitaria:string=\"\";\r\n    static etiquetaAtributo:string=\"\";\r\n    static verificarAtributo:string=\"\";\r\n\r\n    public static getTranslate(): string {\r\n        var content: string = \"\";\r\n        content += \"//Header\\t--------------\\n\";\r\n        content += \"#include <stdio.h>\\n\\n\";\r\n        content += \"double heap[30101999];\\n\";\r\n        content += \"double stack[30101999];\\n\\n\";\r\n        content += \"double S;\\n\";\r\n        content += \"double H;\\n\\n\";\r\n        if (this.t > 0) {\r\n            content += \"double \";\r\n            for (let i = 0; i < this.t+1; i++) {\r\n                content += \"t\" + i.toString();\r\n                if (i < this.t) {\r\n                    content += \", \";\r\n                }\r\n            }\r\n            content += \";\\n\\n\";\r\n        }\r\n        content += this.metodostring;\r\n        content += this.metodoConsultaXPATH;\r\n        content += this.compararCadenas3d;\r\n        content += this.etiquetaTexto;\r\n        content += this.etiquetaApertura;\r\n        content += this.etiquetaCierre;\r\n        content += this.etiquetaUnitaria;\r\n        content += this.verificarAtributo;\r\n        content += this.etiquetaAtributo;\r\n        content += \"//Metodo Main\\t--------------\\n\";\r\n        content += \"void main(){\\n\";\r\n        content += \"S = 0; H = 0;\\n\\n\";\r\n        content += this.tranlate;\r\n        content += \"\\nL0:\\n\";\r\n        content += \"\\nreturn;\\n\";\r\n        content += \"}\";\r\n        return content;\r\n    }\r\n\r\n    public static setTranslate(content: string) {\r\n        this.tranlate += content + \"\\n\";\r\n    }\r\n\r\n    public static setPrintString(content:string) {\r\n        this.metodostring += content + \"\\n\";\r\n    }\r\n\r\n    public static setConsultaXPATH(content:string) {\r\n        this.metodoConsultaXPATH += content + \"\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO comparar cadenas****************************\r\n    public static metodoCompararCadenas() {\r\n        this.compararCadenas3d += \"//Metodo Comparar cadenas\\t--------------\\n\\n\";\r\n        this.compararCadenas3d += \"void compararCadenas() {\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.t++;\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"!=t\"+(traduccion.t-1)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-5)+\" = t\"+(traduccion.t-5)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==t\"+(traduccion.t-2)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-2)+\":\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 1;\\n\";\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.compararCadenas3d += \"return;\\n\";\r\n        this.compararCadenas3d += \"}\\n\\n\";\r\n        //traduccion.t++;\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir nodo Texto**********\r\n    public static crearEtiquetaTexto() {\r\n        this.etiquetaTexto += \"//Metodo etiqueta texto\\t--------------\\n\\n\";\r\n        this.etiquetaTexto += \"void crearEtiquetaTexto() {\\n\";\r\n        //Obtiene posiciones\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir NODOTEXTO\r\n        this.etiquetaTexto += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimirt </\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)60);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)47);\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-5)+\" = S + 1;\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4) + \" = stack[(int)t\"+(traduccion.t-5)+\"];\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1) + \" = heap[(int)t\"+(traduccion.t-4)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t-1)+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4)+\" = t\"+(traduccion.t-4)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imrprimir >\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)62);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)10);\\n\";\r\n        this.etiquetaTexto += \"return;\\n\";\r\n        this.etiquetaTexto += \"}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta apertura*********************\r\n    public static crearEtiquetaApertura() {\r\n        this.etiquetaApertura += \"//Metodo Etiqueta apertura\\t--------------\\n\\n\";\r\n        this.etiquetaApertura += \"void crearEtiquetaApertura() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaApertura += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaApertura += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaApertura += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta cierre*********************\r\n    public static crearEtiquetaCierre() {\r\n        this.etiquetaCierre += \"//Metodo Etiqueta Cierre\\t--------------\\n\\n\";\r\n        this.etiquetaCierre += \"void crearEtiquetaCierre() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\"; \r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaCierre += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaCierre += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\";   \r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\";  \r\n        this.etiquetaCierre += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static crearAtributoEtiqueta() {\r\n        this.etiquetaAtributo += \"//Metodo Obtener Atributo\\t--------------\\n\";\r\n        this.etiquetaAtributo += \"void crearAtributoEtiqueta() {\\n\";\r\n        //Obetener posiciones----------\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo+= \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir espacio en blanco-----------\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)32);\\t\\t// \\' \\'\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        //this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\"= t\"+ (traduccion.t-3)+\" + 1;\\n\"\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir =\"\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)61);\\t\\t// =\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        //Obtener ID2\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-2)+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir \" y fin\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        this.etiquetaAtributo += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static metodoVerificarAtributo() {\r\n        this.verificarAtributo += \"//Metodo verificar atributo\\t--------------\\n\\n\";\r\n        this.verificarAtributo += \"void verificarAtributo() {\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";        \r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"if(t\"+(traduccion.t)+\"==64) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 1;\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.verificarAtributo += \"return;\\n\";\r\n        this.verificarAtributo += \"}\\n\\n\";\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\nthis.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],true);\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n            this.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],true);\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 11:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 12:\r\n\r\n            this.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 13:\r\n\r\n            listaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\n        \r\nbreak;\r\ncase 15: case 17:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column,true);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last: number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n    }\r\n\r\n\r\n\r\n\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xmlReport = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \nbreak;\ncase 2:\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \nbreak;\ncase 3:\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 4:\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 5:\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 6:\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 7:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 8:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 9:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 10:\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 11:\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 12:\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 13:\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 14:\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 15:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 16:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 17:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 18:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 19:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 20:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 21:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 22:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 23:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 24:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 25:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 26:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 27:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 28:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 29:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 30:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 31:\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 32:\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 33:\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 34:\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 35:\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 36:\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 37:\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 38:\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 39:\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 40:\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 41:\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 42:\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\ndefaultActions: {24:[2,14],44:[2,13]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/*skip comments*/\nbreak;\ncase 2:return 4;\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 15;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 5;\nbreak;\ncase 7:return 19;\nbreak;\ncase 8:return 18;\nbreak;\ncase 9:return 6;\nbreak;\ncase 10:return 25;\nbreak;\ncase 11:return 20;\nbreak;\ncase 12:return 21;\nbreak;\ncase 13:return 22;\nbreak;\ncase 14:return 23;\nbreak;\ncase 15:return 24;\nbreak;\ncase 16:return 26;\nbreak;\ncase 17:return 11;\nbreak;\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xmlReport;\nexports.Parser = xmlReport.Parser;\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[5,6],$V3=[1,20],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,23],$Vf=[1,24],$Vg=[5,6,8,10,13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vh=[1,27],$Vi=[5,6,8,10,13,18,27,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vj=[1,48],$Vk=[1,41],$Vl=[1,42],$Vm=[1,43],$Vn=[1,44],$Vo=[1,45],$Vp=[1,46],$Vq=[1,62],$Vr=[1,60],$Vs=[1,61],$Vt=[1,63],$Vu=[1,64],$Vv=[1,65],$Vw=[1,66],$Vx=[1,67],$Vy=[1,68],$Vz=[1,69],$VA=[1,70],$VB=[1,71],$VC=[1,72],$VD=[13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$VE=[18,29,30,31,34,35,36,37,38,39,40,41],$VF=[13,18,29,30,31,32,34,35,36,37,38,39,40,41],$VG=[18,29,34,35,40,41],$VH=[18,29,34,35,36,37,38,39,40,41];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"MULTIPATH\":4,\"EOF\":5,\"|\":6,\"PATH\":7,\"/\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"..\":15,\"text\":16,\"(\":17,\")\":18,\"node\":19,\"child\":20,\"::\":21,\"descendant\":22,\"PREDICADOS\":23,\"@\":24,\"attribute\":25,\"PREDI\":26,\"[\":27,\"EXP\":28,\"]\":29,\"+\":30,\"-\":31,\"div\":32,\"mod\":33,\"=\":34,\"!=\":35,\"<\":36,\"<=\":37,\">\":38,\">=\":39,\"and\":40,\"or\":41,\"VALOR\":42,\"cadena\":43,\"scadena\":44,\"number\":45,\"position\":46,\"last\":47,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"|\",8:\"/\",10:\"//\",12:\"id\",13:\"*\",14:\".\",15:\"..\",16:\"text\",17:\"(\",18:\")\",19:\"node\",20:\"child\",21:\"::\",22:\"descendant\",24:\"@\",25:\"attribute\",27:\"[\",29:\"]\",30:\"+\",31:\"-\",32:\"div\",33:\"mod\",34:\"=\",35:\"!=\",36:\"<\",37:\"<=\",38:\">\",39:\">=\",40:\"and\",41:\"or\",43:\"cadena\",44:\"scadena\",45:\"number\",46:\"position\",47:\"last\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,1],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,2],[11,4],[11,4],[11,4],[11,4],[11,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,4],[11,4],[11,1],[23,2],[23,1],[26,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[42,3],[42,1],[42,1],[42,1],[42,3],[42,3],[42,1],[42,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n                                                    var listaErroresTemp = listaErrores;\r\n                                                    listaErrores = [];\r\n                                                    return {xpath: $$[$0-1],listaErrores:listaErroresTemp}\r\n                                                    \r\nbreak;\r\ncase 2:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 3: case 8: case 35:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 4:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 5:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 6:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 7:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 9:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 10:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 20:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 24:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 25:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 33:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 34:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 36: case 51:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 37:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 38:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 39:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 41:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 42:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 43:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 44:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 45:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 46:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 47:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 48:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 49:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 50:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 52: case 53:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 54:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 55: case 56:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 57:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                 this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 58:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                 this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:$V0,10:$V1},{1:[3]},{5:[1,6],6:[1,7]},o($V2,[2,3]),{2:$V3,9:8,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,9:21,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{1:[2,1]},{7:22,8:$V0,10:$V1},o($V2,[2,4],{8:$Ve,10:$Vf}),o($Vg,[2,8]),o($Vg,[2,9],{23:25,26:26,27:$Vh}),o($Vg,[2,10],{26:26,23:28,27:$Vh}),o($Vg,[2,11]),o($Vg,[2,12]),{17:[1,29]},{17:[1,30]},{21:[1,31]},{21:[1,32]},{12:[1,33],13:[1,34]},{21:[1,35]},o($Vg,[2,33]),o($V2,[2,5],{8:$Ve,10:$Vf}),o($V2,[2,2]),{2:$V3,11:36,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,11:37,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,19],{26:38,27:$Vh}),o($Vi,[2,35]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:39,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($Vg,[2,20],{26:38,27:$Vh}),{18:[1,49]},{18:[1,50]},{12:[1,51],13:[1,52]},{12:[1,53],13:[1,54]},o($Vg,[2,25],{26:26,23:55,27:$Vh}),o($Vg,[2,26],{26:26,23:56,27:$Vh}),{12:[1,57],13:[1,58]},o($Vg,[2,6]),o($Vg,[2,7]),o($Vi,[2,34]),{13:$Vq,29:[1,59],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},o($VD,[2,50]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:73,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($VD,[2,52]),o($VD,[2,53]),o($VD,[2,54]),{17:[1,74]},{17:[1,75]},o($VD,[2,57],{8:$Ve,10:$Vf}),{2:$V3,9:76,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,13]),o($Vg,[2,14]),o($Vg,[2,15],{26:26,23:77,27:$Vh}),o($Vg,[2,16],{26:26,23:78,27:$Vh}),o($Vg,[2,17],{26:26,23:79,27:$Vh}),o($Vg,[2,18],{26:26,23:80,27:$Vh}),o($Vg,[2,29],{26:38,27:$Vh}),o($Vg,[2,30],{26:38,27:$Vh}),o($Vg,[2,27],{26:26,23:81,27:$Vh}),o($Vg,[2,28],{26:26,23:82,27:$Vh}),o($Vi,[2,36]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:83,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:84,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:85,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:86,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:87,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:88,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:89,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:90,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:91,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:92,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:93,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:94,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:95,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{13:$Vq,18:[1,96],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},{18:[1,97]},{18:[1,98]},o($VD,[2,58],{8:$Ve,10:$Vf}),o($Vg,[2,21],{26:38,27:$Vh}),o($Vg,[2,22],{26:38,27:$Vh}),o($Vg,[2,23],{26:38,27:$Vh}),o($Vg,[2,24],{26:38,27:$Vh}),o($Vg,[2,31],{26:38,27:$Vh}),o($Vg,[2,32],{26:38,27:$Vh}),o($VE,[2,37],{13:$Vq,32:$Vt,33:$Vu}),o($VE,[2,38],{13:$Vq,32:$Vt,33:$Vu}),o($VF,[2,39],{33:$Vu}),o($VF,[2,40],{33:$Vu}),o($VD,[2,41]),o($VG,[2,42],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VG,[2,43],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VH,[2,44],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,45],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,46],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,47],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o([18,29,40,41],[2,48],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o([18,29,41],[2,49],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB}),o($VD,[2,51]),o($VD,[2,55]),o($VD,[2,56])],\r\ndefaultActions: {6:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 43;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 44;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 8\r\nbreak;\r\ncase 18:return 15\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 24\r\nbreak;\r\ncase 21:return 27\r\nbreak;\r\ncase 22:return 29\r\nbreak;\r\ncase 23:return 17\r\nbreak;\r\ncase 24:return 18\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 6\r\nbreak;\r\ncase 27:return 30\r\nbreak;\r\ncase 28:return 31\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 32\r\nbreak;\r\ncase 31:return 34\r\nbreak;\r\ncase 32:return 35\r\nbreak;\r\ncase 33:return 37\r\nbreak;\r\ncase 34:return 39\r\nbreak;\r\ncase 35:return 36\r\nbreak;\r\ncase 36:return 38\r\nbreak;\r\ncase 37:return 41\r\nbreak;\r\ncase 38:return 40\r\nbreak;\r\ncase 39:return 33\r\nbreak;\r\ncase 40:return 21\r\nbreak;\r\ncase 41:return 20\r\nbreak;\r\ncase 42:return 25\r\nbreak;\r\ncase 43:return 22\r\nbreak;\r\ncase 44:return 16\r\nbreak;\r\ncase 45:return 47 \r\nbreak;\r\ncase 46:return 46\r\nbreak;\r\ncase 47:return 45\r\nbreak;\r\ncase 48:return 12\r\nbreak;\r\ncase 49:return 5\r\nbreak;\r\ncase 50:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:[\" \"]+)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparser;\r\nexports.Parser = XPATHparser.Parser;\r\nexports.parse = function () { return XPATHparser.parse.apply(XPATHparser, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    SP_id:number;\r\n    SP_tipoAcceso:number;\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[],\r\n    public tipoQuery ?: string ){\r\n        this.SP_id = -1;\r\n        this.SP_tipoAcceso = -1\r\n    } \r\n\r\n    public setipoQuery(tipo: string){\r\n        this.tipoQuery = tipo;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionAritmetica,\r\n    public sym: string){}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if((valorIzq.type === tipoPrimitivo.STRING  || valorIzq.type === tipoPrimitivo.NUMBER )&&(valorDer.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.NUMBER)&&(this.tipoOperacion === operacionAritmetica.SUMA)) {\r\n            return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER };\r\n        }\r\n        else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n           \r\n            if(this.tipoOperacion === operacionAritmetica.RESTA){\r\n                return { value: (valorIzq.value - valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.MULT){\r\n                return { value: (valorIzq.value * valorDer.value) , type: tipoPrimitivo.NUMBER };;\r\n            }else if(this.tipoOperacion === operacionAritmetica.DIV){\r\n\r\n                if(Number(valorDer.value) >= 0){\r\n                    return { value: (valorIzq.value / valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: El valor \"+valorDer+\", debe ser mayor o igual que cero,  Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }else if (this.tipoOperacion === operacionAritmetica.MOD){\r\n                return  { value: (valorIzq.value % valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionLogica,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        \r\n        if (valorIzq.type === tipoPrimitivo.BOOL){\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            }\r\n            \r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL){\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \"+valorDer.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorIzq.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso } from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\nimport { traducirXmlRecursive } from '../../Traduccion/xml3d';\r\n\r\nexport class Path implements Expression {\r\n\r\n    salida: any[];\r\n    nuevaL_Accesos: Acceso[];\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public L_Accesos: Acceso[],\r\n        public tipoPath?: string\r\n    ) {\r\n        this.salida = [];\r\n        this.nuevaL_Accesos = [];\r\n    }\r\n\r\n    private validarAntecesores(): Acceso[] {\r\n\r\n        let newL_Acc: Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n\r\n            if (acceso.tipoAcceso === 'padre') {\r\n\r\n                if (newL_Acc.length > 0) {\r\n                    newL_Acc.pop()\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \" + acceso.line + \"column: \" + acceso.column);\r\n                }\r\n            } else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    private unirSalida(): string {\r\n\r\n        let salida: string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno { //      /biblio\r\n        this.insertarConsulta();\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\") {\r\n\r\n            if (this.L_Accesos.length > 0 && ent.listaEntornos.length > 0) {\r\n\r\n                if (ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\") {//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n                    //TRADUCCION3D######################################################################################\r\n                    if (traduccion.compararCadenas3d === \"\") {\r\n                        traduccion.metodoCompararCadenas();\r\n                    }\r\n                    traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + ent.SP_ID + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[0].SP_id + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"compararCadenas();\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                    traduccion.t++;\r\n                    //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                    traduccion.setTranslate(\"if(t\"+ (traduccion.t - 1) +\"!=1) goto L0;\");\r\n                    traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                    //#####################################################################################################\r\n\r\n                    if (this.validarPredicadosRaiz(ent, 0)) {\r\n\r\n                        if (this.L_Accesos.length > 1) { //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(ent, 1);\r\n                        } else {\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                } else if (this.L_Accesos[0].tipoQuery === 'absoluta') {\r\n                    this.getQuery(ent, 0);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            this.salida = [];\r\n            this.getQuery(ent, 0, simboloPadre);\r\n            return { value: this.salida, type: tipoPrimitivo.RESP };\r\n        }\r\n        return { value: this.unirSalida(), type: tipoPrimitivo.STRING };\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number, simboloPadre?: Simbolo) {\r\n\r\n        if (simboloPadre !== undefined) { // si la consulta es una sub consulta y el padre es un atributo --> /id[subconsulta]\r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" || this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n\r\n                if (this.L_Accesos.length < posActAcceso + 1) {\r\n                    this.getQuery(entPadre, posActAcceso + 1, simboloPadre);\r\n                } else {\r\n\r\n                    if (this.tipoPath === \"sub\") {\r\n                        this.salida.push({ value: simboloPadre.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                    } else {\r\n\r\n                        if (this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n                            this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\n\");\r\n                        } else {\r\n                            this.salida.push(simboloPadre.identificador + \" = \\\"\" + simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }\r\n\r\n        } else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\") {\r\n                \r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.verificarAtributo === \"\") {\r\n                    traduccion.metodoVerificarAtributo();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Validando que sea atributo\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)t\"+this.L_Accesos[posActAcceso].SP_id+\"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-1)+\";\");\r\n                traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"verificarAtributo();\");\r\n                traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n\r\n                //#######################################################################################################\r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if (atri != null) {\r\n\r\n                    if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                        if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                        } else {\r\n\r\n                            if (this.tipoPath === \"sub\") {\r\n                                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                            } else {\r\n                                if (traduccion.etiquetaAtributo === \"\") {\r\n                                    traduccion.crearAtributoEtiqueta();\r\n                                }\r\n                                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+atri.SP_ID+\"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+atri.SP_VAL+\"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n                                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-2)+\";\");\r\n                                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-1)+\";\");\r\n                                traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n                                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                                traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n                                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n                                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    for (const entChiild of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entChiild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\") {\r\n\r\n                if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    this.construirTodosAtributos(entPadre);\r\n\r\n                } else {\r\n\r\n                    if (entPadre.listaSimbolos.length > 0) {\r\n\r\n                        for (const atri of entPadre.listaSimbolos) {\r\n\r\n                            if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                                } else {\r\n\r\n                                    if (this.tipoPath === \"sub\") {\r\n                                        this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                                    } else {\r\n                                        this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === 'texto') {\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'relativa') {\r\n\r\n                        if (entPadre.texto !== '') {\r\n                            this.salida.push(entPadre.texto + '\\n');\r\n                        }\r\n\r\n                    } else {\r\n                        this.construirTodosTextos(entPadre);\r\n                    }\r\n\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto del nodo ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\") {\r\n\r\n                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entPadre, posActAcceso + 1);\r\n                } else {\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                            if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entActual, posActAcceso + 1);\r\n                            } else {\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (entActual.identificador === this.L_Accesos[posActAcceso].id) {//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n\r\n                            //TRADUCCION3D######################################################################################\r\n                            if (traduccion.compararCadenas3d === \"\") {\r\n                                traduccion.metodoCompararCadenas();\r\n                            }\r\n                            traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entActual.SP_ID + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[posActAcceso].SP_id + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"compararCadenas();\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                            traduccion.t++;\r\n                            //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                            traduccion.setTranslate(\"if(t\"+ (traduccion.t - 1) +\"!=1) goto L0;\");\r\n                            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                            //####################################################################################################\r\n\r\n                            if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entActual, posActAcceso + 1);\r\n                                } else {\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        } else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta') {\r\n                            this.getQuery(entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \" + this.L_Accesos[posActAcceso].tipoAcceso + \" del acceso: \" + this.L_Accesos[posActAcceso].tipoAcceso + \" no se reconoce como valido, \" +\r\n                    \"linea: \" + this.L_Accesos[posActAcceso].line + \" comlumna: \" + this.L_Accesos[posActAcceso].column);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre: Entorno) {\r\n\r\n        if (entPadre.texto !== '') {\r\n            this.salida.push(entPadre.texto + '\\n');\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos(entPadre: Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos) {\r\n\r\n            if (this.tipoPath === \"sub\") {\r\n                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n            } else {\r\n                \r\n                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n            }\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre: Entorno, tab: string) {\r\n\r\n        if (this.tipoPath === \"sub\") {\r\n\r\n            if (entPadre.listaEntornos.length > 0 || (entPadre.listaEntornos.length === 0 && entPadre.texto === '')) {\r\n                this.salida.push({ value: entPadre.identificador, type: tipoPrimitivo.NODO })\r\n            } else {\r\n                this.salida.push({ value: entPadre.texto, type: tipoPrimitivo.STRING });\r\n            }\r\n\r\n        } else {\r\n\r\n            if (traduccion.etiquetaApertura === \"\") {\r\n                traduccion.crearEtiquetaApertura();\r\n            }\r\n            traduccion.setTranslate(\"\\n//Inicia Etiqueta apertura\\t--------------\\n\\n\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+entPadre.SP_ID+\"];\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n            traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n            traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-1)+\";\");\r\n            traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n            traduccion.setTranslate(\"crearEtiquetaApertura();\");\r\n            traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos += atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"  \";\r\n                if (traduccion.etiquetaAtributo === \"\") {\r\n                    traduccion.crearAtributoEtiqueta();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+atri.SP_ID+\"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+atri.SP_VAL+\"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-2)+\";\");\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-1)+\";\");\r\n                traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n\r\n            }\r\n\r\n            //construyo Nodos\r\n            if (entPadre.listaEntornos.length === 0 && entPadre.texto === '') {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if (entPadre.listaEntornos.length > 0) {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab + \"</\" + entPadre.identificador + \">\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaCierre === \"\") {\r\n                    traduccion.crearEtiquetaCierre();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo etiqueta cierre\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+entPadre.SP_ID+\"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-1)+\";\");\r\n                traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"crearEtiquetaCierre();\");\r\n                traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n                //#######################################################################################################\r\n            } else {\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaTexto === \"\") {\r\n                    traduccion.crearEtiquetaTexto();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo nodo Texto\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+entPadre.SP_ID+\"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+entPadre.SP_VAL+\"];\");\r\n                traduccion.t++;\r\n                //traduccion.t++;\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-2)+\";\");\r\n                traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\" +(traduccion.t-1)+\";\");\r\n                traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n                traduccion.setTranslate(\"crearEtiquetaTexto();\");\r\n                traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\" + entPadre.texto + \"</\" + entPadre.identificador + \">\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private validarPredicadosAtri(entPadre: Entorno, simboloPadre: Simbolo, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.value.length > 0 && result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.type === tipoPrimitivo.NODO) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.value.length > 0 && result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.type === tipoPrimitivo.NODO) {\r\n                    if (result.value === entActual.identificador) {\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value !== 1) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === \"\" && result.type === tipoPrimitivo.error) {\r\n                return false;\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n\r\n    public insertarConsulta() {\r\n        traduccion.setTranslate(\"//Ingresando consulta Xpath\\t--------------\");\r\n\r\n        for (const key of this.L_Accesos) {\r\n            traduccion.stackCounter++;\r\n            key.SP_id = traduccion.stackCounter;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n            if (key.tipoAcceso===\"atributo\") {\r\n                traduccion.setTranslate(\"heap[(int)H] = 64;\\t\\t//Caracter @\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n            for (let i = 0; i < key.id.length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + key.id.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + key.id[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === key.id.length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type !== tipoPrimitivo.NODO && valDer.type !== tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                    else if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }else {\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type !== tipoPrimitivo.NODO){\r\n                    if (this.validar(valIzq, valorDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if (valDer.type !== tipoPrimitivo.NODO){\r\n                    if (this.validar(valorIzq, valDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n            \r\n        }else {\r\n            return { value: this.validar(valorIzq, valorDer), type: tipoPrimitivo.BOOL }\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : Retorno, valorDer: Retorno): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq.value === valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq.value !== valorDer.value;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq.value < valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq.value <= valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq.value > valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq.value >= valorDer.value;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Entorno } from \"../xmlAST/Entorno\";\r\nimport { traduccion } from './traduccion';\r\n\r\nexport function traducirXml(ast) {\r\n    traducirXmlRecursive(ast[0]);\r\n    //printText(ast[0]);\r\n}\r\n//TRADUCCION DE XML********************************************\r\nexport function traducirXmlRecursive(raiz: Entorno) {\r\n    traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n    traduccion.stackCounter++;\r\n    //traduccion.t++;\r\n    raiz.SP_ID = traduccion.stackCounter;\r\n    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n    traduccion.setTranslate(\"\");\r\n    traduccion.setTranslate(\"//Identificador de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n    for (let i = 0; i < raiz.identificador.length; i++) {\r\n        traduccion.setTranslate(\"heap[(int)H] = \" + raiz.identificador.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.identificador[i].toString());\r\n        traduccion.setTranslate(\"H = H + 1;\");\r\n        if (i + 1 === raiz.identificador.length) {\r\n            traduccion.setTranslate(\"heap[(int)H] = -1;\"  + \"\\t\\t//FIN DE CADENA\");\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n        }\r\n    }\r\n    if (raiz.texto.length!==0) {\r\n        traduccion.stackCounter++;\r\n        raiz.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"\\n\");\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Texto de nodo: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n        for (let i = 0; i < raiz.texto.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + raiz.texto.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.texto[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === raiz.texto.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    for (const simbolo of raiz.listaSimbolos) {\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_ID = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Simbolo \" + simbolo.identificador.toString() + \" de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\")\r\n        for (let i = 0; i < simbolo.identificador.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.identificador.charCodeAt(i) + \";\"  + \"\\t\\t//Caracter \" + simbolo.identificador[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.identificador.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n        simbolo.valor=simbolo.valor.replaceAll(\"\\\"\",\"\");\r\n        simbolo.valor=simbolo.valor.replaceAll(\"'\",\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Valor de \" + simbolo.identificador + \"\\t--------------\");\r\n        for (let i = 0; i < simbolo.valor.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.valor.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + simbolo.valor[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.valor.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    traduccion.setTranslate(\"\\n\");\r\n    for (const key in raiz.listaEntornos) {\r\n        //traduccion.stackCounter++;\r\n        traducirXmlRecursive(raiz.listaEntornos[key]);\r\n    }\r\n}\r\n//CREACION DEL METODO printString******************************\r\nexport function createPrintText() {\r\n    traduccion.setPrintString(\"//Metodo printString\\t--------------\");\r\n    traduccion.setPrintString(\"void printString() {\");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = S+1; \");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\");\r\n    \r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\"); //L0\r\n    traduccion.etiquetaCounter++;\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\");\r\n    traduccion.setPrintString(\"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\"); //L1\r\n    traduccion.setPrintString(\"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\");\r\n    traduccion.setPrintString(\"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\");\r\n    traduccion.setPrintString(\"goto L\"+(traduccion.etiquetaCounter-1)+\";\");\r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\");\r\n    traduccion.setPrintString(\"return;\");\r\n    traduccion.setPrintString(\"}\");\r\n    traduccion.setPrintString(\"\");\r\n    traduccion.printString = true;\r\n}\r\n//LLAMADA AL METODO printString********************************\r\nexport function printText(raiz: Entorno) {\r\n    if (traduccion.printString===false) {createPrintText();}\r\n    if (raiz.texto!==\"\") {\r\n        traduccion.setTranslate(\"//Imrpimir texto de: \" + raiz.identificador + \"\\t--------------\")\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+raiz.SP_VAL+\"];\");\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n        traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\"+(traduccion.t-1)+\";\");\r\n        traduccion.t++;\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printString();\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t +\" = stack[(int)S];\");\r\n        traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n        traduccion.setTranslate(\"\");\r\n        \r\n    }\r\n    /*for (const r of raiz.listaEntornos) {\r\n        printText(r);\r\n    }*/\r\n}\r\n//TRADUCCION DE CONSULTA XPATH*********************************\r\nexport function TraducirXPATH(query) {\r\n    createConsultaXPATH();\r\n    \r\n}\r\n//CREACION DEL METODO ConsultaXPATH****************************\r\nexport function createConsultaXPATH() {\r\n    traduccion.setConsultaXPATH(\"//Metodo ConsultaXPATH\\t--------------\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"}\");\r\n    traduccion.setConsultaXPATH(\"\");\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { traducirXml, TraducirXPATH } from \"../Traduccion/xml3d\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\n//import { OptimizadorMirilla } from '../Optimizador/OptimizadorMirilla';\r\nimport { traduccion } from '../Traduccion/traduccion';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\n//const parseQuery = require('../Grammar/xQueryGrammar');\r\n//const parseC3D = require('../Grammar/C3DGrammar');\r\n\r\n\r\n\r\nconst utf8 = require('utf8');\r\n\r\nexport default class Main extends Component {\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repErrorXPATH: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: ''\r\n    }\r\n    parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let RepErrorXPATHASC = '';\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n        //XML\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            \r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        //XPATH\r\n        try {\r\n            const querys = parseXPATH.parse(this.state.xpath)\r\n            var querysXpath = querys.xpath;\r\n            console.log(querysXpath);\r\n            var erroresXpath = querys.listaErrores;\r\n            //REPORTE AST y ERRORES PARA XPATH************************************************************\r\n            if (erroresXpath.length === 0) {\r\n                for (const key in querysXpath) {\r\n                    texto = querysXpath[key].GraficarAST(texto);\r\n                    if (indice < querysXpath.length) {\r\n                        texto += \"nodo\" + key.toString() + \"[label=\\\"|\\\"];\\n\"\r\n                        texto += \"nodo\" + querysXpath[key].line.toString() + \"_\" + querysXpath[key].column.toString() + \"->nodo\" + key.toString() + \";\\n\";\r\n                        texto += \"nodo\" + key.toString() + \"->nodo\" + querysXpath[indice].line.toString() + \"_\" + querysXpath[indice].column.toString() + \";\\n\";\r\n                        indice++;\r\n                    }\r\n                }\r\n                this.setState({\r\n                    repAstXpath: \"digraph G {\" + texto + \"}\",\r\n                });\r\n            } else {\r\n                console.log(erroresXpath.length)\r\n                this.setState({\r\n                    repErrorXPATH: \"digraph G {\" + crearTextoReporteErrorXML(erroresXpath, RepErrorXPATHASC) + \"}\"\r\n                })\r\n            }\r\n\r\n\r\n            console.log(texto);\r\n\r\n            this.setState({\r\n                repAstXpath: \"digraph G {\" + texto + \"}\",\r\n            });\r\n///----------------------------------------------------------------------------------------------------------------------------------------------\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querysXpath) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            if (encoding === \"UTF-8\") {\r\n                this.setState({\r\n                    consoleResult: utf8.encode(salida),\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    consoleResult: salida,\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n        traducir = () => {\r\n        if (this.state.xml===\"\") {\r\n            return;\r\n        }\r\n        const result = parser.parse(this.state.xml);\r\n        const querys = parseXPATH.parse(this.state.xpath);\r\n        var querysXpath = querys.xpath; \r\n        var ast = result.ast;\r\n        var respuesta =\"\";\r\n        console.log(querysXpath);\r\n        traducirXml(ast);\r\n        for (const query of querysXpath) {\r\n            try {\r\n                respuesta += query.execute(ast[0]).value;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        this.setState({\r\n            consoleResult: \"//CONSULTA-----------------\\n\\n/*\\n\"+ respuesta + \"*/\\n\\n//TRADUCCION-----------------\\n\\n\"+traduccion.getTranslate(),\r\n        });\r\n    }\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    handleFileChangeXpath = file => {\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXPATH\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Insert your commands here\"\r\n                                value={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.traducir}>Traducir</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parse}>RUN ASC</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <br />\r\n                    <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                        this.setState({\r\n                            xml: e.target.value\r\n                        })\r\n                    }} />\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST XPath</option>\r\n                            <option>Reporte de errores XPath</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={30} value={this.state.consoleResult} readOnly />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/main\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/tytusx/20211SVAC/G06\">\r\n        <Route path=\"/\" exact component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    ATRI,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression{\r\n    \r\n    constructor (\r\n    public line : Number, \r\n    public column : Number, \r\n    public valor : any, \r\n    public tipoPrimitivo? : tipoPrimitivo) {}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo) : Retorno {\r\n        \r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING };\r\n        }else if (this.valor === \"position\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.pos, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.pos, type: tipoPrimitivo.NUMBER}\r\n            }\r\n\r\n        }else if (this.valor === \"last\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.last, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.last, type: tipoPrimitivo.NUMBER}\r\n            }\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last : number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n        this.asignarPosEnts();\r\n        this.asignarPosSimb();\r\n    }\r\n    \r\n    private asignarPosEnts(){\r\n        for (let index = 0; index < this.listaEntornos.length; index++) {\r\n            this.listaEntornos[index].last = this.listaEntornos.length\r\n            this.listaEntornos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    private asignarPosSimb(){\r\n        for (let index = 0; index < this.listaSimbolos.length; index++) {\r\n            this.listaSimbolos[index].last = this.listaSimbolos.length;\r\n            this.listaSimbolos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n\r\n}"],"sourceRoot":""}