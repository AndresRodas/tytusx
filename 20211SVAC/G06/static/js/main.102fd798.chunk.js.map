{"version":3,"sources":["xpathAST/Expresiones/Relacional.tsx","components/main.tsx","Grammar/xmlGrammar.js","Grammar/xmlGrammarDesc.js","Reportes/xmlReport.js","Reportes/xmlReportDesc.js","Grammar/XPATHparser.js","Grammar/XPATHparserDesc.js","App.tsx","reportWebVitals.ts","index.tsx","xmlAST/ClaseError.tsx","Reportes/NodoCST.tsx","xpathAST/Expresiones/Primitivo.tsx","xmlAST/Entorno.tsx","Reportes/SimboloTabla.tsx","xmlAST/Simbolo.tsx","xpathAST/Expresiones/Acceso.tsx","xpathAST/Expresiones/Aritmetico.tsx","xpathAST/Expresiones/Logica.tsx","xpathAST/Expresiones/Path.tsx"],"names":["operacionRelacional","Relacional","line","column","hijoIzq","hijoDer","tipoOperacion","sym","ent","simboloPadre","valorIzq","this","execute","valorDer","type","tipoPrimitivo","RESP","value","valIzq","valDer","NODO","validar","BOOL","IGUAL","DIFERENCIACION","MENOR","MENORIGUAL","MAYOR","MAYORIGUAL","Error","texto","toString","GraficarAST","parser","require","parserXmlDesc","parserReport","parserReportDesc","parseXPATH","parseXPATHDesc","utf8","Main","state","consoleResult","xpath","xml","repcsttxt","repgramtxt","repErrorXML","repErrorXPATH","repTablaSimbolos","repAstXpath","graphvizContent","parse","ast","entornoGlobal","listaErrores","indice","encoding","result","Entorno","buf","Buffer","console","log","length","xmlResRep","setState","crearTextoGraphvizRepGram","ReporteGramatical","crearTextoGraphvizCST","ReporteCST","crearTextoGraphvizTablaSimbolos","crearTablaSimbolos","crearTextoReporteErrorXML","error","alert","querys","querysXpath","erroresXpath","key","erroresSemanticos","salida","query","push","encode","parseDesc","querys2","querysXpath2","erroresXpath2","querysDesc","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","className","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","xs","md","Control","placeholder","variant","as","rows","Group","name","size","dot","options","height","width","zoom","readOnly","Component","xmlGrammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","valor","$","ClaseError","first_line","first_column","Simbolo","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","popStack","n","getPrototypeOf","symbol","preErrorSymbol","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","loc","Array","last_line","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","xmlGrammarDesc","48","49","50","51","52","53","54","55","56","57","58","59","72","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","NodoCST","txtGramProdAux","txtGramRegSemAux","lista","44","xmlReportDesc","43","45","46","47","69","XPATHparser","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","29","30","31","32","33","34","35","36","37","38","39","40","41","undefined","tipoQuery","Path","Acceso","Aritmetico","operacionAritmetica","SUMA","RESTA","MULT","DIV","MOD","Logica","operacionLogica","AND","OR","Primitivo","STRING","NUMBER","28","42","tmp","XPATHparserDesc","setipoQuery","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","tipo","linea","columna","listaErr","nuevo","nombre","listaNodos","Nombre","padre","producciones","reglas","Number","String","pos","last","listaSimbolos","listaE","identificador","listaEntornos","asignarPosEnts","asignarPosSimb","idAtrubito","SimboloTabla","ambito","re","re2","re3","newstr","resultado","entorno","tipoAcceso","predicados","L_Accesos","tipoPath","nuevaL_Accesos","newL_Acc","acceso","validarAntecesores","getQuery","validarPredicadosRaiz","construirNodos","unirSalida","entPadre","posActAcceso","replaceAll","atri","getAtributo","validarPredicadosAtri","entChiild","construirTodosAtributos","construirTodosTextos","entActual","validarPredicadosNodos","tab","atributos"],"mappings":"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","file":"static/js/main.102fd798.chunk.js","sourcesContent":["import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type !== tipoPrimitivo.NODO && valDer.type !== tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                    else if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }else {\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type !== tipoPrimitivo.NODO){\r\n                    if (this.validar(valIzq, valorDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if (valDer.type !== tipoPrimitivo.NODO){\r\n                    if (this.validar(valorIzq, valDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n            \r\n        }else {\r\n            return { value: this.validar(valorIzq, valorDer), type: tipoPrimitivo.BOOL }\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : Retorno, valorDer: Retorno): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq.value == valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq.value != valorDer.value;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq.value < valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq.value <= valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq.value > valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq.value >= valorDer.value;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserXmlDesc = require('../Grammar/xmlGrammarDesc');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parserReportDesc = require('../Reportes/xmlReportDesc');\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\nconst parseXPATHDesc = require('../Grammar/XPATHparserDesc');\r\n\r\nconst utf8 = require('utf8');\r\n\r\nexport default class Main extends Component {\r\n\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repErrorXPATH: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: ''\r\n    }\r\n\r\n    parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let RepErrorXPATHASC = '';\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n        //XML\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            var buf = new Buffer(\"Hello World\");\r\n            console.log(buf.toString(\"ascii\"));\r\n            console.log(\"---------------------\");\r\n            console.log(buf.toString(\"utf8\"));\r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        //XPATH\r\n        try {\r\n            const querys = parseXPATH.parse(this.state.xpath)\r\n            var querysXpath = querys.xpath;\r\n            var erroresXpath = querys.listaErrores;\r\n            //REPORTE AST y ERRORES PARA XPATH************************************************************\r\n            if (erroresXpath.length === 0) {\r\n                for (const key in querysXpath) {\r\n                    texto = querysXpath[key].GraficarAST(texto);\r\n                    if (indice < querysXpath.length) {\r\n                        texto += \"nodo\" + key.toString() + \"[label=\\\"|\\\"];\\n\"\r\n                        texto += \"nodo\" + querysXpath[key].line.toString() + \"_\" + querysXpath[key].column.toString() + \"->nodo\" + key.toString() + \";\\n\";\r\n                        texto += \"nodo\" + key.toString() + \"->nodo\" + querysXpath[indice].line.toString() + \"_\" + querysXpath[indice].column.toString() + \";\\n\";\r\n                        indice++;\r\n                    }\r\n                }\r\n                this.setState({\r\n                    repAstXpath: \"digraph G {\" +texto +\"}\",\r\n                });\r\n            } else {\r\n                console.log(erroresXpath.length)\r\n                this.setState({\r\n                    repErrorXPATH: \"digraph G {\" + crearTextoReporteErrorXML(erroresXpath, RepErrorXPATHASC) + \"}\"\r\n                })\r\n            }\r\n\r\n\r\n            console.log(texto);\r\n\r\n            this.setState({\r\n                repAstXpath: \"digraph G {\" + texto + \"}\",\r\n            });\r\n\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querysXpath) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            if(encoding===\"UTF-8\"){\r\n                this.setState({\r\n                    consoleResult: utf8.encode(salida),\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    consoleResult: salida,\r\n                });\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    parseDesc = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n        let RepErrorXPATHDESC = '';\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let encoding = \"\";\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        try {\r\n            const result = parserXmlDesc.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            \r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReportDesc.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        try {\r\n            const querys2 = parseXPATH.parse(this.state.xpath);\r\n            var querysXpath2 = querys2.xpath;\r\n            var erroresXpath2 = querys2.listaErrores;\r\n            //XPATH AST Y ERROR**********************************************************\r\n            if (erroresXpath2.length === 0) {\r\n                const querysDesc = parseXPATHDesc.parse(this.state.xpath)\r\n                for (const key in querysDesc) {\r\n                    texto = querysDesc[key].GraficarAST(texto);\r\n                    if (indice < querysDesc.length) {\r\n                        texto += \"nodo\" + key.toString() + \"[label=\\\"|\\\"];\\n\"\r\n                        texto += \"nodo\" + querysDesc[key].line.toString() + \"_\" + querysDesc[key].column.toString() + \"->nodo\" + key.toString() + \";\\n\";\r\n                        texto += \"nodo\" + key.toString() + \"->nodo\" + querysDesc[indice].line.toString() + \"_\" + querysDesc[indice].column.toString() + \";\\n\";\r\n                        indice++;\r\n                    }\r\n                }\r\n                this.setState({\r\n                    repAstXpath: \"digraph G {\" +texto +\"}\",\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    repErrorXPATH: \"digraph G {\" + crearTextoReporteErrorXML(erroresXpath2, RepErrorXPATHDESC) + \"}\"\r\n                })\r\n            }\r\n            this.setState({\r\n                repAstXpath: \"digraph G {\" + texto + \"}\",\r\n            });\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querysXpath2) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            if(encoding===\"UTF-8\"){\r\n                this.setState({\r\n                    consoleResult: utf8.encode(salida),\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    consoleResult: salida,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    handleFileChangeXpath = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXPATH\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Insert your commands here\"\r\n                                value={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parse}>RUN ASC</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parseDesc}>RUN DESC</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    \r\n                    <br />\r\n                    <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                        this.setState({\r\n                            xml: e.target.value\r\n                        })\r\n                    }} />\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST XPath</option>\r\n                            <option>Reporte de errores XPath</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={6} value={this.state.consoleResult} readOnly />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n\r\n<Button variant=\"primary\" onClick={() => {\r\n                        var cadena = \"Hola como% estasñ434\";\r\n                        var result = utf8.encode(cadena)\r\n                        console.log(cadena)\r\n                        console.log(result);\r\n\r\n                        \r\n                        \r\n                    }}>encoding</Button>\r\n\r\n\r\n*/","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\nthis.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],true);\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n            this.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],true);\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 11:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 12:\r\n\r\n            this.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 13:\r\n\r\n            listaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\n        \r\nbreak;\r\ncase 15: case 17:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column,true);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammarDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,11],$V3=[1,19],$V4=[2,4],$V5=[1,2,4,12],$V6=[1,28],$V7=[1,36],$V8=[1,37],$V9=[1,27],$Va=[1,26],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[1,33],$Vg=[1,34],$Vh=[1,35],$Vi=[8,15],$Vj=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0]; \r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]]; \r\nbreak;\r\ncase 7:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[]);\r\n    \r\nbreak;\r\ncase 9:\r\nthis.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[]);\r\nbreak;\r\ncase 10:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[]);\r\n    \r\nbreak;\r\ncase 12:\r\nthis.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[]);\r\nbreak;\r\ncase 13:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\nbreak;\r\ncase 15:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 17:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = \"<\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 25:\r\nthis.$ = \">\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 26:\r\nthis.$ = \"&\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 27:\r\nthis.$ = \"\\'\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 28:\r\nthis.$ = \"\\\"\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2]},{1:[2,6],2:$V0,4:$V2,9:8,10:4,11:9,12:[1,10]},{8:[1,13],17:12},{6:[1,14]},{6:$V3,7:18,8:[1,16],13:15,15:[1,17]},{1:[2,3]},{1:$V4},{1:[2,5]},{6:$V1},o($V5,[2,13]),o($V5,[2,14]),{6:$V3,7:20},{8:[1,21],15:[1,22]},{2:$V0,4:$V2,6:$V6,10:25,14:23,15:$V7,16:24,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,38]},o($Vi,[2,18],{7:18,13:39,6:$V3}),{18:[1,40]},{6:$V3,7:41},{2:$V0,4:$V2,6:$V6,10:25,14:42,15:$V7,16:43,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,44]},{2:$V0,4:[1,45],10:46},{4:[1,47]},o($V4,[2,16]),{4:[2,33],6:$V6,15:$V7,16:48,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,34],6:$V6,15:$V7,16:49,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,35],6:$V6,15:$V7,16:50,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,37],6:$V6,15:$V7,16:51,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,38],6:$V6,15:$V7,16:52,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,39],6:$V6,15:$V7,16:53,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,40],6:$V6,15:$V7,16:54,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,41],6:$V6,15:$V7,16:55,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,36],6:$V6,15:$V7,16:56,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,42],6:$V6,15:$V7,16:57,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,43],6:$V6,15:$V7,16:58,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,44],6:$V6,15:$V7,16:59,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},o($V5,[2,12]),o($Vi,[2,17]),{19:[1,60],20:[1,61]},{5:[1,62]},{2:$V0,4:[1,63],10:46},{4:[1,64]},o($V5,[2,9]),{6:$V1,15:[1,65]},o($V4,[2,15]),{15:[1,66]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},{4:[2,31]},{4:[2,32]},o($Vj,[2,19]),o($Vj,[2,20]),{8:[1,67]},{6:$V1,15:[1,68]},{15:[1,69]},{6:[1,70]},{6:[1,71]},{2:$V0,4:$V2,9:72,10:4},{6:[1,73]},{6:[1,74]},{8:[1,75]},{8:[1,76]},{1:[2,1]},{8:[1,77]},{8:[1,78]},o($V5,[2,10]),o($V5,[2,11]),o($V5,[2,7]),o($V5,[2,8])],\r\ndefaultActions: {3:[2,2],8:[2,3],9:[2,4],10:[2,5],48:[2,21],49:[2,22],50:[2,23],51:[2,24],52:[2,25],53:[2,26],54:[2,27],55:[2,28],56:[2,29],57:[2,30],58:[2,31],59:[2,32],72:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammarDesc;\r\nexports.Parser = xmlGrammarDesc.Parser;\r\nexports.parse = function () { return xmlGrammarDesc.parse.apply(xmlGrammarDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReport = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\r\ndefaultActions: {24:[2,14],44:[2,13]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReport;\r\nexports.Parser = xmlReport.Parser;\r\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReportDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,10],$V2=[1,16],$V3=[1,25],$V4=[1,33],$V5=[1,34],$V6=[1,24],$V7=[1,23],$V8=[1,26],$V9=[1,27],$Va=[1,28],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[8,15],$Vg=[1,4,12],$Vh=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n\r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := NODO INTRO\");\r\n        txtGramRegSem.push(\"NODO.push(INTRO.val); INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK.val := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO LISTANODOS\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO LISTAATRIBUTOS\");\r\n        txtGramRegSem.push(\"ATRIBUTO.push(LISTAATRIBUTOS.val); LISTAATRIBUTOS.val = ATRIBUTO.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := '/' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '/' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'/'\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := '=' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '=' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'='\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthans\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2]},{1:[2,6],4:$V1,9:7,10:4,11:8,12:[1,9]},{6:[1,11]},{6:$V2,7:15,8:[1,13],13:12,15:[1,14]},{1:[2,3]},{1:[2,4]},{1:[2,5]},{6:$V0},{6:$V2,7:17},{8:[1,18],15:[1,19]},{4:$V1,6:$V3,10:22,14:20,15:$V4,16:21,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,35]},o($Vf,[2,16],{7:15,13:36,6:$V2}),{17:[1,37]},{6:$V2,7:38},{4:$V1,6:$V3,10:22,14:39,15:$V4,16:40,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,41]},{4:[1,42],10:43},{4:[1,44]},{4:[2,14]},{4:[2,31],6:$V3,15:$V4,16:45,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,32],6:$V3,15:$V4,16:46,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,33],6:$V3,15:$V4,16:47,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,35],6:$V3,15:$V4,16:48,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,36],6:$V3,15:$V4,16:49,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,37],6:$V3,15:$V4,16:50,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,38],6:$V3,15:$V4,16:51,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,39],6:$V3,15:$V4,16:52,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,34],6:$V3,15:$V4,16:53,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,40],6:$V3,15:$V4,16:54,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,41],6:$V3,15:$V4,16:55,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,42],6:$V3,15:$V4,16:56,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},o($Vg,[2,12]),o($Vf,[2,15]),{18:[1,57],19:[1,58]},{5:[1,59]},{4:[1,60],10:43},{4:[1,61]},o($Vg,[2,9]),{6:$V0,15:[1,62]},{4:[2,13]},{15:[1,63]},{4:[2,19]},{4:[2,20]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},o($Vh,[2,17]),o($Vh,[2,18]),{8:[1,64]},{6:$V0,15:[1,65]},{15:[1,66]},{6:[1,67]},{6:[1,68]},{4:$V1,9:69,10:4},{6:[1,70]},{6:[1,71]},{8:[1,72]},{8:[1,73]},{1:[2,1]},{8:[1,74]},{8:[1,75]},o($Vg,[2,10]),o($Vg,[2,11]),o($Vg,[2,7]),o($Vg,[2,8])],\r\ndefaultActions: {3:[2,2],7:[2,3],8:[2,4],9:[2,5],22:[2,14],43:[2,13],45:[2,19],46:[2,20],47:[2,21],48:[2,22],49:[2,23],50:[2,24],51:[2,25],52:[2,26],53:[2,27],54:[2,28],55:[2,29],56:[2,30],69:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReportDesc;\r\nexports.Parser = xmlReportDesc.Parser;\r\nexports.parse = function () { return xmlReportDesc.parse.apply(xmlReportDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[5,6],$V3=[1,20],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,23],$Vf=[1,24],$Vg=[5,6,8,10,13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vh=[1,27],$Vi=[5,6,8,10,13,18,27,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vj=[1,48],$Vk=[1,41],$Vl=[1,42],$Vm=[1,43],$Vn=[1,44],$Vo=[1,45],$Vp=[1,46],$Vq=[1,62],$Vr=[1,60],$Vs=[1,61],$Vt=[1,63],$Vu=[1,64],$Vv=[1,65],$Vw=[1,66],$Vx=[1,67],$Vy=[1,68],$Vz=[1,69],$VA=[1,70],$VB=[1,71],$VC=[1,72],$VD=[13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$VE=[18,29,30,31,34,35,36,37,38,39,40,41],$VF=[13,18,29,30,31,32,34,35,36,37,38,39,40,41],$VG=[18,29,34,35,40,41],$VH=[18,29,34,35,36,37,38,39,40,41];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"MULTIPATH\":4,\"EOF\":5,\"|\":6,\"PATH\":7,\"/\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"..\":15,\"text\":16,\"(\":17,\")\":18,\"node\":19,\"child\":20,\"::\":21,\"descendant\":22,\"PREDICADOS\":23,\"@\":24,\"attribute\":25,\"PREDI\":26,\"[\":27,\"EXP\":28,\"]\":29,\"+\":30,\"-\":31,\"div\":32,\"mod\":33,\"=\":34,\"!=\":35,\"<\":36,\"<=\":37,\">\":38,\">=\":39,\"and\":40,\"or\":41,\"VALOR\":42,\"cadena\":43,\"scadena\":44,\"number\":45,\"position\":46,\"last\":47,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"|\",8:\"/\",10:\"//\",12:\"id\",13:\"*\",14:\".\",15:\"..\",16:\"text\",17:\"(\",18:\")\",19:\"node\",20:\"child\",21:\"::\",22:\"descendant\",24:\"@\",25:\"attribute\",27:\"[\",29:\"]\",30:\"+\",31:\"-\",32:\"div\",33:\"mod\",34:\"=\",35:\"!=\",36:\"<\",37:\"<=\",38:\">\",39:\">=\",40:\"and\",41:\"or\",43:\"cadena\",44:\"scadena\",45:\"number\",46:\"position\",47:\"last\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,1],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,2],[11,4],[11,4],[11,4],[11,4],[11,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,4],[11,4],[11,1],[23,2],[23,1],[26,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[42,3],[42,1],[42,1],[42,1],[42,3],[42,3],[42,1],[42,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n                                                    var listaErroresTemp = listaErrores;\r\n                                                    listaErrores = [];\r\n                                                    return {xpath: $$[$0-1],listaErrores:listaErroresTemp}\r\n                                                    \r\nbreak;\r\ncase 2:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 3: case 8: case 35:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 4:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 5:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 6:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 7:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 9:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 10:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 20:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 24:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 25:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 33:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 34:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 36: case 51:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 37:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 38:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 39:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 41:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 42:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 43:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 44:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 45:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 46:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 47:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 48:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 49:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 50:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 52: case 53:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 54:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 55: case 56:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 57:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                 this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 58:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                 this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:$V0,10:$V1},{1:[3]},{5:[1,6],6:[1,7]},o($V2,[2,3]),{2:$V3,9:8,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,9:21,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{1:[2,1]},{7:22,8:$V0,10:$V1},o($V2,[2,4],{8:$Ve,10:$Vf}),o($Vg,[2,8]),o($Vg,[2,9],{23:25,26:26,27:$Vh}),o($Vg,[2,10],{26:26,23:28,27:$Vh}),o($Vg,[2,11]),o($Vg,[2,12]),{17:[1,29]},{17:[1,30]},{21:[1,31]},{21:[1,32]},{12:[1,33],13:[1,34]},{21:[1,35]},o($Vg,[2,33]),o($V2,[2,5],{8:$Ve,10:$Vf}),o($V2,[2,2]),{2:$V3,11:36,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,11:37,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,19],{26:38,27:$Vh}),o($Vi,[2,35]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:39,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($Vg,[2,20],{26:38,27:$Vh}),{18:[1,49]},{18:[1,50]},{12:[1,51],13:[1,52]},{12:[1,53],13:[1,54]},o($Vg,[2,25],{26:26,23:55,27:$Vh}),o($Vg,[2,26],{26:26,23:56,27:$Vh}),{12:[1,57],13:[1,58]},o($Vg,[2,6]),o($Vg,[2,7]),o($Vi,[2,34]),{13:$Vq,29:[1,59],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},o($VD,[2,50]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:73,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($VD,[2,52]),o($VD,[2,53]),o($VD,[2,54]),{17:[1,74]},{17:[1,75]},o($VD,[2,57],{8:$Ve,10:$Vf}),{2:$V3,9:76,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,13]),o($Vg,[2,14]),o($Vg,[2,15],{26:26,23:77,27:$Vh}),o($Vg,[2,16],{26:26,23:78,27:$Vh}),o($Vg,[2,17],{26:26,23:79,27:$Vh}),o($Vg,[2,18],{26:26,23:80,27:$Vh}),o($Vg,[2,29],{26:38,27:$Vh}),o($Vg,[2,30],{26:38,27:$Vh}),o($Vg,[2,27],{26:26,23:81,27:$Vh}),o($Vg,[2,28],{26:26,23:82,27:$Vh}),o($Vi,[2,36]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:83,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:84,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:85,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:86,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:87,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:88,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:89,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:90,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:91,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:92,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:93,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:94,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:95,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{13:$Vq,18:[1,96],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},{18:[1,97]},{18:[1,98]},o($VD,[2,58],{8:$Ve,10:$Vf}),o($Vg,[2,21],{26:38,27:$Vh}),o($Vg,[2,22],{26:38,27:$Vh}),o($Vg,[2,23],{26:38,27:$Vh}),o($Vg,[2,24],{26:38,27:$Vh}),o($Vg,[2,31],{26:38,27:$Vh}),o($Vg,[2,32],{26:38,27:$Vh}),o($VE,[2,37],{13:$Vq,32:$Vt,33:$Vu}),o($VE,[2,38],{13:$Vq,32:$Vt,33:$Vu}),o($VF,[2,39],{33:$Vu}),o($VF,[2,40],{33:$Vu}),o($VD,[2,41]),o($VG,[2,42],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VG,[2,43],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VH,[2,44],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,45],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,46],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,47],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o([18,29,40,41],[2,48],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o([18,29,41],[2,49],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB}),o($VD,[2,51]),o($VD,[2,55]),o($VD,[2,56])],\r\ndefaultActions: {6:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 43;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 44;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 8\r\nbreak;\r\ncase 18:return 15\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 24\r\nbreak;\r\ncase 21:return 27\r\nbreak;\r\ncase 22:return 29\r\nbreak;\r\ncase 23:return 17\r\nbreak;\r\ncase 24:return 18\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 6\r\nbreak;\r\ncase 27:return 30\r\nbreak;\r\ncase 28:return 31\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 32\r\nbreak;\r\ncase 31:return 34\r\nbreak;\r\ncase 32:return 35\r\nbreak;\r\ncase 33:return 37\r\nbreak;\r\ncase 34:return 39\r\nbreak;\r\ncase 35:return 36\r\nbreak;\r\ncase 36:return 38\r\nbreak;\r\ncase 37:return 41\r\nbreak;\r\ncase 38:return 40\r\nbreak;\r\ncase 39:return 33\r\nbreak;\r\ncase 40:return 21\r\nbreak;\r\ncase 41:return 20\r\nbreak;\r\ncase 42:return 25\r\nbreak;\r\ncase 43:return 22\r\nbreak;\r\ncase 44:return 16\r\nbreak;\r\ncase 45:return 47 \r\nbreak;\r\ncase 46:return 46\r\nbreak;\r\ncase 47:return 45\r\nbreak;\r\ncase 48:return 12\r\nbreak;\r\ncase 49:return 5\r\nbreak;\r\ncase 50:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:[\" \"]+)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparser;\r\nexports.Parser = XPATHparser.Parser;\r\nexports.parse = function () { return XPATHparser.parse.apply(XPATHparser, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparserDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,10],$V2=[1,11],$V3=[1,12],$V4=[1,13],$V5=[5,8],$V6=[5,8,13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$V7=[4,5,8,10,13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$V8=[1,21],$V9=[1,37],$Va=[1,32],$Vb=[1,33],$Vc=[1,34],$Vd=[1,35],$Ve=[1,43],$Vf=[1,41],$Vg=[1,42],$Vh=[1,44],$Vi=[1,45],$Vj=[1,46],$Vk=[1,47],$Vl=[1,48],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$Vs=[20,21,22,25,26,27,28,29,30,31,32,35],$Vt=[13,20,21,22,23,25,26,27,28,29,30,31,32,35],$Vu=[20,25,26,31,32,35],$Vv=[20,25,26,27,28,29,30,31,32,35];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"/\":4,\"EOF\":5,\"MULTIPATH\":6,\"PATH\":7,\"|\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"PREDICADOS\":15,\"@\":16,\"PREDI\":17,\"[\":18,\"EXP\":19,\"]\":20,\"+\":21,\"-\":22,\"div\":23,\"mod\":24,\"=\":25,\"!=\":26,\"<\":27,\"<=\":28,\">\":29,\">=\":30,\"and\":31,\"or\":32,\"VALOR\":33,\"(\":34,\")\":35,\"cadena\":36,\"scadena\":37,\"number\":38,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"/\",5:\"EOF\",8:\"|\",10:\"//\",12:\"id\",13:\"*\",14:\".\",16:\"@\",18:\"[\",20:\"]\",21:\"+\",22:\"-\",23:\"div\",24:\"mod\",25:\"=\",26:\"!=\",27:\"<\",28:\"<=\",29:\">\",30:\">=\",31:\"and\",32:\"or\",34:\"(\",35:\")\",36:\"cadena\",37:\"scadena\",38:\"number\"},\r\nproductions_: [0,[3,2],[3,2],[3,1],[6,3],[6,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,2],[11,2],[11,2],[11,2],[11,3],[11,3],[15,2],[15,1],[17,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,1],[33,3],[33,1],[33,1],[33,1],[33,1],[33,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1: case 2:\r\nreturn $$[$0-1];\r\nbreak;\r\ncase 3:\r\nreturn [];\r\nbreak;\r\ncase 4:\r\n$$[$0].push($$[$0-2]); this.$ = $$[$0];\r\nbreak;\r\ncase 5: case 10: case 21:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 6:\r\n$$[$0][0].setipoQuery('relativa'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'relativa');\r\nbreak;\r\ncase 7:\r\n$$[$0][0].setipoQuery('absoluta'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'absoluta');\r\nbreak;\r\ncase 8:\r\n$$[$0-2].setipoQuery('relativa'); $$[$0].push($$[$0-2]); this.$ = $$[$0];\r\nbreak;\r\ncase 9:\r\n$$[$0-2].setipoQuery('absoluta'); $$[$0].push($$[$0-2]); this.$ = $$[$0];\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 20:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0];\r\nbreak;\r\ncase 22: case 37:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 23:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 24:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 25:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 33:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 34:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 35:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 36:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 38: case 39:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 41:\r\n$$[$0][0].setipoQuery('relativa'); this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 42:\r\n$$[$0][0].setipoQuery('absoluta'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],5:[1,4],6:3,7:5,10:$V0},{1:[3]},{5:[1,7],9:8,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{5:[1,14]},{1:[2,3]},{5:[2,5],8:[1,15]},{9:16,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{1:[2,1]},o($V5,[2,6]),o($V6,[2,10],{4:[1,17],10:[1,18]}),o($V7,[2,11],{15:19,17:20,18:$V8}),o($V7,[2,12],{17:20,15:22,18:$V8}),o($V7,[2,13]),{12:[1,23],13:[1,24]},{1:[2,2]},{4:[1,26],6:25,7:5,10:$V0},o($V5,[2,7]),{9:27,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{9:28,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V7,[2,14]),o($V7,[2,21],{17:20,15:29,18:$V8}),{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:30,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},o($V7,[2,15]),o($V7,[2,16],{17:20,15:38,18:$V8}),o($V7,[2,17],{17:20,15:39,18:$V8}),{5:[2,4]},{9:8,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V6,[2,8]),o($V6,[2,9]),o($V7,[2,20]),{13:$Ve,20:[1,40],21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo,31:$Vp,32:$Vq},o($Vr,[2,36]),{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:54,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},o($Vr,[2,38]),o($Vr,[2,39]),o($Vr,[2,40]),o($Vr,[2,41]),{9:55,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V7,[2,18]),o($V7,[2,19]),o([4,5,8,10,13,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35],[2,22]),{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:56,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:57,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:58,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:59,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:60,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:61,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:62,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:63,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:64,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:65,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:66,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:67,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:68,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo,31:$Vp,32:$Vq,35:[1,69]},o($Vr,[2,42]),o($Vs,[2,23],{13:$Ve,23:$Vh,24:$Vi}),o($Vs,[2,24],{13:$Ve,23:$Vh,24:$Vi}),o($Vt,[2,25],{24:$Vi}),o($Vt,[2,26],{24:$Vi}),o($Vr,[2,27]),o($Vu,[2,28],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,27:$Vl,28:$Vm,29:$Vn,30:$Vo}),o($Vu,[2,29],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,27:$Vl,28:$Vm,29:$Vn,30:$Vo}),o($Vv,[2,30],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o($Vv,[2,31],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o($Vv,[2,32],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o($Vv,[2,33],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o([20,31,32,35],[2,34],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo}),o([20,32,35],[2,35],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo,31:$Vp}),o($Vr,[2,37])],\r\ndefaultActions: {4:[2,3],7:[2,1],14:[2,2],25:[2,4]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")   \r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 36;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 37;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 4\r\nbreak;\r\ncase 18:return '..'\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 16\r\nbreak;\r\ncase 21:return 18\r\nbreak;\r\ncase 22:return 20\r\nbreak;\r\ncase 23:return 34\r\nbreak;\r\ncase 24:return 35\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 8\r\nbreak;\r\ncase 27:return 21\r\nbreak;\r\ncase 28:return 22\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 23\r\nbreak;\r\ncase 31:return 25\r\nbreak;\r\ncase 32:return 26\r\nbreak;\r\ncase 33:return 28\r\nbreak;\r\ncase 34:return 30\r\nbreak;\r\ncase 35:return 27\r\nbreak;\r\ncase 36:return 29\r\nbreak;\r\ncase 37:return 32\r\nbreak;\r\ncase 38:return 31\r\nbreak;\r\ncase 39:return 24\r\nbreak;\r\ncase 40:return 38\r\nbreak;\r\ncase 41:return 12\r\nbreak;\r\ncase 42:return 5\r\nbreak;\r\ncase 43:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\s+\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?: )/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparserDesc;\r\nexports.Parser = XPATHparserDesc.Parser;\r\nexports.parse = function () { return XPATHparserDesc.parse.apply(XPATHparserDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/main\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/tytusx/20211SVAC/G06\">\r\n        <Route path=\"/\" exact component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    ATRI,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression{\r\n    \r\n    constructor (\r\n    public line : Number, \r\n    public column : Number, \r\n    public valor : any, \r\n    public tipoPrimitivo? : tipoPrimitivo) {}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo) : Retorno {\r\n        \r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING };\r\n        }else if (this.valor == \"position\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.pos, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.pos, type: tipoPrimitivo.NUMBER}\r\n            }\r\n\r\n        }else if (this.valor == \"last\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.last, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.last, type: tipoPrimitivo.NUMBER}\r\n            }\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last : number;\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.asignarPosEnts();\r\n        this.asignarPosSimb();\r\n    }\r\n    \r\n    private asignarPosEnts(){\r\n        for (let index = 0; index < this.listaEntornos.length; index++) {\r\n            this.listaEntornos[index].last = this.listaEntornos.length\r\n            this.listaEntornos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    private asignarPosSimb(){\r\n        for (let index = 0; index < this.listaSimbolos.length; index++) {\r\n            this.listaSimbolos[index].last = this.listaSimbolos.length;\r\n            this.listaSimbolos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n\r\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last: number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n        this.last = -1; \r\n    }\r\n\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[],\r\n    public tipoQuery ?: string ){\r\n        \r\n    } \r\n\r\n    public setipoQuery(tipo: string){\r\n        this.tipoQuery = tipo;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionAritmetica,\r\n    public sym: string){}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if((valorIzq.type === tipoPrimitivo.STRING  || valorIzq.type === tipoPrimitivo.NUMBER )&&(valorDer.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.NUMBER)&&(this.tipoOperacion === operacionAritmetica.SUMA)) {\r\n            return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER };\r\n        }\r\n        else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n           \r\n            if(this.tipoOperacion === operacionAritmetica.RESTA){\r\n                return { value: (valorIzq.value - valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.MULT){\r\n                return { value: (valorIzq.value * valorDer.value) , type: tipoPrimitivo.NUMBER };;\r\n            }else if(this.tipoOperacion === operacionAritmetica.DIV){\r\n\r\n                if(Number(valorDer.value) >= 0){\r\n                    return { value: (valorIzq.value / valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: El valor \"+valorDer+\", debe ser mayor o igual que cero,  Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }else if (this.tipoOperacion === operacionAritmetica.MOD){\r\n                return  { value: (valorIzq.value % valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionLogica,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        \r\n        if (valorIzq.type === tipoPrimitivo.BOOL){\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            }\r\n            \r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL){\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \"+valorDer.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorIzq.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso} from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport class Path implements Expression{\r\n\r\n    salida: any[];\r\n    nuevaL_Accesos: Acceso[];\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public L_Accesos : Acceso [],\r\n    public tipoPath ?: string\r\n    ){\r\n        this.salida=[];\r\n        this.nuevaL_Accesos=[];\r\n    }   \r\n\r\n    private validarAntecesores(): Acceso []{\r\n\r\n        let newL_Acc : Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n            \r\n            if (acceso.tipoAcceso === 'padre'){\r\n                \r\n                if (newL_Acc.length >0){\r\n                    newL_Acc.pop()\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \"+acceso.line+\"column: \"+acceso.column);\r\n                }\r\n            }else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    private unirSalida () : string{\r\n\r\n        let salida : string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo) :Retorno { //      /biblio\r\n\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\"){\r\n\r\n            if (this.L_Accesos.length > 0 && ent.listaEntornos.length > 0){\r\n  \r\n                if(ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\"){//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n\r\n                    if (this.validarPredicadosRaiz(ent, 0)){\r\n\r\n                        if(this.L_Accesos.length >  1){ //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(ent, 1); \r\n                        }else{\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                }else if (this.L_Accesos[0].tipoQuery === 'absoluta'){\r\n                    this.getQuery(ent, 0);\r\n                }\r\n            }\r\n        }else {\r\n\r\n            this.salida = [];\r\n            this.getQuery(ent, 0, simboloPadre);\r\n            return {value: this.salida, type: tipoPrimitivo.RESP};\r\n        } \r\n        return {value: this.unirSalida(), type: tipoPrimitivo.STRING};\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number, simboloPadre?:Simbolo) {\r\n        \r\n        if(simboloPadre !== undefined ){ // si la consulta es una sub consulta y el padre es un atributo --> /id[subconsulta]\r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\"|| this.L_Accesos[posActAcceso].tipoQuery ==='text'){\r\n\r\n                if(this.L_Accesos.length < posActAcceso + 1){\r\n                    this.getQuery(entPadre, posActAcceso + 1, simboloPadre);\r\n                }else{\r\n\r\n                    if (this.tipoPath === \"sub\"){\r\n                        this.salida.push({value : simboloPadre.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                    }else {\r\n\r\n                        if(this.L_Accesos[posActAcceso].tipoQuery ==='text'){\r\n                            this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                        }else {\r\n                            this.salida.push(simboloPadre.identificador + \" = \\\"\" + simboloPadre.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n                        }\r\n                    }\r\n                } \r\n            }else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }  \r\n\r\n        }else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\"){\r\n               \r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if(atri != null){\r\n\r\n                    if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)){\r\n                    \r\n                        if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entPadre, posActAcceso + 1, atri); \r\n                        }else{\r\n\r\n                            if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                            }else{\r\n                                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n                    \r\n                    for (const entChiild of entPadre.listaEntornos ) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entChiild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\"){\r\n\r\n                if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1){\r\n                    \r\n                    this.construirTodosAtributos(entPadre);\r\n                    \r\n                } else {\r\n\r\n                    if (entPadre.listaSimbolos.length > 0){\r\n\r\n                        for (const atri of entPadre.listaSimbolos){\r\n    \r\n                            if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)){\r\n                               \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entPadre, posActAcceso + 1, atri); \r\n                                }else{\r\n        \r\n                                    if (this.tipoPath === \"sub\"){\r\n                                        this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                                    }else{\r\n                                        this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso ==='texto' ){\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1){\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery ==='relativa'){\r\n\r\n                        if (entPadre.texto !== ''){\r\n                            this.salida.push(entPadre.texto + '\\n');\r\n                        }\r\n\r\n                    }else {\r\n                        this.construirTodosTextos(entPadre);\r\n                    }\r\n                    \r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto del nodo ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" ){\r\n\r\n                if(this.L_Accesos.length >  posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entPadre, posActAcceso + 1); \r\n                }else{\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\"){\r\n\r\n                if(entPadre.listaEntornos.length > 0){\r\n                    \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        \r\n                        if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)){\r\n                    \r\n                            if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entActual, posActAcceso + 1); \r\n                            }else{\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\"){\r\n                \r\n                if(entPadre.listaEntornos.length > 0){\r\n                      \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n    \r\n                        if(entActual.identificador === this.L_Accesos[posActAcceso].id){//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n                    \r\n                            if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)){\r\n        \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entActual, posActAcceso + 1);\r\n                                }else{\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        }else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n                            this.getQuery(entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \"+this.L_Accesos[posActAcceso].tipoAcceso+\" del acceso: \"+this.L_Accesos[posActAcceso].tipoAcceso+\" no se reconoce como valido, \" + \r\n                \"linea: \"+this.L_Accesos[posActAcceso].line+\" comlumna: \"+this.L_Accesos[posActAcceso].column);\r\n            }   \r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre:Entorno){\r\n        \r\n        if (entPadre.texto !== ''){\r\n            this.salida.push(entPadre.texto + '\\n');\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos (entPadre:Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos){\r\n\r\n            if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n            }else{\r\n                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n            }\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre:Entorno, tab : string){\r\n\r\n        if (this.tipoPath === \"sub\"){\r\n\r\n            if (entPadre.listaEntornos.length > 0 || (entPadre.listaEntornos.length === 0 && entPadre.texto === '')){\r\n                this.salida.push({value : entPadre.identificador , type: tipoPrimitivo.NODO})\r\n            }else {\r\n                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n            }\r\n\r\n        }else {\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n            }\r\n\r\n            //construyo Nodos\r\n            if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if(entPadre.listaEntornos.length > 0){\r\n\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n            \r\n            } else{\r\n                this.salida.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private validarPredicadosAtri(entPadre: Entorno, simboloPadre:Simbolo, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.value.length > 0 && result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.type === tipoPrimitivo.NODO){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n            \r\n        }\r\n        return true;\r\n    } \r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.value.length > 0 && result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.type === tipoPrimitivo.NODO){\r\n                    if (result.value === entActual.identificador){\r\n                        return true;\r\n                    }\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if ( result.value !== 1){\r\n                    return false;\r\n                }\r\n            }else if (result.value === \"\" && result.type === tipoPrimitivo.error){\r\n                return false; \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}"],"sourceRoot":""}