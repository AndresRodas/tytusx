{"version":3,"sources":["xmlAST/xml3d.tsx","Grammar/xmlGrammar.js","xmlAST/Simbolo.tsx","Reportes/xmlReport.js","Grammar/XPATHparser.js","xpathAST/Expresiones/Acceso.tsx","xpathAST/Expresiones/Aritmetico.tsx","xpathAST/Expresiones/Logica.tsx","xpathAST/Expresiones/Path.tsx","xpathAST/Expresiones/Relacional.tsx","Grammar/xQueryGrammar.js","App.tsx","reportWebVitals.ts","index.tsx","Traduccion/traduccion.tsx","xmlAST/ClaseError.tsx","xpathAST/Expresiones/Primitivo.tsx","Reportes/NodoCST.tsx","xmlAST/Entorno.tsx","Reportes/SimboloTabla.tsx","components/main.tsx"],"names":["traducirXml","ast","traducirXmlRecursive","printText","raiz","traduccion","setTranslate","SP_ID","stackCounter","toString","identificador","i","length","charCodeAt","texto","SP_VAL","listaSimbolos","simbolo","valor","replaceAll","key","listaEntornos","printString","t","etiquetaCounter","xmlGrammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","parser","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","listaErrores","encoding","this","$","push","ClaseError","first_line","first_column","Entorno","Simbolo","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","line","loc","Array","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","console","log","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","id","linea","columna","pos","last","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","crearNodo","NodoCST","txtGramProdAux","txtGramRegSemAux","ReporteGramatical","ReporteCST","lista","44","XPATHparser","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","29","30","31","32","33","34","35","36","37","38","39","40","41","43","45","46","47","xpath","undefined","tipoQuery","Path","Acceso","Aritmetico","operacionAritmetica","SUMA","RESTA","MULT","DIV","MOD","Relacional","operacionRelacional","IGUAL","DIFERENCIACION","MENOR","MENORIGUAL","MAYOR","MAYORIGUAL","Logica","operacionLogica","AND","OR","Primitivo","tipoPrimitivo","STRING","NUMBER","28","42","tmp","column","tipoAcceso","predicados","tipo","GraficarAST","hijoIzq","hijoDer","tipoOperacion","sym","ent","simboloPadre","valorIzq","execute","valorDer","type","value","Number","BOOL","L_Accesos","tipoPath","salida","nuevaL_Accesos","newL_Acc","acceso","validarAntecesores","getQuery","RESP","validarPredicadosRaiz","construirNodos","unirSalida","entPadre","posActAcceso","atri","getAtributo","validarPredicadosAtri","entChiild","construirTodosAtributos","construirTodosTextos","entActual","validarPredicadosNodos","tab","NODO","atributos","result","valIzq","valDer","validar","xquerygrammar","48","49","50","54","55","56","57","58","59","51","52","53","71","73","84","103","105","106","App","basename","path","exact","component","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","content","tranlate","crearTextoReporteErrorXML","listaErr","String","nuevo","nombre","indice","listaNodos","Nombre","crearTextoGraphvizCST","padre","crearTextoGraphvizRepGram","producciones","reglas","listaE","asignarPosEnts","asignarPosSimb","idAtrubito","SimboloTabla","ambito","re","re2","re3","newstr","crearTablaSimbolos","resultado","entorno","crearTextoGraphvizTablaSimbolos","parserReport","parseXPATH","utf8","consoleResult","xml","repcsttxt","repgramtxt","repErrorXML","repErrorXPATH","repTablaSimbolos","repAstXpath","graphvizContent","entornoGlobal","buf","Buffer","xmlResRep","setState","alert","querys","querysXpath","erroresXpath","erroresSemanticos","query","encode","traducir","getTranslate","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","bg","expand","Brand","href","Toggle","aria-controls","Collapse","className","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","xs","md","Control","placeholder","variant","as","rows","Group","name","size","dot","height","width","zoom","readOnly","Component"],"mappings":"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","file":"static/js/main.1f4fc197.chunk.js","sourcesContent":["import { Entorno } from \"../xmlAST/Entorno\";\r\nimport { traduccion } from '../Traduccion/traduccion';\r\n\r\nexport function traducirXml(ast) {\r\n    traducirXmlRecursive(ast[0]);\r\n    printText(ast[0]);\r\n}\r\n\r\nexport function traducirXmlRecursive(raiz: Entorno) {\r\n    traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n    raiz.SP_ID = traduccion.stackCounter;\r\n    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n    traduccion.setTranslate(\"\");\r\n    traduccion.setTranslate(\"//Identificador de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n    for (let i = 0; i < raiz.identificador.length; i++) {\r\n        traduccion.setTranslate(\"heap[(int)H] = \" + raiz.identificador.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.identificador[i].toString());\r\n        traduccion.setTranslate(\"H = H + 1;\");\r\n        if (i + 1 === raiz.identificador.length) {\r\n            traduccion.setTranslate(\"heap[(int)H] = -1;\"  + \"\\t\\t//FIN DE CADENA\");\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n        }\r\n    }\r\n    if (raiz.texto.length!==0) {\r\n        traduccion.stackCounter++;\r\n        raiz.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"\\n\");\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Texto de nodo: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n        for (let i = 0; i < raiz.texto.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + raiz.texto.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.texto[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === raiz.texto.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    for (const simbolo of raiz.listaSimbolos) {\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_ID = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Simbolo \" + simbolo.identificador.toString() + \" de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\")\r\n        for (let i = 0; i < simbolo.identificador.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.identificador.charCodeAt(i) + \";\"  + \"\\t\\t//Caracter \" + simbolo.identificador[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.identificador.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n        simbolo.valor=simbolo.valor.replaceAll(\"\\\"\",\"\");\r\n        simbolo.valor=simbolo.valor.replaceAll(\"'\",\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Valor de \" + simbolo.identificador + \"\\t--------------\");\r\n        for (let i = 0; i < simbolo.valor.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.valor.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + simbolo.valor[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.valor.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    traduccion.setTranslate(\"\\n\");\r\n    for (const key in raiz.listaEntornos) {\r\n        traduccion.stackCounter++;\r\n        traducirXmlRecursive(raiz.listaEntornos[key]);\r\n    }\r\n}\r\n\r\nexport function createPrintText() {\r\n    traduccion.setTranslate(\"void printString() {\");\r\n    traduccion.setTranslate(\"t\"+traduccion.t+\" = S+1; \");\r\n    traduccion.t++;\r\n    traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\");\r\n    traduccion.t++;\r\n    traduccion.setTranslate(\"L\"+traduccion.etiquetaCounter+\":\"); //L0\r\n    traduccion.etiquetaCounter++;\r\n    traduccion.setTranslate(\"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\");\r\n    traduccion.setTranslate(\"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\"); //L1\r\n    traduccion.setTranslate(\"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\");\r\n    traduccion.setTranslate(\"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\");\r\n    traduccion.setTranslate(\"goto L\"+(traduccion.etiquetaCounter-1)+\";\");\r\n    traduccion.setTranslate(\"L\"+traduccion.etiquetaCounter+\":\");\r\n    traduccion.setTranslate(\"return;\");\r\n    traduccion.setTranslate(\"}\");\r\n    traduccion.printString = true;\r\n}\r\n\r\nexport function printText(raiz: Entorno) {\r\n    if (traduccion.printString===false) {createPrintText();}\r\n    if (raiz.texto!==\"\") {\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+raiz.SP_VAL+\"];\");\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n        traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\"+(traduccion.t-1)+\";\");\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printString();\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t +\" = stack[(int)S];\");\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n    }\r\n    for (const r of raiz.listaEntornos) {\r\n        printText(r);\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\nthis.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],true);\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n            this.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],true);\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 11:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 12:\r\n\r\n            this.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 13:\r\n\r\n            listaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\n        \r\nbreak;\r\ncase 15: case 17:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column,true);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last: number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n    }\r\n\r\n\r\n\r\n\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xmlReport = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \nbreak;\ncase 2:\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \nbreak;\ncase 3:\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 4:\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 5:\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 6:\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 7:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 8:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 9:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 10:\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 11:\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 12:\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 13:\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 14:\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 15:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 16:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 17:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 18:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 19:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 20:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 21:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 22:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 23:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 24:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 25:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 26:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 27:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 28:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 29:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 30:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 31:\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 32:\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 33:\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 34:\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 35:\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 36:\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 37:\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 38:\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 39:\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 40:\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 41:\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 42:\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\ndefaultActions: {24:[2,14],44:[2,13]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/*skip comments*/\nbreak;\ncase 2:return 4;\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 15;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 5;\nbreak;\ncase 7:return 19;\nbreak;\ncase 8:return 18;\nbreak;\ncase 9:return 6;\nbreak;\ncase 10:return 25;\nbreak;\ncase 11:return 20;\nbreak;\ncase 12:return 21;\nbreak;\ncase 13:return 22;\nbreak;\ncase 14:return 23;\nbreak;\ncase 15:return 24;\nbreak;\ncase 16:return 26;\nbreak;\ncase 17:return 11;\nbreak;\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xmlReport;\nexports.Parser = xmlReport.Parser;\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[5,6],$V3=[1,20],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,23],$Vf=[1,24],$Vg=[5,6,8,10,13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vh=[1,27],$Vi=[5,6,8,10,13,18,27,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vj=[1,48],$Vk=[1,41],$Vl=[1,42],$Vm=[1,43],$Vn=[1,44],$Vo=[1,45],$Vp=[1,46],$Vq=[1,62],$Vr=[1,60],$Vs=[1,61],$Vt=[1,63],$Vu=[1,64],$Vv=[1,65],$Vw=[1,66],$Vx=[1,67],$Vy=[1,68],$Vz=[1,69],$VA=[1,70],$VB=[1,71],$VC=[1,72],$VD=[13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$VE=[18,29,30,31,34,35,36,37,38,39,40,41],$VF=[13,18,29,30,31,32,34,35,36,37,38,39,40,41],$VG=[18,29,34,35,40,41],$VH=[18,29,34,35,36,37,38,39,40,41];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"MULTIPATH\":4,\"EOF\":5,\"|\":6,\"PATH\":7,\"/\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"..\":15,\"text\":16,\"(\":17,\")\":18,\"node\":19,\"child\":20,\"::\":21,\"descendant\":22,\"PREDICADOS\":23,\"@\":24,\"attribute\":25,\"PREDI\":26,\"[\":27,\"EXP\":28,\"]\":29,\"+\":30,\"-\":31,\"div\":32,\"mod\":33,\"=\":34,\"!=\":35,\"<\":36,\"<=\":37,\">\":38,\">=\":39,\"and\":40,\"or\":41,\"VALOR\":42,\"cadena\":43,\"scadena\":44,\"number\":45,\"position\":46,\"last\":47,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"|\",8:\"/\",10:\"//\",12:\"id\",13:\"*\",14:\".\",15:\"..\",16:\"text\",17:\"(\",18:\")\",19:\"node\",20:\"child\",21:\"::\",22:\"descendant\",24:\"@\",25:\"attribute\",27:\"[\",29:\"]\",30:\"+\",31:\"-\",32:\"div\",33:\"mod\",34:\"=\",35:\"!=\",36:\"<\",37:\"<=\",38:\">\",39:\">=\",40:\"and\",41:\"or\",43:\"cadena\",44:\"scadena\",45:\"number\",46:\"position\",47:\"last\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,1],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,2],[11,4],[11,4],[11,4],[11,4],[11,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,4],[11,4],[11,1],[23,2],[23,1],[26,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[42,3],[42,1],[42,1],[42,1],[42,3],[42,3],[42,1],[42,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n                                                    var listaErroresTemp = listaErrores;\r\n                                                    listaErrores = [];\r\n                                                    return {xpath: $$[$0-1],listaErrores:listaErroresTemp}\r\n                                                    \r\nbreak;\r\ncase 2:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 3: case 8: case 35:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 4:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 5:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 6:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 7:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 9:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 10:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 20:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 24:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 25:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 33:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 34:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 36: case 51:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 37:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 38:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 39:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 41:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 42:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 43:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 44:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 45:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 46:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 47:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 48:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 49:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 50:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 52: case 53:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 54:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 55: case 56:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 57:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                 this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 58:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                 this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:$V0,10:$V1},{1:[3]},{5:[1,6],6:[1,7]},o($V2,[2,3]),{2:$V3,9:8,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,9:21,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{1:[2,1]},{7:22,8:$V0,10:$V1},o($V2,[2,4],{8:$Ve,10:$Vf}),o($Vg,[2,8]),o($Vg,[2,9],{23:25,26:26,27:$Vh}),o($Vg,[2,10],{26:26,23:28,27:$Vh}),o($Vg,[2,11]),o($Vg,[2,12]),{17:[1,29]},{17:[1,30]},{21:[1,31]},{21:[1,32]},{12:[1,33],13:[1,34]},{21:[1,35]},o($Vg,[2,33]),o($V2,[2,5],{8:$Ve,10:$Vf}),o($V2,[2,2]),{2:$V3,11:36,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,11:37,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,19],{26:38,27:$Vh}),o($Vi,[2,35]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:39,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($Vg,[2,20],{26:38,27:$Vh}),{18:[1,49]},{18:[1,50]},{12:[1,51],13:[1,52]},{12:[1,53],13:[1,54]},o($Vg,[2,25],{26:26,23:55,27:$Vh}),o($Vg,[2,26],{26:26,23:56,27:$Vh}),{12:[1,57],13:[1,58]},o($Vg,[2,6]),o($Vg,[2,7]),o($Vi,[2,34]),{13:$Vq,29:[1,59],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},o($VD,[2,50]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:73,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($VD,[2,52]),o($VD,[2,53]),o($VD,[2,54]),{17:[1,74]},{17:[1,75]},o($VD,[2,57],{8:$Ve,10:$Vf}),{2:$V3,9:76,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,13]),o($Vg,[2,14]),o($Vg,[2,15],{26:26,23:77,27:$Vh}),o($Vg,[2,16],{26:26,23:78,27:$Vh}),o($Vg,[2,17],{26:26,23:79,27:$Vh}),o($Vg,[2,18],{26:26,23:80,27:$Vh}),o($Vg,[2,29],{26:38,27:$Vh}),o($Vg,[2,30],{26:38,27:$Vh}),o($Vg,[2,27],{26:26,23:81,27:$Vh}),o($Vg,[2,28],{26:26,23:82,27:$Vh}),o($Vi,[2,36]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:83,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:84,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:85,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:86,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:87,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:88,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:89,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:90,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:91,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:92,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:93,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:94,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:95,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{13:$Vq,18:[1,96],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},{18:[1,97]},{18:[1,98]},o($VD,[2,58],{8:$Ve,10:$Vf}),o($Vg,[2,21],{26:38,27:$Vh}),o($Vg,[2,22],{26:38,27:$Vh}),o($Vg,[2,23],{26:38,27:$Vh}),o($Vg,[2,24],{26:38,27:$Vh}),o($Vg,[2,31],{26:38,27:$Vh}),o($Vg,[2,32],{26:38,27:$Vh}),o($VE,[2,37],{13:$Vq,32:$Vt,33:$Vu}),o($VE,[2,38],{13:$Vq,32:$Vt,33:$Vu}),o($VF,[2,39],{33:$Vu}),o($VF,[2,40],{33:$Vu}),o($VD,[2,41]),o($VG,[2,42],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VG,[2,43],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VH,[2,44],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,45],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,46],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,47],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o([18,29,40,41],[2,48],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o([18,29,41],[2,49],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB}),o($VD,[2,51]),o($VD,[2,55]),o($VD,[2,56])],\r\ndefaultActions: {6:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 43;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 44;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 8\r\nbreak;\r\ncase 18:return 15\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 24\r\nbreak;\r\ncase 21:return 27\r\nbreak;\r\ncase 22:return 29\r\nbreak;\r\ncase 23:return 17\r\nbreak;\r\ncase 24:return 18\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 6\r\nbreak;\r\ncase 27:return 30\r\nbreak;\r\ncase 28:return 31\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 32\r\nbreak;\r\ncase 31:return 34\r\nbreak;\r\ncase 32:return 35\r\nbreak;\r\ncase 33:return 37\r\nbreak;\r\ncase 34:return 39\r\nbreak;\r\ncase 35:return 36\r\nbreak;\r\ncase 36:return 38\r\nbreak;\r\ncase 37:return 41\r\nbreak;\r\ncase 38:return 40\r\nbreak;\r\ncase 39:return 33\r\nbreak;\r\ncase 40:return 21\r\nbreak;\r\ncase 41:return 20\r\nbreak;\r\ncase 42:return 25\r\nbreak;\r\ncase 43:return 22\r\nbreak;\r\ncase 44:return 16\r\nbreak;\r\ncase 45:return 47 \r\nbreak;\r\ncase 46:return 46\r\nbreak;\r\ncase 47:return 45\r\nbreak;\r\ncase 48:return 12\r\nbreak;\r\ncase 49:return 5\r\nbreak;\r\ncase 50:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:[\" \"]+)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparser;\r\nexports.Parser = XPATHparser.Parser;\r\nexports.parse = function () { return XPATHparser.parse.apply(XPATHparser, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[],\r\n    public tipoQuery ?: string ){\r\n        \r\n    } \r\n\r\n    public setipoQuery(tipo: string){\r\n        this.tipoQuery = tipo;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionAritmetica,\r\n    public sym: string){}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if((valorIzq.type === tipoPrimitivo.STRING  || valorIzq.type === tipoPrimitivo.NUMBER )&&(valorDer.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.NUMBER)&&(this.tipoOperacion === operacionAritmetica.SUMA)) {\r\n            return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER };\r\n        }\r\n        else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n           \r\n            if(this.tipoOperacion === operacionAritmetica.RESTA){\r\n                return { value: (valorIzq.value - valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.MULT){\r\n                return { value: (valorIzq.value * valorDer.value) , type: tipoPrimitivo.NUMBER };;\r\n            }else if(this.tipoOperacion === operacionAritmetica.DIV){\r\n\r\n                if(Number(valorDer.value) >= 0){\r\n                    return { value: (valorIzq.value / valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: El valor \"+valorDer+\", debe ser mayor o igual que cero,  Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }else if (this.tipoOperacion === operacionAritmetica.MOD){\r\n                return  { value: (valorIzq.value % valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionLogica,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        \r\n        if (valorIzq.type === tipoPrimitivo.BOOL){\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            }\r\n            \r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL){\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \"+valorDer.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorIzq.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso} from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport class Path implements Expression{\r\n\r\n    salida: any[];\r\n    nuevaL_Accesos: Acceso[];\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public L_Accesos : Acceso [],\r\n    public tipoPath ?: string\r\n    ){\r\n        this.salida=[];\r\n        this.nuevaL_Accesos=[];\r\n    }   \r\n\r\n    private validarAntecesores(): Acceso []{\r\n\r\n        let newL_Acc : Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n            \r\n            if (acceso.tipoAcceso === 'padre'){\r\n                \r\n                if (newL_Acc.length >0){\r\n                    newL_Acc.pop()\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \"+acceso.line+\"column: \"+acceso.column);\r\n                }\r\n            }else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    private unirSalida () : string{\r\n\r\n        let salida : string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo) :Retorno { //      /biblio\r\n\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\"){\r\n\r\n            if (this.L_Accesos.length > 0 && ent.listaEntornos.length > 0){\r\n  \r\n                if(ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\"){//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n\r\n                    if (this.validarPredicadosRaiz(ent, 0)){\r\n\r\n                        if(this.L_Accesos.length >  1){ //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(ent, 1); \r\n                        }else{\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                }else if (this.L_Accesos[0].tipoQuery === 'absoluta'){\r\n                    this.getQuery(ent, 0);\r\n                }\r\n            }\r\n        }else {\r\n\r\n            this.salida = [];\r\n            this.getQuery(ent, 0, simboloPadre);\r\n            return {value: this.salida, type: tipoPrimitivo.RESP};\r\n        } \r\n        return {value: this.unirSalida(), type: tipoPrimitivo.STRING};\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number, simboloPadre?:Simbolo) {\r\n        \r\n        if(simboloPadre !== undefined ){ // si la consulta es una sub consulta y el padre es un atributo --> /id[subconsulta]\r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\"|| this.L_Accesos[posActAcceso].tipoQuery ==='text'){\r\n\r\n                if(this.L_Accesos.length < posActAcceso + 1){\r\n                    this.getQuery(entPadre, posActAcceso + 1, simboloPadre);\r\n                }else{\r\n\r\n                    if (this.tipoPath === \"sub\"){\r\n                        this.salida.push({value : simboloPadre.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                    }else {\r\n\r\n                        if(this.L_Accesos[posActAcceso].tipoQuery ==='text'){\r\n                            this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                        }else {\r\n                            this.salida.push(simboloPadre.identificador + \" = \\\"\" + simboloPadre.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n                        }\r\n                    }\r\n                } \r\n            }else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }  \r\n\r\n        }else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\"){\r\n               \r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if(atri != null){\r\n\r\n                    if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)){\r\n                    \r\n                        if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entPadre, posActAcceso + 1, atri); \r\n                        }else{\r\n\r\n                            if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                            }else{\r\n                                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n                    \r\n                    for (const entChiild of entPadre.listaEntornos ) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entChiild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\"){\r\n\r\n                if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1){\r\n                    \r\n                    this.construirTodosAtributos(entPadre);\r\n                    \r\n                } else {\r\n\r\n                    if (entPadre.listaSimbolos.length > 0){\r\n\r\n                        for (const atri of entPadre.listaSimbolos){\r\n    \r\n                            if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)){\r\n                               \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entPadre, posActAcceso + 1, atri); \r\n                                }else{\r\n        \r\n                                    if (this.tipoPath === \"sub\"){\r\n                                        this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                                    }else{\r\n                                        this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso ==='texto' ){\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1){\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery ==='relativa'){\r\n\r\n                        if (entPadre.texto !== ''){\r\n                            this.salida.push(entPadre.texto + '\\n');\r\n                        }\r\n\r\n                    }else {\r\n                        this.construirTodosTextos(entPadre);\r\n                    }\r\n                    \r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto del nodo ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" ){\r\n\r\n                if(this.L_Accesos.length >  posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entPadre, posActAcceso + 1); \r\n                }else{\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\"){\r\n\r\n                if(entPadre.listaEntornos.length > 0){\r\n                    \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        \r\n                        if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)){\r\n                    \r\n                            if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entActual, posActAcceso + 1); \r\n                            }else{\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\"){\r\n                \r\n                if(entPadre.listaEntornos.length > 0){\r\n                      \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n    \r\n                        if(entActual.identificador === this.L_Accesos[posActAcceso].id){//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n                    \r\n                            if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)){\r\n        \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entActual, posActAcceso + 1);\r\n                                }else{\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        }else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n                            this.getQuery(entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \"+this.L_Accesos[posActAcceso].tipoAcceso+\" del acceso: \"+this.L_Accesos[posActAcceso].tipoAcceso+\" no se reconoce como valido, \" + \r\n                \"linea: \"+this.L_Accesos[posActAcceso].line+\" comlumna: \"+this.L_Accesos[posActAcceso].column);\r\n            }   \r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre:Entorno){\r\n        \r\n        if (entPadre.texto !== ''){\r\n            this.salida.push(entPadre.texto + '\\n');\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos (entPadre:Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos){\r\n\r\n            if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n            }else{\r\n                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"\\n\");\r\n            }\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre:Entorno, tab : string){\r\n\r\n        if (this.tipoPath === \"sub\"){\r\n\r\n            if (entPadre.listaEntornos.length > 0 || (entPadre.listaEntornos.length === 0 && entPadre.texto === '')){\r\n                this.salida.push({value : entPadre.identificador , type: tipoPrimitivo.NODO})\r\n            }else {\r\n                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n            }\r\n\r\n        }else {\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n            }\r\n\r\n            //construyo Nodos\r\n            if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if(entPadre.listaEntornos.length > 0){\r\n\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n            \r\n            } else{\r\n                this.salida.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private validarPredicadosAtri(entPadre: Entorno, simboloPadre:Simbolo, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.value.length > 0 && result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.type === tipoPrimitivo.NODO){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n            \r\n        }\r\n        return true;\r\n    } \r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.value.length > 0 && result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.type === tipoPrimitivo.NODO){\r\n                    if (result.value === entActual.identificador){\r\n                        return true;\r\n                    }\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if ( result.value !== 1){\r\n                    return false;\r\n                }\r\n            }else if (result.value === \"\" && result.type === tipoPrimitivo.error){\r\n                return false; \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type !== tipoPrimitivo.NODO && valDer.type !== tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                    else if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }else {\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type !== tipoPrimitivo.NODO){\r\n                    if (this.validar(valIzq, valorDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if (valDer.type !== tipoPrimitivo.NODO){\r\n                    if (this.validar(valorIzq, valDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n            \r\n        }else {\r\n            return { value: this.validar(valorIzq, valorDer), type: tipoPrimitivo.BOOL }\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : Retorno, valorDer: Retorno): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq.value === valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq.value !== valorDer.value;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq.value < valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq.value <= valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq.value > valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq.value >= valorDer.value;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xquerygrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[22,36,40],$V1=[1,8],$V2=[1,9],$V3=[36,40],$V4=[9,12,16,18,30,31,32,33,34,35,39,40,50],$V5=[24,26,36,40],$V6=[1,31],$V7=[1,32],$V8=[1,33],$V9=[1,34],$Va=[1,35],$Vb=[1,36],$Vc=[1,49],$Vd=[15,20,28,29],$Ve=[9,39],$Vf=[39,40],$Vg=[1,77],$Vh=[1,81],$Vi=[1,82],$Vj=[1,86],$Vk=[20,34],$Vl=[21,22,36,40],$Vm=[1,91],$Vn=[1,92],$Vo=[19,20,21,22,36,40],$Vp=[9,56];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"FOR\":4,\"LET\":5,\"WHERE\":6,\"ORDERBY\":7,\"RETURN\":8,\"EOF\":9,\"for\":10,\"RETVAR\":11,\"in\":12,\"doc\":13,\"parea\":14,\"dstring\":15,\"parec\":16,\"PATH\":17,\"at\":18,\"barra\":19,\"id\":20,\"let\":21,\"where\":22,\"WHERE2\":23,\"and\":24,\"WHERE3\":25,\"or\":26,\"COMPARISON\":27,\"number\":28,\"sstring\":29,\"igual\":30,\"diferente\":31,\"menor\":32,\"meigual\":33,\"mayor\":34,\"maigual\":35,\"order\":36,\"by\":37,\"ORDERBY2\":38,\"coma\":39,\"return\":40,\"RETURN2\":41,\"RETURN3\":42,\"IFTHENELSE\":43,\"HTML\":44,\"CONTENIDOHTML\":45,\"LISTAATRIBUTOSHTML\":46,\"ATRIBUTOHTML\":47,\"=\":48,\"corchetea\":49,\"corchetec\":50,\"IF\":51,\"THEN\":52,\"ELSE\":53,\"if\":54,\"then\":55,\"else\":56,\"dolar\":57,\"arroba\":58,\"data\":59,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",9:\"EOF\",10:\"for\",12:\"in\",13:\"doc\",14:\"parea\",15:\"dstring\",16:\"parec\",18:\"at\",19:\"barra\",20:\"id\",21:\"let\",22:\"where\",24:\"and\",26:\"or\",28:\"number\",29:\"sstring\",30:\"igual\",31:\"diferente\",32:\"menor\",33:\"meigual\",34:\"mayor\",35:\"maigual\",36:\"order\",37:\"by\",39:\"coma\",40:\"return\",48:\"=\",49:\"corchetea\",50:\"corchetec\",54:\"if\",55:\"then\",56:\"else\",57:\"dolar\",58:\"arroba\",59:\"data\"},\r\nproductions_: [0,[3,6],[3,1],[4,8],[4,10],[17,2],[17,2],[17,1],[17,1],[5,1],[5,0],[6,2],[6,0],[23,3],[23,3],[23,1],[25,3],[25,3],[25,3],[25,3],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[7,3],[7,0],[38,3],[38,1],[8,2],[41,1],[41,1],[41,1],[42,3],[42,1],[44,8],[44,9],[46,2],[46,1],[47,3],[47,3],[45,3],[43,3],[51,6],[51,6],[52,2],[53,2],[11,4],[11,2],[11,5],[11,4]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 5: case 6:\r\nthis.$ = $$[$0-1]+$$[$0]\r\nbreak;\r\ncase 7: case 8:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 20: case 21: case 22: case 23: case 24: case 25:\r\nthis.$=$$[$0]\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,9:[1,3],10:[1,4]},{1:[3]},o($V0,[2,10],{5:5,21:[1,6]}),{1:[2,2]},{11:7,57:$V1,59:$V2},o($V3,[2,12],{6:10,22:[1,11]}),o($V0,[2,9]),{12:[1,12],18:[1,13]},{20:[1,14]},{14:[1,15]},{7:16,36:[1,17],40:[2,27]},{11:20,23:18,25:19,57:$V1,59:$V2},{13:[1,21]},{11:22,57:$V1,59:$V2},o($V4,[2,49],{19:[1,23]}),{11:24,57:$V1,59:$V2},{8:25,40:[1,26]},{37:[1,27]},o($V3,[2,11],{24:[1,28],26:[1,29]}),o($V5,[2,15]),{27:30,30:$V6,31:$V7,32:$V8,33:$V9,34:$Va,35:$Vb},{14:[1,37]},{12:[1,38]},{20:[1,39],58:[1,40]},{16:[1,41]},{9:[1,42]},{11:47,32:$Vc,41:43,42:44,43:45,44:46,51:48,54:[1,50],57:$V1,59:$V2},{11:52,38:51,57:$V1,59:$V2},{11:20,25:53,57:$V1,59:$V2},{11:20,25:54,57:$V1,59:$V2},{15:[1,58],20:[1,55],28:[1,56],29:[1,57]},o($Vd,[2,20]),o($Vd,[2,21]),o($Vd,[2,22]),o($Vd,[2,23]),o($Vd,[2,24]),o($Vd,[2,25]),{15:[1,59]},{13:[1,60]},o($V4,[2,48]),{20:[1,61]},o($V4,[2,51]),{1:[2,1]},{9:[2,30]},{9:[2,31],39:[1,62]},{9:[2,32]},{9:[2,33]},o($Ve,[2,35]),{52:63,55:[1,64]},{20:[1,65]},{14:[1,66]},{39:[1,67],40:[2,26]},o($Vf,[2,29]),o($V5,[2,13]),o($V5,[2,14]),o($V5,[2,16]),o($V5,[2,17]),o($V5,[2,18]),o($V5,[2,19]),{16:[1,68]},{14:[1,69]},o($V4,[2,50]),{11:70,57:$V1,59:$V2},{53:71,56:[1,72]},{32:$Vc,44:73},{20:$Vg,34:[1,74],46:75,47:76},{11:78,57:$V1,59:$V2},{11:79,57:$V1,59:$V2},{17:80,19:$Vh,20:$Vi},{15:[1,83]},o($Ve,[2,34]),{9:[2,43]},{32:$Vc,44:84},{56:[2,46]},{45:85,49:$Vj},{20:$Vg,34:[1,87],47:88},o($Vk,[2,39]),{48:[1,89]},{27:90,30:$V6,31:$V7,32:$V8,33:$V9,34:$Va,35:$Vb},o($Vf,[2,28]),o($Vl,[2,3],{19:$Vm,20:$Vn}),o($Vo,[2,7]),o($Vo,[2,8]),{16:[1,93]},{9:[2,47]},{32:[1,94]},{11:95,57:$V1,59:$V2},{45:96,49:$Vj},o($Vk,[2,38]),{15:[1,98],29:[1,97]},{15:[1,99],29:[1,100]},o($Vo,[2,5]),o($Vo,[2,6]),{17:101,19:$Vh,20:$Vi},{19:[1,102]},{50:[1,103]},{32:[1,104]},o($Vk,[2,40]),o($Vk,[2,41]),{16:[1,105]},{16:[1,106]},o($Vl,[2,4],{19:$Vm,20:$Vn}),{20:[1,107]},{32:[2,42]},{19:[1,108]},{55:[2,44]},{55:[2,45]},{34:[1,109]},{20:[1,110]},o($Vp,[2,36]),{34:[1,111]},o($Vp,[2,37])],\r\ndefaultActions: {3:[2,2],42:[2,1],43:[2,30],45:[2,32],46:[2,33],71:[2,43],73:[2,46],84:[2,47],103:[2,42],105:[2,44],106:[2,45]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    \r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:return 14;\r\nbreak;\r\ncase 2:return 16;\r\nbreak;\r\ncase 3:return 57;\r\nbreak;\r\ncase 4:return 39;\r\nbreak;\r\ncase 5:return 19;\r\nbreak;\r\ncase 6:return 49;\r\nbreak;\r\ncase 7:return 50;\r\nbreak;\r\ncase 8:return 58;\r\nbreak;\r\ncase 9:return 31;\r\nbreak;\r\ncase 10:return 30;\r\nbreak;\r\ncase 11:return 33;\r\nbreak;\r\ncase 12:return 32;\r\nbreak;\r\ncase 13:return 35;\r\nbreak;\r\ncase 14:return 34;\r\nbreak;\r\ncase 15:return 10;\r\nbreak;\r\ncase 16:return 12;\r\nbreak;\r\ncase 17:return 13;\r\nbreak;\r\ncase 18:return 10;\r\nbreak;\r\ncase 19:return 22;\r\nbreak;\r\ncase 20:return 36;\r\nbreak;\r\ncase 21:return 37;\r\nbreak;\r\ncase 22:return 40;\r\nbreak;\r\ncase 23:return 21;\r\nbreak;\r\ncase 24:return 54;\r\nbreak;\r\ncase 25:return 55;\r\nbreak;\r\ncase 26:return 56;\r\nbreak;\r\ncase 27:return 59;\r\nbreak;\r\ncase 28:return 18;\r\nbreak;\r\ncase 29:return 24;\r\nbreak;\r\ncase 30:return 26;\r\nbreak;\r\ncase 31:return 15;\r\nbreak;\r\ncase 32:return 29;\r\nbreak;\r\ncase 33:return 20;\r\nbreak;\r\ncase 34:return 28;\r\nbreak;\r\ncase 35:return 'random';\r\nbreak;\r\ncase 36:return 9;\r\nbreak;\r\ncase 37:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\$)/i,/^(?:,)/i,/^(?:\\/)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:@)/i,/^(?:<!=)/i,/^(?:=)/i,/^(?:<=)/i,/^(?:<)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:for\\b)/i,/^(?:in\\b)/i,/^(?:doc\\b)/i,/^(?:for\\b)/i,/^(?:where\\b)/i,/^(?:order\\b)/i,/^(?:by\\b)/i,/^(?:return\\b)/i,/^(?:let\\b)/i,/^(?:if\\b)/i,/^(?:then\\b)/i,/^(?:else\\b)/i,/^(?:data\\b)/i,/^(?:at\\b)/i,/^(?:and\\b)/i,/^(?:or\\b)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:[^ ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xquerygrammar;\r\nexports.Parser = xquerygrammar.Parser;\r\nexports.parse = function () { return xquerygrammar.parse.apply(xquerygrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/main\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/tytusx/20211SVAC/G06\">\r\n        <Route path=\"/\" exact component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export class traduccion {\r\n    static t: number = 0;\r\n    static stackCounter: number = 0;\r\n    static etiquetaCounter: number = 0;\r\n    static tranlate: string = \"\";\r\n    static printString: boolean = false;\r\n\r\n\r\n\r\n    public static getTranslate(): string {\r\n        var content: string = \"\";\r\n        content += \"/*----------HEADER----------*/\\n\";\r\n        content += \"#include <stdio.h>\\n\\n\";\r\n        content += \"double heap[30101999];\\n\";\r\n        content += \"double stack[30101999];\\n\\n\";\r\n        content += \"double S;\\n\";\r\n        content += \"double H;\\n\\n\";\r\n        if (this.t > 0) {\r\n            content += \"double \";\r\n            for (let i = 0; i < this.t; i++) {\r\n                content += \"t\" + i.toString();\r\n                if (i < this.t - 1) {\r\n                    content += \", \";\r\n                }\r\n            }\r\n            content += \";\\n\\n\";\r\n        }\r\n        \r\n        content += \"/*--------MAIN---------*/\\n\";\r\n        content += \"void main(){\\n\";\r\n        content += \"S = 0; H = 0;\\n\\n\";\r\n        content += this.tranlate;\r\n        content += \"\\nreturn;\\n\";\r\n        content += \"}\";\r\n        return content;\r\n    }\r\n\r\n    public static setTranslate(content: string) {\r\n        this.tranlate += content + \"\\n\";\r\n    }\r\n}","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    ATRI,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression{\r\n    \r\n    constructor (\r\n    public line : Number, \r\n    public column : Number, \r\n    public valor : any, \r\n    public tipoPrimitivo? : tipoPrimitivo) {}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo) : Retorno {\r\n        \r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING };\r\n        }else if (this.valor === \"position\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.pos, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.pos, type: tipoPrimitivo.NUMBER}\r\n            }\r\n\r\n        }else if (this.valor === \"last\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.last, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.last, type: tipoPrimitivo.NUMBER}\r\n            }\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last : number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n        this.asignarPosEnts();\r\n        this.asignarPosSimb();\r\n    }\r\n    \r\n    private asignarPosEnts(){\r\n        for (let index = 0; index < this.listaEntornos.length; index++) {\r\n            this.listaEntornos[index].last = this.listaEntornos.length\r\n            this.listaEntornos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    private asignarPosSimb(){\r\n        for (let index = 0; index < this.listaSimbolos.length; index++) {\r\n            this.listaSimbolos[index].last = this.listaSimbolos.length;\r\n            this.listaSimbolos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n\r\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { traducirXml } from \"../xmlAST/xml3d\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\n//import { OptimizadorMirilla } from '../Optimizador/OptimizadorMirilla';\r\nimport { traduccion } from '../Traduccion/traduccion';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\nconst parseQuery = require('../Grammar/xQueryGrammar');\r\n//const parseC3D = require('../Grammar/C3DGrammar');\r\n\r\n\r\n\r\nconst utf8 = require('utf8');\r\n\r\nexport default class Main extends Component {\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repErrorXPATH: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: ''\r\n    }\r\n    parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let RepErrorXPATHASC = '';\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n        //XML\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            var buf = new Buffer(\"Hello World\");\r\n            console.log(buf.toString(\"ascii\"));\r\n            console.log(\"---------------------\");\r\n            console.log(buf.toString(\"utf8\"));\r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        //XPATH\r\n        try {\r\n            const querys = parseXPATH.parse(this.state.xpath)\r\n            var querysXpath = querys.xpath;\r\n            console.log(querysXpath);\r\n            var erroresXpath = querys.listaErrores;\r\n            //REPORTE AST y ERRORES PARA XPATH************************************************************\r\n            if (erroresXpath.length === 0) {\r\n                for (const key in querysXpath) {\r\n                    texto = querysXpath[key].GraficarAST(texto);\r\n                    if (indice < querysXpath.length) {\r\n                        texto += \"nodo\" + key.toString() + \"[label=\\\"|\\\"];\\n\"\r\n                        texto += \"nodo\" + querysXpath[key].line.toString() + \"_\" + querysXpath[key].column.toString() + \"->nodo\" + key.toString() + \";\\n\";\r\n                        texto += \"nodo\" + key.toString() + \"->nodo\" + querysXpath[indice].line.toString() + \"_\" + querysXpath[indice].column.toString() + \";\\n\";\r\n                        indice++;\r\n                    }\r\n                }\r\n                this.setState({\r\n                    repAstXpath: \"digraph G {\" + texto + \"}\",\r\n                });\r\n            } else {\r\n                console.log(erroresXpath.length)\r\n                this.setState({\r\n                    repErrorXPATH: \"digraph G {\" + crearTextoReporteErrorXML(erroresXpath, RepErrorXPATHASC) + \"}\"\r\n                })\r\n            }\r\n\r\n\r\n            console.log(texto);\r\n\r\n            this.setState({\r\n                repAstXpath: \"digraph G {\" + texto + \"}\",\r\n            });\r\n\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querysXpath) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            if (encoding === \"UTF-8\") {\r\n                this.setState({\r\n                    consoleResult: utf8.encode(salida),\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    consoleResult: salida,\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    traducir = () => {\r\n        if (this.state.xml===\"\") {\r\n            return;\r\n        }\r\n        const result = parser.parse(this.state.xml)\r\n        var ast = result.ast;\r\n        traducirXml(ast);\r\n        console.log(traduccion.getTranslate());\r\n        console.log(ast);\r\n    }\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    handleFileChangeXpath = file => {\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXPATH\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Insert your commands here\"\r\n                                value={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.traducir}>Traducir</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parse}>RUN ASC</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <br />\r\n                    <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                        this.setState({\r\n                            xml: e.target.value\r\n                        })\r\n                    }} />\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST XPath</option>\r\n                            <option>Reporte de errores XPath</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={6} value={this.state.consoleResult} readOnly />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}