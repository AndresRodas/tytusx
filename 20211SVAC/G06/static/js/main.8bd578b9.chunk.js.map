{"version":3,"sources":["Traduccion/traduccion.tsx","xqueryAST/ExpresionesXpath/Primitivo.tsx","xpathAST/Expresiones/Primitivo.tsx","xqueryAST/manejadores/ManejadorXquery.tsx","xmlAST/ClaseError.tsx","Reportes/NodoCST.tsx","xqueryAST/AmbientesXquery/EntornoXQuery.tsx","xmlAST/Entorno.tsx","Optimizador/Asignacion.tsx","Optimizador/Condicional.tsx","Grammar/xmlGrammar.js","xmlAST/Simbolo.tsx","Reportes/xmlReport.js","Grammar/XPATHparser.js","xpathAST/Expresiones/Acceso.tsx","xpathAST/Expresiones/Aritmetico.tsx","xpathAST/Expresiones/Logica.tsx","xpathAST/Expresiones/Path.tsx","xpathAST/Expresiones/Relacional.tsx","Grammar/xQueryGrammar.js","xqueryAST/ExpresionesXpath/Acceso.tsx","xqueryAST/ExpresionesXpath/Aritmetico.tsx","xqueryAST/ExpresionesXpath/Logica.tsx","xqueryAST/ExpresionesXpath/Path.tsx","xqueryAST/ExpresionesXpath/Relacional.tsx","xqueryAST/ExpresionesXquery/For.tsx","xqueryAST/ExpresionesXquery/If.tsx","xqueryAST/ExpresionesXquery/Let.tsx","xqueryAST/ExpresionesXquery/MultiXpaths.tsx","xqueryAST/ExpresionesXquery/Return.tsx","xqueryAST/ExpresionesXquery/XqueryPath.tsx","Grammar/C3DGrammar.js","Reportes/SimboloTabla.tsx","Traduccion/xml3d.tsx","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx","Optimizador/OptimizadorMirilla.tsx","Optimizador/Optimizado.tsx"],"names":["traduccion","content","this","t","i","toString","printString","metodoConsultaXPATH","compararCadenas3d","etiquetaTexto","etiquetaApertura","etiquetaCierre","etiquetaUnitaria","verificarAtributo","etiquetaAtributo","tranlate","etiquetaCounter","stackCounter","tipoPrimitivo","Primitivo","line","column","valor","entXquery","ent","simboloPadre","NUMBER","value","Number","type","STRING","String","undefined","pos","last","Error","texto","setTranslate","SP","length","charCodeAt","ManejadorXquery","salida","salidaTexto","listNodes","element","NODO","concatenar","construirNodos","push","unirSalida","entPadre","tab","atributos","listaSimbolos","atri","identificador","replaceAll","listaEntornos","entActual","resp","ClaseError","tipo","error","linea","columna","crearTextoReporteErrorXML","listaErr","key","nuevo","NodoCST","nombre","indice","listaNodos","Nombre","lista","crearTextoGraphvizCST","padre","crearTextoGraphvizRepGram","producciones","reglas","EntornoXQuery","anterior","nombreEntXquery","variables","Map","id","set","has","nvoValor","Array","from","entries","entry","Entorno","listaE","SP_ID","SP_VAL","asignarPosEnts","asignarPosSimb","index","idAtrubito","Simbolo","Asignacion","operador1","signo","operador2","Condicional","operando1","comparacion","operando2","xmlGrammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","parser","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","listaErrores","ast","encoding","$","first_line","first_column","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","loc","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","console","log","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","txtGramProdAux","txtGramRegSemAux","ReporteGramatical","ReporteCST","44","XPATHparser","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","29","30","31","32","33","34","35","36","37","38","39","40","41","43","45","46","47","xpath","tipoQuery","Path","Acceso","Aritmetico","operacionAritmetica","SUMA","RESTA","MULT","DIV","MOD","Relacional","operacionRelacional","IGUAL","DIFERENCIACION","MENOR","MENORIGUAL","MAYOR","MAYORIGUAL","Logica","operacionLogica","AND","OR","28","42","tmp","tipoAcceso","predicados","SP_id","SP_tipoAcceso","GraficarAST","hijoIzq","hijoDer","tipoOperacion","sym","valorIzq","execute","valorDer","RESP","BOOL","result","L_Accesos","tipoPath","nuevaL_Accesos","newL_Acc","acceso","insertarConsulta","validarAntecesores","getQuery","metodoCompararCadenas","validarPredicadosRaiz","posActAcceso","metodoVerificarAtributo","getAtributo","validarPredicadosAtri","crearAtributoEtiqueta","entChiild","construirTodosAtributos","crearPrintString","construirTodosTextos","validarPredicadosNodos","crearEtiquetaApertura","crearEtiquetaCierre","crearEtiquetaTexto","valIzq","valDer","validar","xQueryGrammar","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","48","49","50","51","52","53","54","55","56","57","59","60","62","64","65","68","69","70","71","72","73","74","76","78","80","82","83","MultiXpaths","For","Let","Return","If","XqueryPath","66","67","58","75","77","79","81","61","63","executeXquery","entChild","idIn","idAt","select","where","orderBy","orden","ret","entAct","RaizXML","nvoEnt","guaradarVar","validarWhere","condicion","exp","elseif","idVar","existeVar","paths","path","buildXquery","L_Exps","resultExp","accesos","varFind","getVar","c3dgrammar","textoaux","Optim","GenerarGraphviz","textrep","textGraphviz","Reset","Optimizado","TextGraphviz","Optimizar","90","151","OptimizadorMirilla","SimboloTabla","ambito","re","re2","re3","newstr","crearTablaSimbolos","resultado","entorno","crearTextoGraphvizTablaSimbolos","traducirXml","traducirXmlRecursive","simbolo","parserReport","parseXPATH","parseXQuery","parseC3D","Main","consoleResult","xml","xquery","repcsttxt","repgramtxt","repErrorXML","repErrorXPATH","repTablaSimbolos","repAstXpath","graphvizContent","repOptimizaciones","entornoGlobal","xmlResRep","setState","alert","querys","querysXpath","erroresXpath","erroresSemanticos","query","getTranslate","traducir","respuesta","astXquery","nvoEntorno","optimizar","optimizado","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","Form","Control","placeholder","Row","Col","xs","md","Button","variant","as","rows","Group","name","size","Graphviz","dot","height","width","zoom","Component","App","basename","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","asigact","regla","original","val1","val2","Resultado","ReporteCodigo","NuevoVal","Objeto","Regla6_7_8_9","Regla10_11_12_13","Regla14","Regla15","Regla16","Regla1","Regla3","isNaN"],"mappings":"2JAAaA,EAAb,iGAiBI,WACI,IAAIC,EAAkB,GAOtB,GANAA,GAAW,6BACXA,GAAW,yBACXA,GAAW,2BACXA,GAAW,8BACXA,GAAW,cACXA,GAAW,gBACPC,KAAKC,EAAI,EAAG,CACZF,GAAW,UACX,IAAK,IAAIG,EAAI,EAAGA,EAAIF,KAAKC,EAAE,EAAGC,IAC1BH,GAAW,IAAMG,EAAEC,WACfD,EAAIF,KAAKC,IACTF,GAAW,MAGnBA,GAAW,QAmBf,OAhBAA,GAAWC,KAAKI,YAChBL,GAAWC,KAAKK,oBAChBN,GAAWC,KAAKM,kBAChBP,GAAWC,KAAKO,cAChBR,GAAWC,KAAKQ,iBAChBT,GAAWC,KAAKS,eAChBV,GAAWC,KAAKU,iBAChBX,GAAWC,KAAKW,kBAChBZ,GAAWC,KAAKY,iBAChBb,GAAW,kCACXA,GAAW,iBACXA,GAAW,oBACXA,GAAWC,KAAKa,SAChBd,GAAW,UACXA,GAAW,cACXA,GAAW,MAnDnB,0BAuDI,SAA2BA,GACvBC,KAAKa,UAAYd,EAAU,OAxDnC,8BA+DI,SAA+BA,GAC3BC,KAAKK,qBAAuBN,EAAU,OAhE9C,mCAoEI,WACIC,KAAKM,mBAAqB,gDAC1BN,KAAKM,mBAAqB,6BAC1BR,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAE,cAC3CH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAChFH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAE,QAAQH,EAAWG,EAAE,GAAG,UACnEH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAChFH,EAAWgB,kBACXd,KAAKM,mBAAqB,IAAIR,EAAWgB,gBAAgB,MACzDhB,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWG,IACXD,KAAKM,mBAAqB,IAAIR,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWG,IACXH,EAAWgB,kBACXd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,eAAeH,EAAWgB,gBAAgB,MAC5Fd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,eAAeH,EAAWgB,gBAAgB,MAC5Fd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,OAAOH,EAAWG,EAAE,GAAG,WAAWH,EAAWgB,gBAAgB,MAC/Gd,KAAKM,mBAAqB,KAAKR,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACvED,KAAKM,mBAAqB,KAAKR,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACvED,KAAKM,mBAAqB,UAAUR,EAAWgB,gBAAgB,GAAG,MAClEd,KAAKM,mBAAqB,IAAIR,EAAWgB,gBAAgB,MACzDhB,EAAWgB,kBACXd,KAAKM,mBAAqB,QAAQR,EAAWG,EAAE,GAAG,OAAOH,EAAWG,EAAE,GAAG,WAAWH,EAAWgB,gBAAgB,MAC/Gd,KAAKM,mBAAqB,gBAAgBR,EAAWG,EAAE,GAAG,WAC1DH,EAAWgB,kBACXd,KAAKM,mBAAqB,SAAUR,EAAWgB,gBAAiB,MAChEhB,EAAWgB,kBACXd,KAAKM,mBAAqB,KAAKR,EAAWgB,gBAAgB,GAAG,MAC7Dd,KAAKM,mBAAqB,gBAAgBR,EAAWG,EAAE,GAAG,WAC1DD,KAAKM,mBAAqB,KAAKR,EAAWgB,gBAAgB,GAAG,MAC7Dd,KAAKM,mBAAqB,YAC1BN,KAAKM,mBAAqB,UAxGlC,gCA6GI,WACIN,KAAKO,eAAiB,8CACtBP,KAAKO,eAAiB,gCAEtBT,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAE,cACvCH,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAC5EH,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAE,QAAQH,EAAWG,EAAE,GAAG,UAC/DH,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAE5ED,KAAKO,eAAiB,IAAIT,EAAWgB,gBAAgB,MACrDhB,EAAWG,IACXD,KAAKO,eAAiB,IAAIT,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC3EH,EAAWgB,kBACXd,KAAKO,eAAiB,OAAQT,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MACtFd,KAAKO,eAAiB,uBAAyBT,EAAWG,EAAE,OAC5DD,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACnED,KAAKO,eAAiB,UAAUT,EAAWgB,gBAAgB,GAAG,MAE9Dd,KAAKO,eAAiB,IAAKT,EAAWgB,gBAAiB,MACvDd,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAG,cAC3CD,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAK,mBAAmBH,EAAWG,EAAE,GAAG,OAEhFH,EAAWgB,kBACXd,KAAKO,eAAiB,IAAKT,EAAWgB,gBAAiB,MACvDd,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAK,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWgB,kBACXd,KAAKO,eAAiB,QAAQT,EAAWG,EAAE,GAAG,eAAeH,EAAWgB,gBAAgB,MACxFd,KAAKO,eAAiB,wBAA0BT,EAAWG,EAAE,GAAG,OAChED,KAAKO,eAAiB,KAAKT,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACnED,KAAKO,eAAiB,UAAUT,EAAWgB,gBAAgB,GAAG,MAE9Dd,KAAKO,eAAiB,IAAKT,EAAWgB,gBAAiB,MACvDd,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,4BACtBP,KAAKO,eAAiB,YACtBP,KAAKO,eAAiB,UAtJ9B,mCA0JI,WACIP,KAAKQ,kBAAoB,iDACzBR,KAAKQ,kBAAoB,mCACzBV,EAAWG,IACXD,KAAKQ,kBAAoB,IAAIV,EAAWG,EAAE,cAC1CH,EAAWG,IACXD,KAAKQ,kBAAoB,IAAIV,EAAWG,EAAE,mBAAmBH,EAAWG,EAAE,GAAG,OAC7ED,KAAKQ,kBAAoB,oCACzBR,KAAKc,kBACLd,KAAKQ,kBAAoB,IAAIR,KAAKc,gBAAgB,MAClDhB,EAAWG,IACXD,KAAKQ,kBAAoB,IAAIV,EAAWG,EAAE,kBAAkBH,EAAWG,EAAE,GAAG,OAC5ED,KAAKc,kBACLd,KAAKQ,kBAAoB,OAAOV,EAAWG,EAAE,eAAeD,KAAKc,gBAAgB,MACjFd,KAAKQ,kBAAoB,uBAA0BV,EAAWG,EAAG,OACjED,KAAKQ,kBAAoB,KAAKV,EAAWG,EAAE,GAAG,QAAUH,EAAWG,EAAE,GAAK,UAC1ED,KAAKQ,kBAAoB,UAAUR,KAAKc,gBAAgB,GAAG,MAC3Dd,KAAKQ,kBAAoB,IAAIR,KAAKc,gBAAgB,MAClDd,KAAKQ,kBAAoB,mBA5KjC,iCAgLI,WACIR,KAAKS,gBAAkB,+CACvBT,KAAKS,gBAAkB,iCACvBX,EAAWG,IACXD,KAAKS,gBAAkB,IAAIX,EAAWG,EAAE,cACxCH,EAAWG,IACXD,KAAKS,gBAAkB,IAAIX,EAAWG,EAAE,mBAAmBH,EAAWG,EAAE,GAAG,OAC3ED,KAAKS,gBAAkB,oCACvBT,KAAKS,gBAAkB,oCACvBT,KAAKc,kBACLd,KAAKS,gBAAkB,IAAIT,KAAKc,gBAAgB,MAChDhB,EAAWG,IACXD,KAAKS,gBAAkB,IAAIX,EAAWG,EAAE,kBAAkBH,EAAWG,EAAE,GAAG,OAC1ED,KAAKc,kBACLd,KAAKS,gBAAkB,OAAOX,EAAWG,EAAE,eAAeD,KAAKc,gBAAgB,MAC/Ed,KAAKS,gBAAkB,uBAA0BX,EAAWG,EAAG,OAC/DD,KAAKS,gBAAkB,KAAKX,EAAWG,EAAE,GAAG,QAAUH,EAAWG,EAAE,GAAK,UACxED,KAAKS,gBAAkB,UAAUT,KAAKc,gBAAgB,GAAG,MACzDd,KAAKS,gBAAkB,IAAIT,KAAKc,gBAAgB,MAChDd,KAAKS,gBAAkB,oCACvBT,KAAKS,gBAAkB,iDACvBT,KAAKS,gBAAkB,mBArM/B,mCAwMI,WACIT,KAAKY,kBAAoB,8CACzBZ,KAAKY,kBAAoB,mCAEzBd,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAE,cAC1CH,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWG,IACXD,KAAKY,kBAAmB,IAAId,EAAWG,EAAE,QAAQH,EAAWG,EAAE,GAAG,UACjEH,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAE/ED,KAAKY,kBAAoB,wCAEzBd,EAAWgB,kBACXd,KAAKY,kBAAoB,IAAId,EAAWgB,gBAAgB,MACxDhB,EAAWG,IAEXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC9EH,EAAWgB,kBACXd,KAAKY,kBAAoB,OAAQd,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MACzFd,KAAKY,kBAAoB,uBAAyBd,EAAWG,EAAE,OAC/DD,KAAKY,kBAAoB,KAAKd,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACtED,KAAKY,kBAAoB,UAAUd,EAAWgB,gBAAgB,GAAG,MAEjEd,KAAKY,kBAAoB,IAAKd,EAAWgB,gBAAiB,MAC1Dd,KAAKY,kBAAoB,oCACzBZ,KAAKY,kBAAoB,oCACzBd,EAAWgB,kBACXd,KAAKY,kBAAoB,SAAUd,EAAWgB,gBAAiB,MAE/Dd,KAAKY,kBAAoB,IAAId,EAAWgB,gBAAgB,MACxDhB,EAAWG,IACXD,KAAKY,kBAAoB,IAAId,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC9EH,EAAWgB,kBACXd,KAAKY,kBAAoB,OAAQd,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MACzFd,KAAKY,kBAAoB,uBAAyBd,EAAWG,EAAE,OAC/DD,KAAKY,kBAAoB,KAAKd,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,UACtED,KAAKY,kBAAoB,UAAUd,EAAWgB,gBAAgB,GAAG,MAEjEd,KAAKY,kBAAoB,IAAKd,EAAWgB,gBAAiB,MAC1Dd,KAAKY,kBAAoB,oCACzBZ,KAAKY,kBAAoB,mBAnPjC,qCAsPI,WACIZ,KAAKW,mBAAqB,kDAC1BX,KAAKW,mBAAqB,+BAC1Bb,EAAWG,IACXD,KAAKW,mBAAqB,IAAIb,EAAWG,EAAE,cAC3CH,EAAWG,IACXD,KAAKW,mBAAqB,IAAIb,EAAWG,EAAI,mBAAmBH,EAAWG,EAAE,GAAG,OAChFH,EAAWgB,kBACXd,KAAKW,mBAAqB,IAAIb,EAAWgB,gBAAgB,MACzDhB,EAAWG,IACXD,KAAKW,mBAAqB,IAAIb,EAAWG,EAAI,kBAAkBH,EAAWG,EAAE,GAAG,OAC/EH,EAAWgB,kBACXd,KAAKW,mBAAqB,OAAQb,EAAWG,EAAG,eAAeH,EAAWgB,gBAAgB,MAC1Fd,KAAKW,mBAAqB,gBAAgBb,EAAWG,EAAE,GAAG,WAC1DH,EAAWgB,kBACXd,KAAKW,mBAAqB,SAAUb,EAAWgB,gBAAiB,MAChEd,KAAKW,mBAAqB,KAAKb,EAAWgB,gBAAgB,GAAG,MAC7Dd,KAAKW,mBAAqB,gBAAgBb,EAAWG,EAAE,GAAG,WAC1DD,KAAKW,mBAAqB,IAAKb,EAAWgB,gBAAiB,MAC3Dd,KAAKW,mBAAqB,YAC1BX,KAAKW,mBAAqB,UA1QlC,8BA6QI,WACIb,EAAWM,aAAe,2CAC1BN,EAAWM,aAAe,yBAC1BN,EAAWG,IACXH,EAAWM,aAAe,IAAIN,EAAWG,EAAE,YAC3CH,EAAWG,IACXH,EAAWM,aAAe,IAAIN,EAAWG,EAAE,mBAAmBH,EAAWG,EAAE,GAAGE,WAAW,OACzFL,EAAWgB,kBACXhB,EAAWG,IACXH,EAAWM,aAAe,IAAIN,EAAWgB,gBAAgB,MACzDhB,EAAWM,aAAe,IAAIN,EAAWG,EAAE,kBAAkBH,EAAWG,EAAE,GAAG,OAC7EH,EAAWgB,kBACXhB,EAAWM,aAAe,OAAON,EAAWG,EAAE,iBAAiBH,EAAWgB,gBAAgB,MAC1FhB,EAAWM,aAAe,uBAAyBN,EAAWG,EAAE,OAChEH,EAAWM,aAAe,KAAKN,EAAWG,EAAE,GAAG,QAAQH,EAAWG,EAAE,GAAG,QACvEH,EAAWM,aAAe,UAAUN,EAAWgB,gBAAgB,GAAG,MAClEhB,EAAWM,aAAe,IAAIN,EAAWgB,gBAAgB,MACzDhB,EAAWM,aAAe,YAC1BN,EAAWM,aAAe,YA/RlC,KAAaN,EACFG,GAAa,EADXH,EAEFiB,cAAwB,EAFtBjB,EAGFgB,gBAA0B,EAHxBhB,EAIFe,SAAmB,GAJjBf,EAOFO,oBAA6B,GAP3BP,EAQFQ,kBAAyB,GARvBR,EASFS,cAAqB,GATnBT,EAUFU,iBAAwB,GAVtBV,EAWFW,eAAsB,GAXpBX,EAYFY,iBAAwB,GAZtBZ,EAaFc,iBAAwB,GAbtBd,EAcFa,kBAAyB,GAdvBb,EAeFM,YAAmB,I,mICTlBY,E,yBAAAA,O,mBAAAA,I,mBAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,kBAAAA,M,KASL,IAAMC,EAAb,WAEI,WACOC,EACAC,EACAC,EACAJ,GAAiC,yBAHjCE,OAGgC,KAFhCC,SAEgC,KADhCC,QACgC,KAAhCJ,gBANX,iDASI,SAAqBK,EAA0BC,EAAcC,GAEzD,GAAIvB,KAAKgB,gBAAkBA,EAAcQ,OACrC,MAAO,CAAEC,MAAOC,OAAO1B,KAAKoB,OAAQO,KAAMX,EAAcQ,QACtD,GAAIxB,KAAKgB,gBAAkBA,EAAcY,OAC3C,MAAO,CAAEH,MAAOI,OAAO7B,KAAKoB,OAAQO,KAAMX,EAAcY,QACtD,GAAmB,aAAf5B,KAAKoB,MAEX,YAAqBU,IAAjBP,EACO,CAACE,MAAOF,EAAaQ,IAAKJ,KAAMX,EAAcQ,QAE9C,CAACC,MAAOH,EAAIS,IAAKJ,KAAMX,EAAcQ,QAG9C,GAAmB,SAAfxB,KAAKoB,MAEX,YAAqBU,IAAjBP,EACO,CAACE,MAAOF,EAAaS,KAAML,KAAMX,EAAcQ,QAE/C,CAACC,MAAOH,EAAIU,KAAML,KAAMX,EAAcQ,QAIjD,MAAM,IAAIS,MAAM,oDAAoDjC,KAAKkB,KAAK,WAAWlB,KAAKmB,UAhC1G,yBAoCI,SAAmBe,GAEf,OADAA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKoB,MAAMjB,WAAa,YArCtH,M,mICTYa,E,gCAAAA,O,mBAAAA,I,mBAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,kBAAAA,M,KAUL,IAAMC,EAAb,WAEI,WACWC,EACAC,EACAC,EACAJ,GAAgC,yBAHhCE,OAG+B,KAF/BC,SAE+B,KAD/BC,QAC+B,KAA/BJ,gBANf,2CAQI,SAAeM,EAAcC,GAEzB,GAAIvB,KAAKgB,gBAAkBA,EAAcQ,OAMrC,OAJA1B,IAAWqC,aAAa,mDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,OAASuB,OAAO1B,KAAKoB,OAAS,KAE/F,CAAEK,MAAOC,OAAO1B,KAAKoB,OAAQO,KAAMX,EAAcQ,OAAQY,GAAItC,IAAWiB,cAC5E,GAAIf,KAAKgB,gBAAkBA,EAAcY,OAAQ,CAGpD9B,IAAWqC,aAAa,qDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAnC,UAExB,IAAK,IAAID,EAAI,EAAGA,EAAI2B,OAAO7B,KAAKoB,OAAOiB,OAAQnC,IAC3CJ,IAAWqC,aAAa,kBAAoBN,OAAO7B,KAAKoB,OAAOkB,WAAWpC,GAAlD,mBAAiF2B,OAAO7B,KAAKoB,OAAOlB,GAAGC,YAC/HL,IAAWqC,aAAa,cACpBjC,EAAI,IAAM2B,OAAO7B,KAAKoB,OAAOiB,SAC7BvC,IAAWqC,aAAa,yCACxBrC,IAAWqC,aAAa,eAMhC,MAAO,CAAEV,MAAOI,OAAO7B,KAAKoB,OAAQO,KAAMX,EAAcY,OAAQQ,GAAItC,IAAWiB,cAC5E,GAAmB,aAAff,KAAKoB,MAEZ,YAAqBU,IAAjBP,GAEAzB,IAAWqC,aAAa,qDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,OAASuB,OAAOH,EAAaQ,KAAO,KAErG,CAAEN,MAAOF,EAAaQ,IAAKJ,KAAMX,EAAcQ,OAAQY,GAAItC,IAAWiB,gBAG7EjB,IAAWqC,aAAa,qDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,OAASuB,OAAOJ,EAAIS,KAAO,KAE5F,CAAEN,MAAOH,EAAIS,IAAKJ,KAAMX,EAAcQ,OAAQY,GAAItC,IAAWiB,eAGrE,GAAmB,SAAff,KAAKoB,MAEZ,YAAqBU,IAAjBP,GAEAzB,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,OAASuB,OAAOH,EAAaS,MAAQ,KAEtG,CAAEP,MAAOF,EAAaS,KAAML,KAAMX,EAAcQ,OAAQY,GAAItC,IAAWiB,gBAG9EjB,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,OAASuB,OAAOJ,EAAIU,MAAQ,KAE7F,CAAEP,MAAOH,EAAIU,KAAML,KAAMX,EAAcQ,OAAQY,GAAItC,IAAWiB,eAIzE,MAAM,IAAIkB,MAAM,oDAAsDjC,KAAKkB,KAAO,WAAalB,KAAKmB,UAzEhH,yBA6EI,SAAmBe,GAEf,OADAA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKoB,MAAMjB,WAAa,YA9EtH,M,oHCZaoC,EAAb,+FAEI,SAAmBC,GAEf,IAF0C,EAEtCC,EAAuB,GAFe,cAGpBD,GAHoB,IAG1C,2BAA8B,CAC1BC,GAD0B,SAHY,8BAM1C,OAAOA,IARf,yBAWI,SAAoBC,GAEhB,IAF8C,EAE1C3C,EAAsB,GAFoB,cAGxB2C,GAHwB,IAG9C,2BAAiC,CAAC,IAAvBC,EAAsB,QAEzBA,EAAQhB,OAASX,gBAAc4B,KAC/BL,EAAgBM,WAAW9C,EAASC,KAAK8C,eAAeH,EAAQlB,MAAO,KAEvE1B,EAAQgD,KAAKJ,EAAQlB,MAAO,OARU,8BAW9C,OAAOzB,KAAKgD,WAAWjD,KAtB/B,4BAyBI,SAAsBkD,EAAmBC,GAErC,IAF8D,EAE1DC,EAAY,GACZpD,EAAqB,GAHqC,cAK3CkD,EAASG,eALkC,IAK9D,2BAA2C,CAAC,IAAjCC,EAAgC,QACvCF,GAAYE,EAAKC,cAAgB,OAAUD,EAAKjC,MAAMmC,WAAW,IAAK,IAAM,OANlB,8BAU9D,GAAqC,IAAlCN,EAASO,cAAcnB,QAAmC,KAAnBY,EAASf,MAC/CnC,EAAQgD,KAAKG,EAAK,IAAMD,EAASK,cAAgB,IAAMH,EAAY,aAElE,GAAGF,EAASO,cAAcnB,OAAS,EAAE,CAEtCtC,EAAQgD,KAAKG,EAAK,IAAMD,EAASK,cAAgB,IAAMH,EAAY,OAF7B,oBAGdF,EAASO,eAHK,IAGtC,2BAAgD,CAAC,IAAtCC,EAAqC,QAC5ClB,EAAgBM,WAAW9C,EAASC,KAAK8C,eAAeW,EAAWP,EAAM,SAJvC,8BAMtCnD,EAAQgD,KAAKG,EAAK,KAAOD,EAASK,cAAgB,YAGlDvD,EAAQgD,KAAKG,EAAK,IAAKD,EAASK,cAAe,IAAKH,EAAU,IAAIF,EAASf,MAAM,KAAKe,EAASK,cAAc,OAEjH,OAAOvD,IAjDf,wBAoDI,SAAmBA,EAAiB2D,GAAc,IAAD,gBAEvBA,GAFuB,IAE7C,2BAA4B,CAAC,IAAlBf,EAAiB,QACxB5C,EAAQgD,KAAKJ,IAH4B,mCApDrD,M,qKCJagB,EAMT,WAAYC,EAAaC,EAAcC,EAAcC,GAAgB,yBALrEH,UAKoE,OAJpEC,WAIoE,OAHpEC,WAGoE,OAFpEC,aAEoE,EAChE/D,KAAK4D,KAAOA,EACZ5D,KAAK6D,MAAQA,EACb7D,KAAK8D,MAAQA,EACb9D,KAAK+D,QAAUA,GAKhB,SAASC,EAA0BC,EAA2B/B,GAEjE,IAAK,IAAMgC,KADXhC,GAAS,kCACS+B,EACd/B,GAAS,IAAM+B,EAASC,GAAKN,KAGjC,IAAK,IAAMM,KADXhC,GAAS,WACS+B,EACd/B,GAAS,IAAM+B,EAASC,GAAKJ,MAGjC,IAAK,IAAMI,KADXhC,GAAS,aACS+B,EACd/B,GAAS,IAAM+B,EAASC,GAAKH,QAGjC,IAAK,IAAMG,KADXhC,GAAS,iBACS+B,EACd/B,GAAS,IAAM+B,EAASC,GAAKL,MAIjC,OADA3B,GAAS,S,mNCjCTiC,E,eAISC,EAAb,WAKI,WAAYC,EAAcC,EAAcC,GAA2B,yBAJnEF,YAIkE,OAHlEC,YAGkE,OAFlEC,gBAEkE,EAC9DvE,KAAKqE,OAAOA,EACZrE,KAAKsE,OAAOA,EACZtE,KAAKuE,WAAWA,EARxB,6CAWI,SAAUC,EAAcF,EAAcG,GAClCN,EAAQ,IAAIC,EAAQI,EAAOF,EAAOG,GAClCzE,KAAKuE,WAAWxB,KAAKoB,OAb7B,KAkBO,SAASO,EAAsBC,EAAczC,GAEhD,GADAA,GAAS,OAASyC,EAAML,OAAOnE,WAAa,WAAcwE,EAAMN,OAAS,QACrEM,EAAMJ,WAAWlC,OAAS,EAC1B,IAAK,IAAM6B,KAAOS,EAAMJ,WACpBrC,GAAS,OAASyC,EAAMJ,WAAWL,GAAKI,OAAOnE,WAAa,WAAcwE,EAAMJ,WAAWL,GAAKG,OAAS,QACzGnC,GAAS,OAASyC,EAAML,OAAOnE,WAAtB,SAAmDwE,EAAMJ,WAAWL,GAAKI,OAAOnE,WAAa,MAClGwE,EAAMJ,WAAWL,GAAKK,WAAWlC,OAAS,IAE1CH,EAAQwC,EAAsBC,EAAMJ,WAAWL,GAAKhC,IAIhE,OAAOA,EAGJ,SAAS0C,EAA0BC,EAA2BC,EAAqB5C,GAEtF,IAAK,IAAMgC,KADXhC,GAAS,wCACS2C,EACd3C,GAAS,IAAM2C,EAAaX,GAGhC,IAAK,IAAMA,KADXhC,GAAS,qBACS4C,EACd5C,GAAS,IAAM4C,EAAOZ,GAG1B,OADAhC,GAAS,S,kFC5CA6C,EAAb,WAKI,WACWC,EACAC,GAAyB,yBADzBD,WACwB,KAAxBC,kBAAwB,KAL3BC,eAK2B,EAC/BlF,KAAKkF,UAAY,IAAIC,IAR7B,+CAWI,SAAmBC,EAAYhE,GAC3BpB,KAAKkF,UAAUG,IAAID,EAAIhE,KAZ/B,uBAeI,SAAkBgE,GACd,OAAOpF,KAAKkF,UAAUI,IAAIF,KAhBlC,2BAmBI,SAAqBA,EAAaG,GAE9B,cAAkBC,MAAMC,KAAKzF,KAAKkF,UAAUQ,WAA5C,eAAwD,CAAnD,IAAIC,EAAK,KACAA,EAAM,KACJP,IACRO,EAAM,GAAKJ,MAxB3B,oBA6BI,SAAcH,GAEV,cAAkBI,MAAMC,KAAKzF,KAAKkF,UAAUQ,WAA5C,eAAwD,CAAnD,IAAIC,EAAK,KAEV,GADUA,EAAM,KACJP,EACR,OAAOO,EAAM,GAGrB,OAAO,OArCf,wBAwCI,WAEI,IAAInD,EAAkB,GAEtBA,GAAU,aAAexC,KAAKiF,gBAAiB,KAE/C,cAAkBO,MAAMC,KAAKzF,KAAKkF,UAAUQ,WAA5C,eAAwD,CAAnD,IAAIC,EAAK,KACVnD,GAAU,kBAAmBmD,EAAM,GAAK,UAAWA,EAAM,GAAI,KAEjE,OAAOnD,MAjDf,M,kHCAaoD,EAAb,WAaI,WAAYR,EAAWlD,EAAc4B,EAAcC,EAAgBX,EAA8ByC,GAAuB,yBAZxHvC,mBAYuH,OAXvHF,mBAWuH,OAVvHlB,WAUuH,OATvHsB,mBASuH,OARvHM,WAQuH,OAPvHC,aAOuH,OANvHhC,SAMuH,OALvHC,UAKuH,OAJvH8D,WAIuH,OAHvHC,YAGuH,EACnH/F,KAAKsD,cAAgB8B,EACrBpF,KAAKkC,MAAQA,EACblC,KAAK8D,MAAQA,EACb9D,KAAK+D,QAAUA,EACf/D,KAAKoD,cAAgBA,EACrBpD,KAAKwD,cAAgBqC,EACrB7F,KAAK+B,KAAO,EACZ/B,KAAKgC,MAAQ,EACbhC,KAAK8F,OAAS,EACd9F,KAAK+F,QAAU,EACf/F,KAAKgG,iBACLhG,KAAKiG,iBAzBb,kDA4BI,WACI,IAAK,IAAIC,EAAQ,EAAGA,EAAQlG,KAAKwD,cAAcnB,OAAQ6D,IACnDlG,KAAKwD,cAAc0C,GAAOlE,KAAOhC,KAAKwD,cAAcnB,OACpDrC,KAAKwD,cAAc0C,GAAOnE,IAAMmE,IA/B5C,4BAmCI,WACI,IAAK,IAAIA,EAAQ,EAAGA,EAAQlG,KAAKoD,cAAcf,OAAQ6D,IACnDlG,KAAKoD,cAAc8C,GAAOlE,KAAOhC,KAAKoD,cAAcf,OACpDrC,KAAKoD,cAAc8C,GAAOnE,IAAMmE,IAtC5C,yBA0CI,SAAmBC,GAAqC,IAAD,gBAE7BnG,KAAKoD,eAFwB,IAEnD,2BAA0C,CAAC,IAAhCgD,EAA+B,QACtC,GAAIA,EAAQ9C,gBAAkB6C,EAC1B,OAAOC,GAJoC,8BAQnD,OAAO,SAlDf,M,0FCFaC,EAMT,WAAY/B,EAAcgC,EAAiBC,EAAaC,GAAkB,yBAL1ElC,YAKyE,OAJzEgC,eAIyE,OAHzEC,WAGyE,OAFzEC,eAEyE,EACrExG,KAAKsE,OAASA,EACdtE,KAAKsG,UAAYA,EACjBtG,KAAKuG,MAAQA,EACbvG,KAAKwG,UAAYA,I,2FCVZC,EAKT,WAAYC,EAAiBC,EAAmBC,GAAkB,yBAJlEF,eAIiE,OAHjEC,iBAGiE,OAFjEC,eAEiE,EAC7D5G,KAAK0G,UAAYA,EACjB1G,KAAK2G,YAAcA,EACnB3G,KAAK4G,UAAYA,I,oICRzB,cAyEA,IAAIC,EAAc,WAClB,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAE1E,OAAO4E,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGI,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IAC7dC,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,SAAW,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,IAAM,GAAG,MAAQ,GAAG,eAAiB,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,UAAY,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACrVC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQC,GAAG,MAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpMC,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG3I,OAAS,EACrB,OAAQ0I,GACR,KAAK,EAEG,IAAII,EAAmBC,EAEvB,OADAA,EAAe,GACR,CAACC,IAAKL,EAAGE,GAAKE,aAAeD,EAAkBG,SAAUN,EAAGE,EAAG,GAAG9J,OAGjF,KAAK,EAEO+J,EAAmBC,EAEvB,OADAA,EAAe,GACR,CAACC,IAAKL,EAAGE,GAAKE,aAAeD,EAAkBG,SAAU,IAGxE,KAAK,EACLtL,KAAKuL,EAAIP,EAAGE,EAAG,GACf,MACA,KAAK,EACLlL,KAAKuL,EAAI,CAACP,EAAGE,EAAG,IAChB,MACA,KAAK,EAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAarI,KAAK,IAAIY,EAAW,YAAY,eAAeqH,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,eAC9IzL,KAAKuL,EAAI,IAAI3F,EAAQoF,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAaT,EAAGE,EAAG,GAAGF,EAAGE,EAAG,IAAG,GAE1G,MACA,KAAK,EAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAarI,KAAK,IAAIY,EAAW,YAAY,eAAeqH,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,eAC9IzL,KAAKuL,EAAI,IAAI3F,EAAQoF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAaT,EAAGE,EAAG,GAAG,IAAG,GAE1G,MACA,KAAK,EAEOlL,KAAKuL,EAAI,IAAI3F,EAAQoF,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAaT,EAAGE,EAAG,GAAG,IAAG,GAEpG,MACA,KAAK,GAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAarI,KAAK,IAAIY,EAAW,YAAY,eAAeqH,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,eAC9IzL,KAAKuL,EAAI,IAAI3F,EAAQoF,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAa,GAAGT,EAAGE,EAAG,IAAG,GAEpG,MACA,KAAK,GAEUF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAarI,KAAK,IAAIY,EAAW,YAAY,eAAeqH,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,eAC9IzL,KAAKuL,EAAI,IAAI3F,EAAQoF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAa,GAAG,IAAG,GAEpG,MACA,KAAK,GAEOzL,KAAKuL,EAAI,IAAI3F,EAAQoF,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAa,GAAG,IAAG,GAE9F,MACA,KAAK,GAEOL,EAAarI,KAAK,IAAIY,EAAW,aAAa,4CAA4CsH,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,eAEpI,MACA,KAAK,GAAI,KAAK,GACdT,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACtC,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,CAACP,EAAGE,IACb,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAInF,EAAQ4E,EAAGE,EAAG,GAAIF,EAAGE,GAAKD,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,cAAa,GAClF,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DzL,KAAKuL,EAAIP,EAAGE,EAAG,GAAI,IAAKF,EAAGE,GAC3B,MACA,KAAK,GACLlL,KAAKuL,EAAIP,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLhL,KAAKuL,EAAIP,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLhL,KAAKuL,EAAIP,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLhL,KAAKuL,EAAIP,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLhL,KAAKuL,EAAIP,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DhL,KAAKuL,EAAIP,EAAGE,GACZ,MACA,KAAK,GACLlL,KAAKuL,EAAI,IACT,MACA,KAAK,GACLvL,KAAKuL,EAAI,IACT,MACA,KAAK,GACLvL,KAAKuL,EAAI,IACT,MACA,KAAK,GACLvL,KAAKuL,EAAI,IACT,MACA,KAAK,GACLvL,KAAKuL,EAAI,MAITG,MAAO,CAAC,CAACjC,EAAEvC,EAAIyE,EAAE,EAAEjC,EAAE,CAAC,EAAE,GAAGkC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACnC,EAAE,CAAC,EAAE,GAAGC,EAAEzC,GAAK,CAAC2E,EAAE,CAAC,EAAE,GAAGrC,EAAEvC,EAAIwC,EAAEtC,EAAIyE,GAAG,GAAG/E,EAAEO,EAAI,CAAC,EAAE,GAAG,CAAC0E,GAAG,GAAGjC,GAAG,CAAC,EAAE,MAAM,CAACD,EAAE,CAAC,EAAE,IAAImC,GAAG,IAAI,CAACpC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAEtC,EAAI2E,EAAE,GAAGpC,EAAE,CAAC,EAAE,IAAIqC,GAAG,GAAGnC,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,KAAK,CAACF,EAAEzC,GAAKL,EAAEO,EAAIE,GAAKT,EAAEO,EAAI,CAAC,EAAE,IAAIP,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEU,EAAI,CAAC,EAAE,KAAK,CAACoC,EAAEtC,EAAI2E,EAAE,IAAI,CAACrC,EAAEtC,EAAI2E,EAAE,GAAGpC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACN,EAAEvC,EAAIwC,EAAEtC,EAAIwC,EAAEnC,EAAIoE,GAAG,GAAGM,GAAG,GAAGpC,GAAGrC,EAAI0E,GAAG,GAAGpC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,GAAK,CAACyB,EAAE,CAAC,EAAE,KAAK/C,EAAEuB,EAAI,CAAC,EAAE,KAAK,CAAC2B,GAAG,CAAC,EAAE,KAAKlD,EAAEO,EAAI,CAAC,EAAE,IAAI,CAACuC,EAAEtC,EAAI2E,EAAE,IAAI,CAACxC,EAAEvC,EAAIwC,EAAEtC,EAAIwC,EAAEnC,EAAIoE,GAAG,GAAGM,GAAG,GAAGpC,GAAGrC,EAAI0E,GAAG,GAAGpC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,EAAIsC,GAAGrC,GAAK,CAACyB,EAAE,CAAC,EAAE,KAAK/C,EAAEuB,EAAI,CAAC,EAAE,KAAK,CAACoB,EAAEvC,EAAIwC,EAAE,CAAC,EAAE,IAAImC,GAAG,IAAI,CAACnC,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAKnC,EAAES,EAAI,CAAC,EAAE,KAAKT,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEU,EAAI,CAAC,EAAE,KAAK,CAACyC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACP,EAAE,CAAC,EAAE,KAAK,CAACF,EAAEvC,EAAIwC,EAAE,CAAC,EAAE,IAAImC,GAAG,IAAI,CAACnC,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAKnC,EAAEU,EAAI,CAAC,EAAE,IAAI,CAACoC,EAAEzC,EAAI4C,GAAG,CAAC,EAAE,KAAKjD,EAAES,EAAI,CAAC,EAAE,KAAK,CAACwC,GAAG,CAAC,EAAE,KAAKjD,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEoC,EAAI,CAAC,EAAE,KAAKpC,EAAEqC,EAAI,CAAC,EAAE,KAAKrC,EAAEqC,EAAI,CAAC,EAAE,KAAK,CAACU,EAAE,CAAC,EAAE,KAAK,CAACD,EAAEzC,EAAI4C,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACH,EAAEvC,EAAIwC,EAAEtC,EAAIwE,EAAE,GAAGC,GAAG,GAAG,CAACjC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACiC,EAAE,CAAC,EAAE,GAAGrC,EAAEvC,EAAIwC,EAAEtC,EAAIyE,GAAG,GAAG,CAAChC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK/C,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEU,EAAI,CAAC,EAAE,IAAIV,EAAEU,EAAI,CAAC,EAAE,KAC9hD6E,eAAgB,GAChBC,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAI5I,EAAQ,IAAI5B,MAAMsK,GAEtB,MADA1I,EAAM2I,KAAOA,EACP3I,EAJN7D,KAAKqJ,MAAMkD,IAOnBG,MAAO,SAAgBC,GACnB,IAAIC,EAAO5M,KACP6M,EAAQ,CAAC,GAETC,EAAS,CAAC,MACVC,EAAS,GACTrB,EAAQ1L,KAAK0L,MACbd,EAAS,GACTE,EAAW,EACXD,EAAS,EACTmC,EAAa,EACbC,EAAS,EACTC,EAAM,EAENC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GAIpCC,EAAQC,OAAOC,OAAOzN,KAAKuN,OAC3BG,EAAc,CAAEpE,GAAI,IAExB,IAAK,IAAIvC,KAAK/G,KAAKsJ,GACbkE,OAAOG,UAAUC,eAAeP,KAAKrN,KAAKsJ,GAAIvC,KAChD2G,EAAYpE,GAAGvC,GAAK/G,KAAKsJ,GAAGvC,IAIhCwG,EAAMM,SAASlB,EAAOe,EAAYpE,IAClCoE,EAAYpE,GAAGiE,MAAQA,EACvBG,EAAYpE,GAAGF,OAASpJ,KACG,oBAAhBuN,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAOhK,KAAKgL,GAEZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OAQ5C,SAASE,EAAUC,GACftB,EAAMxK,OAASwK,EAAMxK,OAAS,EAAI8L,EAClCrB,EAAOzK,OAASyK,EAAOzK,OAAS8L,EAChCpB,EAAO1K,OAAS0K,EAAO1K,OAAS8L,EATK,oBAA9BT,EAAYpE,GAAGgD,WACtBtM,KAAKsM,WAAaoB,EAAYpE,GAAGgD,WAEjCtM,KAAKsM,WAAakB,OAAOY,eAAepO,MAAMsM,WAqBlD,IAXA,IAUI+B,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAV3EC,EAAM,WACN,IAAIC,EAMJ,MAHqB,kBAFrBA,EAAQxB,EAAMuB,OAAS5B,KAGnB6B,EAAQnC,EAAKrD,SAASwF,IAAUA,GAE7BA,GAGsCC,EAAQ,KAC5C,CAiBT,GAfAT,EAAQ1B,EAAMA,EAAMxK,OAAS,GAGzBrC,KAAKqM,eAAekC,GACpBC,EAASxO,KAAKqM,eAAekC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAGbN,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOF,IAKpB,qBAAXG,IAA2BA,EAAOnM,SAAWmM,EAAO,GAAI,KAC3DS,EAKKC,EAAT,SAAwCX,GAKpC,IAJA,IAAIY,EAActC,EAAMxK,OAAS,EAC7B+M,EAAQ,IAGJ,CAEJ,GAAKnC,EAAO9M,aAAeuL,EAAM6C,GAC7B,OAAOa,EAEX,GAAc,IAAVb,GAAeY,EAAc,EAC7B,OAAO,EAGXZ,EAAQ1B,EADRsC,GAAe,KAEbC,IAnBNC,EAAS,GAuBb,GAAKrC,EA0BMsB,IAAmBpB,IAC1B+B,EAAmBC,EAA+BX,QA3BrC,CAMb,IAAKG,KAJLO,EAAmBC,EAA+BX,GAGlDM,EAAW,GACDnD,EAAM6C,GACRvO,KAAKwJ,WAAWkF,IAAMA,EAAIzB,GAC1B4B,EAAS9L,KAAK,IAAI/C,KAAKwJ,WAAWkF,GAAG,KAIzCW,EADA9B,EAAM+B,aACG,wBAAwBxE,EAAS,GAAG,MAAMyC,EAAM+B,eAAe,eAAeT,EAASU,KAAK,MAAQ,WAAavP,KAAKwJ,WAAW6E,IAAWA,GAAS,IAErJ,wBAAwBvD,EAAS,GAAG,iBAC9BuD,GAAUnB,EAAM,eACJ,KAAKlN,KAAKwJ,WAAW6E,IAAWA,GAAQ,KAEvErO,KAAKsM,WAAW+C,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO/O,KAAKwJ,WAAW6E,IAAWA,EAClCnN,KAAMqM,EAAMzC,SACZ4E,IAAK3B,EACLc,SAAUA,EACVpC,aAAmC,IAArBwC,IAOtB,GAAkB,GAAdjC,EAAiB,CACjB,GAAIqB,IAAWnB,GAAOoB,IAAmBpB,EACrC,MAAM,IAAIjL,MAAMoN,GAAU,gEAI9BxE,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACdO,EAASS,IAIb,IAAyB,IAArBG,EACA,MAAM,IAAIhN,MAAMoN,GAAU,8DAE9BnB,EAASe,GAETX,EAAkBD,GAAUpB,EAAS,KAAOoB,EAC5CA,EAASpB,EACTsB,EAAQ1B,EAAMA,EAAMxK,OAAO,GAC3BmM,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOtB,GACtCD,EAAa,EAIjB,GAAIwB,EAAO,aAAchJ,OAASgJ,EAAOnM,OAAS,EAC9C,MAAM,IAAIJ,MAAM,oDAAoDsM,EAAM,YAAYF,GAG1F,OAAQG,EAAO,IACX,KAAK,EAGD3B,EAAM9J,KAAKsL,GACXvB,EAAO/J,KAAKwK,EAAM3C,QAClBmC,EAAOhK,KAAKwK,EAAMO,QAClBjB,EAAM9J,KAAKyL,EAAO,IAClBH,EAAS,KACJC,GAUDD,EAASC,EACTA,EAAiB,OAVjBzD,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAOR,MAEJ,KAAK,EAoBD,GAhBA2B,EAAM3O,KAAK0K,aAAa8D,EAAO,IAAI,GAGnCQ,EAAMzD,EAAIuB,EAAOA,EAAOzK,OAAOsM,GAE/BK,EAAM/D,GAAK,CACPO,WAAYuB,EAAOA,EAAO1K,QAAQsM,GAAK,IAAInD,WAC3CmE,UAAW5C,EAAOA,EAAO1K,OAAO,GAAGsN,UACnClE,aAAcsB,EAAOA,EAAO1K,QAAQsM,GAAK,IAAIlD,aAC7CmE,YAAa7C,EAAOA,EAAO1K,OAAO,GAAGuN,aAErC5B,IACFgB,EAAM/D,GAAG4E,MAAQ,CAAC9C,EAAOA,EAAO1K,QAAQsM,GAAK,IAAIkB,MAAM,GAAI9C,EAAOA,EAAO1K,OAAO,GAAGwN,MAAM,KAI1E,qBAFjBpB,EAAIzO,KAAK2K,cAAcmF,MAAMd,EAAO,CAACpE,EAAQC,EAAQC,EAAU4C,EAAYpE,GAAIkF,EAAO,GAAI1B,EAAQC,GAAQgD,OAAO5C,KAG7G,OAAOsB,EAIPE,IACA9B,EAAQA,EAAMO,MAAM,GAAG,EAAEuB,EAAI,GAC7B7B,EAASA,EAAOM,MAAM,GAAI,EAAEuB,GAC5B5B,EAASA,EAAOK,MAAM,GAAI,EAAEuB,IAGhC9B,EAAM9J,KAAK/C,KAAK0K,aAAa8D,EAAO,IAAI,IACxC1B,EAAO/J,KAAKiM,EAAMzD,GAClBwB,EAAOhK,KAAKiM,EAAM/D,IAElB2D,EAAWlD,EAAMmB,EAAMA,EAAMxK,OAAO,IAAIwK,EAAMA,EAAMxK,OAAO,IAC3DwK,EAAM9J,KAAK6L,GACX,MAEJ,KAAK,EAED,OAAO,GAKnB,OAAO,IAGAhJ,EAAWoK,EAAQ,IAAnBpK,QACAQ,EAAW4J,EAAQ,KAAnB5J,QACAzC,EAAcqM,EAAQ,IAAtBrM,WACHyH,EAAe,GAEnBmC,EACS,CAEbL,IAAI,EAEJZ,WAAW,SAAoBC,EAAKC,GAC5B,IAAIxM,KAAKsJ,GAAGF,OAGR,MAAM,IAAInH,MAAMsK,GAFhBvM,KAAKsJ,GAAGF,OAAOkD,WAAWC,EAAKC,IAO3CqB,SAAS,SAAUlB,EAAOrD,GAiBlB,OAhBAtJ,KAAKsJ,GAAKA,GAAMtJ,KAAKsJ,IAAM,GAC3BtJ,KAAKiQ,OAAStD,EACd3M,KAAKkQ,MAAQlQ,KAAKmQ,WAAanQ,KAAKoQ,MAAO,EAC3CpQ,KAAK8K,SAAW9K,KAAK6K,OAAS,EAC9B7K,KAAK4K,OAAS5K,KAAKqQ,QAAUrQ,KAAKyP,MAAQ,GAC1CzP,KAAKsQ,eAAiB,CAAC,WACvBtQ,KAAK8N,OAAS,CACVtC,WAAY,EACZC,aAAc,EACdkE,UAAW,EACXC,YAAa,GAEb5P,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC,EAAE,IAE3B7P,KAAKuQ,OAAS,EACPvQ,MAIf2M,MAAM,WACE,IAAI6D,EAAKxQ,KAAKiQ,OAAO,GAkBrB,OAjBAjQ,KAAK4K,QAAU4F,EACfxQ,KAAK6K,SACL7K,KAAKuQ,SACLvQ,KAAKyP,OAASe,EACdxQ,KAAKqQ,SAAWG,EACJA,EAAGf,MAAM,oBAEjBzP,KAAK8K,WACL9K,KAAK8N,OAAO6B,aAEZ3P,KAAK8N,OAAO8B,cAEZ5P,KAAKiO,QAAQD,QACbhO,KAAK8N,OAAO+B,MAAM,KAGtB7P,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAM,GACzBoD,GAIfC,MAAM,SAAUD,GACR,IAAI7B,EAAM6B,EAAGnO,OACTqO,EAAQF,EAAGG,MAAM,iBAErB3Q,KAAKiQ,OAASO,EAAKxQ,KAAKiQ,OACxBjQ,KAAK4K,OAAS5K,KAAK4K,OAAOgG,OAAO,EAAG5Q,KAAK4K,OAAOvI,OAASsM,GAEzD3O,KAAKuQ,QAAU5B,EACf,IAAIkC,EAAW7Q,KAAKyP,MAAMkB,MAAM,iBAChC3Q,KAAKyP,MAAQzP,KAAKyP,MAAMmB,OAAO,EAAG5Q,KAAKyP,MAAMpN,OAAS,GACtDrC,KAAKqQ,QAAUrQ,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAAS,GAExDqO,EAAMrO,OAAS,IACfrC,KAAK8K,UAAY4F,EAAMrO,OAAS,GAEpC,IAAIoM,EAAIzO,KAAK8N,OAAO+B,MAgBpB,OAdA7P,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAac,GACRA,EAAMrO,SAAWwO,EAASxO,OAASrC,KAAK8N,OAAOrC,aAAe,GAC5DoF,EAASA,EAASxO,OAASqO,EAAMrO,QAAQA,OAASqO,EAAM,GAAGrO,OAChErC,KAAK8N,OAAOrC,aAAekD,GAG7B3O,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAACpB,EAAE,GAAIA,EAAE,GAAKzO,KAAK6K,OAAS8D,IAEpD3O,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACnBrC,MAIf8Q,KAAK,WAEG,OADA9Q,KAAKkQ,OAAQ,EACNlQ,MAIf+Q,OAAO,WACC,OAAI/Q,KAAKiO,QAAQ+C,iBACbhR,KAAKmQ,YAAa,EASfnQ,MAPIA,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,mIAAqI9K,KAAKsP,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAQ3BmG,KAAK,SAAU9C,GACPnO,KAAKyQ,MAAMzQ,KAAKyP,MAAMrC,MAAMe,KAIpC+C,UAAU,WACF,IAAIC,EAAOnR,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAASrC,KAAKyP,MAAMpN,QACnE,OAAQ8O,EAAK9O,OAAS,GAAK,MAAM,IAAM8O,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOtR,KAAKyP,MAIhB,OAHI6B,EAAKjP,OAAS,KACdiP,GAAQtR,KAAKiQ,OAAOW,OAAO,EAAG,GAAGU,EAAKjP,UAElCiP,EAAKV,OAAO,EAAE,KAAOU,EAAKjP,OAAS,GAAK,MAAQ,KAAK+O,QAAQ,MAAO,KAIpF9B,aAAa,WACL,IAAIiC,EAAMvR,KAAKkR,YACXM,EAAI,IAAIhM,MAAM+L,EAAIlP,OAAS,GAAGkN,KAAK,KACvC,OAAOgC,EAAMvR,KAAKqR,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAAShC,EAAOiC,GACnB,IAAI3C,EACA2B,EACAiB,EAwDJ,GAtDI3R,KAAKiO,QAAQ+C,kBAEbW,EAAS,CACL7G,SAAU9K,KAAK8K,SACfgD,OAAQ,CACJtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK2P,UAChBlE,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAa5P,KAAK8N,OAAO8B,aAE7BhF,OAAQ5K,KAAK4K,OACb6E,MAAOzP,KAAKyP,MACZmC,QAAS5R,KAAK4R,QACdvB,QAASrQ,KAAKqQ,QACdxF,OAAQ7K,KAAK6K,OACb0F,OAAQvQ,KAAKuQ,OACbL,MAAOlQ,KAAKkQ,MACZD,OAAQjQ,KAAKiQ,OACb3G,GAAItJ,KAAKsJ,GACTgH,eAAgBtQ,KAAKsQ,eAAelD,MAAM,GAC1CgD,KAAMpQ,KAAKoQ,MAEXpQ,KAAKiO,QAAQD,SACb2D,EAAO7D,OAAO+B,MAAQ7P,KAAK8N,OAAO+B,MAAMzC,MAAM,MAItDsD,EAAQjB,EAAM,GAAGA,MAAM,sBAEnBzP,KAAK8K,UAAY4F,EAAMrO,QAE3BrC,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAO6B,UACxBA,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAO8B,YAC1BA,YAAac,EACAA,EAAMA,EAAMrO,OAAS,GAAGA,OAASqO,EAAMA,EAAMrO,OAAS,GAAGoN,MAAM,UAAU,GAAGpN,OAC5ErC,KAAK8N,OAAO8B,YAAcH,EAAM,GAAGpN,QAEpDrC,KAAK4K,QAAU6E,EAAM,GACrBzP,KAAKyP,OAASA,EAAM,GACpBzP,KAAK4R,QAAUnC,EACfzP,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACtBrC,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC7P,KAAKuQ,OAAQvQ,KAAKuQ,QAAUvQ,KAAK6K,SAE1D7K,KAAKkQ,OAAQ,EACblQ,KAAKmQ,YAAa,EAClBnQ,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAMqC,EAAM,GAAGpN,QACzCrC,KAAKqQ,SAAWZ,EAAM,GACtBV,EAAQ/O,KAAK2K,cAAc0C,KAAKrN,KAAMA,KAAKsJ,GAAItJ,KAAM0R,EAAc1R,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAChHrC,KAAKoQ,MAAQpQ,KAAKiQ,SAClBjQ,KAAKoQ,MAAO,GAEZrB,EACA,OAAOA,EACJ,GAAI/O,KAAKmQ,WAAY,CAExB,IAAK,IAAIpJ,KAAK4K,EACV3R,KAAK+G,GAAK4K,EAAO5K,GAErB,OAAO,EAEX,OAAO,GAIfuK,KAAK,WACG,GAAItR,KAAKoQ,KACL,OAAOpQ,KAAKkN,IAMhB,IAAI6B,EACAU,EACAoC,EACA3L,EAPClG,KAAKiQ,SACNjQ,KAAKoQ,MAAO,GAOXpQ,KAAKkQ,QACNlQ,KAAK4K,OAAS,GACd5K,KAAKyP,MAAQ,IAGjB,IADA,IAAIqC,EAAQ9R,KAAK+R,gBACR7R,EAAI,EAAGA,EAAI4R,EAAMzP,OAAQnC,IAE9B,IADA2R,EAAY7R,KAAKiQ,OAAOR,MAAMzP,KAAK8R,MAAMA,EAAM5R,SAC5BuP,GAASoC,EAAU,GAAGxP,OAASoN,EAAM,GAAGpN,QAAS,CAGhE,GAFAoN,EAAQoC,EACR3L,EAAQhG,EACJF,KAAKiO,QAAQ+C,gBAAiB,CAE9B,IAAc,KADdjC,EAAQ/O,KAAKyR,WAAWI,EAAWC,EAAM5R,KAErC,OAAO6O,EACJ,GAAI/O,KAAKmQ,WAAY,CACxBV,GAAQ,EACR,SAGA,OAAO,EAER,IAAKzP,KAAKiO,QAAQ+D,KACrB,MAIZ,OAAIvC,GAEc,KADdV,EAAQ/O,KAAKyR,WAAWhC,EAAOqC,EAAM5L,MAE1B6I,EAKK,KAAhB/O,KAAKiQ,OACEjQ,KAAKkN,IAELlN,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,yBAA2B9K,KAAKsP,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAM3BgE,IAAI,WACI,IAAIL,EAAIzO,KAAKsR,OACb,OAAI7C,GAGOzO,KAAK8O,OAKxBmD,MAAM,SAAgBC,GACdlS,KAAKsQ,eAAevN,KAAKmP,IAIjCC,SAAS,WAED,OADQnS,KAAKsQ,eAAejO,OAAS,EAC7B,EACGrC,KAAKsQ,eAAe8B,MAEpBpS,KAAKsQ,eAAe,IAKvCyB,cAAc,WACN,OAAI/R,KAAKsQ,eAAejO,QAAUrC,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,GACxErC,KAAKqS,WAAWrS,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAAIyP,MAErE9R,KAAKqS,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBnE,GAEpB,OADAA,EAAInO,KAAKsQ,eAAejO,OAAS,EAAIkQ,KAAKC,IAAIrE,GAAK,KAC1C,EACEnO,KAAKsQ,eAAenC,GAEpB,WAKnBsE,UAAU,SAAoBP,GACtBlS,KAAKiS,MAAMC,IAInBQ,eAAe,WACP,OAAO1S,KAAKsQ,eAAejO,QAEnC4L,QAAS,CAAC,oBAAmB,GAC7BtD,cAAe,SAAmBrB,EAAGqJ,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAI/H,OAAS,kBAAoB+H,EAAI7E,OAAOtC,WAAa,oBAAsBmH,EAAI7E,OAAOrC,gBAK5KqG,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,mJAAiF,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WAC1XO,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACPhT,KAAKsJ,GAAK,GAGZ,OALAF,EAAOmE,MAAQA,EAIfyF,EAAOrF,UAAYvE,EAAOA,EAAO4J,OAASA,EACnC,IAAIA,EAhvBO,GAqvBlBC,EAAQ7J,OAASvC,EACjBoM,EAAQD,OAASnM,EAAWmM,OAC5BC,EAAQvG,MAAQ,WAAc,OAAO7F,EAAW6F,MAAMoD,MAAMjJ,EAAYyG,YACxE2F,EAAQC,KAAO,SAAuB/F,GAC7BA,EAAK,KACN2F,QAAQC,IAAI,UAAU5F,EAAK,GAAG,SAC9BgG,EAAQC,KAAK,IAEjB,IAAIC,EAASrD,EAAQ,IAAMsD,aAAatD,EAAQ,IAAQuD,UAAUpG,EAAK,IAAK,QAC5E,OAAO8F,EAAQ7J,OAAOsD,MAAM2G,IAEKrD,WAAiBwD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKrG,MAAM,M,kHC10BrBhH,EAUT,WAAYhB,EAAWhE,EAAc0C,EAAcC,GAAgB,yBATnET,mBASkE,OARlElC,WAQkE,OAPlE0C,WAOkE,OANlEC,aAMkE,OALlEhC,SAKkE,OAJlEC,UAIkE,OAHlE8D,WAGkE,OAFlEC,YAEkE,EAC9D/F,KAAKsD,cAAgB8B,EACrBpF,KAAKoB,MAAQA,EACbpB,KAAK8D,MAAQA,EACb9D,KAAK+D,QAAUA,EACf/D,KAAK+B,KAAO,EACZ/B,KAAKgC,MAAQ,EACbhC,KAAK8F,OAAS,EACd9F,KAAK+F,QAAU,I,iBClBvB,cAyEA,IAAI2N,EAAa,WACjB,IA4zBQC,EACAC,EA7zBJ9M,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAE1E,OAAO4E,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGI,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IACrcG,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,SAAW,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,IAAM,GAAG,MAAQ,GAAG,eAAiB,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACtUC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQC,GAAG,MAAMC,GAAG,IAAIiC,GAAG,IAAIhC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpME,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG3I,OAAS,EACrB,OAAQ0I,GACR,KAAK,EA6BG,OA3BA8I,EAAY9Q,KAAK,sDACjB+Q,EAAc/Q,KAAK,yBACnBgR,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,KAAKF,EAAS,IAC7BA,IACAC,EAAKC,UAAU,WAAWF,EAAS/I,EAAGE,EAAG,IACzC6I,IACAC,EAAKC,UAAU,WAAWF,EAAS/I,EAAGE,EAAG,IACzC6I,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,QAAQF,EAAS/I,EAAGE,IAEnC6I,EAAW,EACXJ,EAAUK,EACVA,EAAO,IAAI5P,EAAQ,OAAO,EAAE,IAC5B8P,EAAiBL,EACjBA,EAAc,GACdM,EAAmBL,EACnBA,EAAgB,GAET,CAACM,kBAAmB,CAACF,EAAeC,GAAkBE,WAAYV,GAGjF,KAAK,EAeG,OAbAE,EAAY9Q,KAAK,iBACjB+Q,EAAc/Q,KAAK,yBACnBgR,IACAC,EAAKC,UAAU,QAAQF,EAAS/I,EAAGE,IAEnC6I,EAAW,EACXJ,EAAUK,EACVA,EAAO,IAAI5P,EAAQ,OAAO,EAAE,IAC5B8P,EAAiBL,EACjBA,EAAc,GACdM,EAAmBL,EACnBA,EAAgB,GAET,CAACM,kBAAmB,CAACF,EAAeC,GAAkBE,WAAYV,GAGjF,KAAK,EAEGE,EAAY9Q,KAAK,2BACjB+Q,EAAc/Q,KAAK,+CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,QAAQ2P,EAAS/I,EAAGE,EAAG,IAC7CzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,OAAO2P,EAAS/I,EAAGE,EAAG,IAC5CzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,MAAM2P,EAAS/I,EAAGE,IACxCzG,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGoP,EAAY9Q,KAAK,uBACjB+Q,EAAc/Q,KAAK,wBACnBgR,IACAH,EAAU,IAAIxP,EAAQ,OAAO2P,EAAS/I,EAAGE,EAAG,IAC5CzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,QAAQ2P,EAAS/I,EAAGE,IAC1CzG,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGoP,EAAY9Q,KAAK,gBACjB+Q,EAAc/Q,KAAK,oBACnBgR,IACAH,EAAU,IAAIxP,EAAQ,MAAM2P,EAAS,IACrCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGoP,EAAY9Q,KAAK,mBACjB+Q,EAAc/Q,KAAK,mBACnBgR,IACAH,EAAU,IAAIxP,EAAQ,SAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGoP,EAAY9Q,KAAK,qEACjB+Q,EAAc/Q,KAAK,gFACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,iBAAiB2P,EAAS/I,EAAGE,EAAG,IACtDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,aAAa2P,EAAS/I,EAAGE,EAAG,IAClDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGoP,EAAY9Q,KAAK,oEACjB+Q,EAAc/Q,KAAK,8EACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,iBAAiB2P,EAAS/I,EAAGE,EAAG,IACtDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGoP,EAAY9Q,KAAK,2CACjB+Q,EAAc/Q,KAAK,oEACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,iBAAiB2P,EAAS/I,EAAGE,EAAG,IACtDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,sDACjB+Q,EAAc/Q,KAAK,gEACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,aAAa2P,EAAS/I,EAAGE,EAAG,IAClDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,qDACjB+Q,EAAc/Q,KAAK,gEACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,4BACjB+Q,EAAc/Q,KAAK,oDACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,iCACjB+Q,EAAc/Q,KAAK,+DACnBgR,IACAH,EAAU,IAAIxP,EAAQ,aAAa2P,EAAS/I,EAAGE,EAAG,IAClDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,OAAO2P,EAAS/I,EAAGE,IACzCzG,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,sBACjB+Q,EAAc/Q,KAAK,6BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,OAAO2P,EAAS/I,EAAGE,IACzCzG,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,6CACjB+Q,EAAc/Q,KAAK,8EACnBgR,IACAH,EAAU,IAAIxP,EAAQ,iBAAiB2P,EAAS/I,EAAGE,EAAG,IACtDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,WAAW2P,EAAS/I,EAAGE,IAC7CzG,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,8BACjB+Q,EAAc/Q,KAAK,+BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,WAAW2P,EAAS/I,EAAGE,IAC7CzG,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,4BACjB+Q,EAAc/Q,KAAK,mDACnBgR,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,UAAU2P,EAAS,IACzCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,4BACjB+Q,EAAc/Q,KAAK,uDACnBgR,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,UAAU2P,EAAS,IACzCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,kCACjB+Q,EAAc/Q,KAAK,4CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,UAAU2P,EAAS,IACzCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,kCACjB+Q,EAAc/Q,KAAK,4CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,UAAU2P,EAAS,IACzCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,6BACjB+Q,EAAc/Q,KAAK,uCACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,mCACjB+Q,EAAc/Q,KAAK,6CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,WAAW2P,EAAS,IAC1CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,sCACjB+Q,EAAc/Q,KAAK,gDACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,cAAc2P,EAAS,IAC7CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,oCACjB+Q,EAAc/Q,KAAK,8CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS,IAC3CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,qCACjB+Q,EAAc/Q,KAAK,+CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,aAAa2P,EAAS,IAC5CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,mCACjB+Q,EAAc/Q,KAAK,6CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,WAAW2P,EAAS,IAC1CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,iCACjB+Q,EAAc/Q,KAAK,2CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,SAAS2P,EAAS,IACxCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,iCACjB+Q,EAAc/Q,KAAK,2CACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,SAAS2P,EAAS,IACxCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,4BACjB+Q,EAAc/Q,KAAK,sCACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,4BACjB+Q,EAAc/Q,KAAK,sCACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS/I,EAAGE,EAAG,IACjDzG,EAAM1B,KAAK6Q,GACXG,IACAH,EAAU,IAAIxP,EAAQ,IAAI,IAC1BK,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,wBACjB+Q,EAAc/Q,KAAK,4BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,UAAU2P,EAAS,IACzCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,wBACjB+Q,EAAc/Q,KAAK,4BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,UAAU2P,EAAS,IACzCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,mBACjB+Q,EAAc/Q,KAAK,uBACnBgR,IACAH,EAAU,IAAIxP,EAAQ,KAAK2P,EAAS,IACpCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,uBACjB+Q,EAAc/Q,KAAK,2BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,SAAS2P,EAAS,IACxCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,yBACjB+Q,EAAc/Q,KAAK,6BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,WAAW2P,EAAS,IAC1CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,4BACjB+Q,EAAc/Q,KAAK,gCACnBgR,IACAH,EAAU,IAAIxP,EAAQ,cAAc2P,EAAS,IAC7CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,0BACjB+Q,EAAc/Q,KAAK,8BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,YAAY2P,EAAS,IAC3CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,2BACjB+Q,EAAc/Q,KAAK,+BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,aAAa2P,EAAS,IAC5CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,yBACjB+Q,EAAc/Q,KAAK,6BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,WAAW2P,EAAS,IAC1CtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,uBACjB+Q,EAAc/Q,KAAK,2BACnBgR,IACAH,EAAU,IAAIxP,EAAQ,SAAS2P,EAAS,IACxCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,kBACjB+Q,EAAc/Q,KAAK,sBACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGoP,EAAY9Q,KAAK,kBACjB+Q,EAAc/Q,KAAK,sBACnBgR,IACAH,EAAU,IAAIxP,EAAQ,IAAI2P,EAAS,IACnCtP,EAAM1B,KAAK6Q,GACX5T,KAAKuL,EAAI9G,EACTA,EAAQ,KAKhBiH,MAAO,CAAC,CAACC,EAAE,EAAEjC,EAAE,CAAC,EAAE,GAAGkC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACnC,EAAE,CAAC,EAAE,GAAGC,EAAE1C,GAAK,CAAC4E,EAAE,CAAC,EAAE,GAAGpC,EAAEvC,EAAI0E,GAAG,GAAG/E,EAAEM,EAAI,CAAC,EAAE,GAAG,CAAC2E,GAAG,EAAEjC,GAAG,CAAC,EAAE,MAAM,CAACF,EAAE,CAAC,EAAE,KAAK,CAACA,EAAEvC,EAAI4E,EAAE,GAAGpC,EAAE,CAAC,EAAE,IAAIqC,GAAG,GAAGnC,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,KAAK,CAACF,EAAE1C,GAAKJ,EAAEM,EAAI,CAAC,EAAE,IAAIN,EAAEM,EAAI,CAAC,EAAE,IAAI,CAACwC,EAAEvC,EAAI4E,EAAE,IAAI,CAACrC,EAAEvC,EAAI4E,EAAE,GAAGpC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACL,EAAEvC,EAAIyC,EAAEtC,EAAIuE,GAAG,GAAGM,GAAG,GAAGpC,GAAGxC,EAAI6E,GAAG,GAAGJ,GAAGxE,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,GAAK,CAAC4B,EAAE,CAAC,EAAE,KAAK/C,EAAEoB,EAAI,CAAC,EAAE,KAAK,CAAC8D,GAAG,CAAC,EAAE,KAAKlF,EAAEM,EAAI,CAAC,EAAE,IAAI,CAACwC,EAAEvC,EAAI4E,EAAE,IAAI,CAACvC,EAAEvC,EAAIyC,EAAEtC,EAAIuE,GAAG,GAAGM,GAAG,GAAGpC,GAAGxC,EAAI6E,GAAG,GAAGJ,GAAGxE,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,EAAIwC,GAAGvC,GAAK,CAAC4B,EAAE,CAAC,EAAE,KAAK/C,EAAEoB,EAAI,CAAC,EAAE,KAAK,CAACwB,EAAE,CAAC,EAAE,IAAImC,GAAG,IAAI,CAACnC,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAI4D,GAAG3D,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,KAAK5C,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACgB,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACN,EAAE,CAAC,EAAE,KAAK,CAACD,EAAE,CAAC,EAAE,IAAImC,GAAG,IAAI,CAACnC,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAI4D,GAAG3D,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAKhC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACY,EAAE1C,EAAI6C,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACK,GAAG,CAAC,EAAE,KAAKjD,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEiC,EAAI,CAAC,EAAE,KAAKjC,EAAEmC,EAAI,CAAC,EAAE,KAAKnC,EAAEmC,EAAI,CAAC,EAAE,KAAK,CAACY,EAAE,CAAC,EAAE,KAAK,CAACD,EAAE1C,EAAI6C,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACF,EAAEvC,EAAIyE,EAAE,GAAGC,GAAG,GAAG,CAACjC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACiC,EAAE,CAAC,EAAE,GAAGpC,EAAEvC,EAAI0E,GAAG,GAAG,CAAChC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK/C,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,IAAIlC,EAAEkC,EAAI,CAAC,EAAE,KAC57CqD,eAAgB,CAAC/B,GAAG,CAAC,EAAE,IAAIgK,GAAG,CAAC,EAAE,KACjChI,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAI5I,EAAQ,IAAI5B,MAAMsK,GAEtB,MADA1I,EAAM2I,KAAOA,EACP3I,EAJN7D,KAAKqJ,MAAMkD,IAOnBG,MAAO,SAAeC,GAClB,IAAIC,EAAO5M,KAAM6M,EAAQ,CAAC,GAAiBC,EAAS,CAAC,MAAOC,EAAS,GAAIrB,EAAQ1L,KAAK0L,MAAOd,EAAS,GAAIE,EAAW,EAAGD,EAAS,EAAGmC,EAAa,EAAGC,EAAS,EAAGC,EAAM,EAClKC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GACpCC,EAAQC,OAAOC,OAAOzN,KAAKuN,OAC3BG,EAAc,CAAEpE,GAAI,IACxB,IAAK,IAAIvC,KAAK/G,KAAKsJ,GACXkE,OAAOG,UAAUC,eAAeP,KAAKrN,KAAKsJ,GAAIvC,KAC9C2G,EAAYpE,GAAGvC,GAAK/G,KAAKsJ,GAAGvC,IAGpCwG,EAAMM,SAASlB,EAAOe,EAAYpE,IAClCoE,EAAYpE,GAAGiE,MAAQA,EACvBG,EAAYpE,GAAGF,OAASpJ,KACG,oBAAhBuN,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAOhK,KAAKgL,GACZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OACH,oBAA9BN,EAAYpE,GAAGgD,WACtBtM,KAAKsM,WAAaoB,EAAYpE,GAAGgD,WAEjCtM,KAAKsM,WAAakB,OAAOY,eAAepO,MAAMsM,WAiBlD,IATI,IAQA+B,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EARvEC,EAAM,WACN,IAAIC,EAKJ,MAHqB,kBADrBA,EAAQxB,EAAMuB,OAAS5B,KAEnB6B,EAAQnC,EAAKrD,SAASwF,IAAUA,GAE7BA,GAEkCC,EAAQ,KAC5C,CAUG,GATZT,EAAQ1B,EAAMA,EAAMxK,OAAS,GACzBrC,KAAKqM,eAAekC,GACpBC,EAASxO,KAAKqM,eAAekC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAEbN,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOF,IAER,qBAAXG,IAA2BA,EAAOnM,SAAWmM,EAAO,GAAI,CACvE,IAAIa,EAAS,GAEb,IAAKX,KADLG,EAAW,GACDnD,EAAM6C,GACRvO,KAAKwJ,WAAWkF,IAAMA,EAAIzB,GAC1B4B,EAAS9L,KAAK,IAAO/C,KAAKwJ,WAAWkF,GAAK,KAI9CW,EADA9B,EAAM+B,aACG,wBAA0BxE,EAAW,GAAK,MAAQyC,EAAM+B,eAAiB,eAAiBT,EAASU,KAAK,MAAQ,WAAcvP,KAAKwJ,WAAW6E,IAAWA,GAAU,IAEnK,wBAA0BvD,EAAW,GAAK,iBAAmBuD,GAAUnB,EAAM,eAAiB,KAAQlN,KAAKwJ,WAAW6E,IAAWA,GAAU,KAExJrO,KAAKsM,WAAW+C,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO/O,KAAKwJ,WAAW6E,IAAWA,EAClCnN,KAAMqM,EAAMzC,SACZ4E,IAAK3B,EACLc,SAAUA,IAGtB,GAAIL,EAAO,aAAchJ,OAASgJ,EAAOnM,OAAS,EAC9C,MAAM,IAAIJ,MAAM,oDAAsDsM,EAAQ,YAAcF,GAEhG,OAAQG,EAAO,IACf,KAAK,EACD3B,EAAM9J,KAAKsL,GACXvB,EAAO/J,KAAKwK,EAAM3C,QAClBmC,EAAOhK,KAAKwK,EAAMO,QAClBjB,EAAM9J,KAAKyL,EAAO,IAClBH,EAAS,KACJC,GASDD,EAASC,EACTA,EAAiB,OATjBzD,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAMR,MACJ,KAAK,EAwBD,GAvBA2B,EAAM3O,KAAK0K,aAAa8D,EAAO,IAAI,GACnCQ,EAAMzD,EAAIuB,EAAOA,EAAOzK,OAASsM,GACjCK,EAAM/D,GAAK,CACPO,WAAYuB,EAAOA,EAAO1K,QAAUsM,GAAO,IAAInD,WAC/CmE,UAAW5C,EAAOA,EAAO1K,OAAS,GAAGsN,UACrClE,aAAcsB,EAAOA,EAAO1K,QAAUsM,GAAO,IAAIlD,aACjDmE,YAAa7C,EAAOA,EAAO1K,OAAS,GAAGuN,aAEvC5B,IACAgB,EAAM/D,GAAG4E,MAAQ,CACb9C,EAAOA,EAAO1K,QAAUsM,GAAO,IAAIkB,MAAM,GACzC9C,EAAOA,EAAO1K,OAAS,GAAGwN,MAAM,KAYvB,qBATjBpB,EAAIzO,KAAK2K,cAAcmF,MAAMd,EAAO,CAChCpE,EACAC,EACAC,EACA4C,EAAYpE,GACZkF,EAAO,GACP1B,EACAC,GACFgD,OAAO5C,KAEL,OAAOsB,EAEPE,IACA9B,EAAQA,EAAMO,MAAM,GAAI,EAAIuB,EAAM,GAClC7B,EAASA,EAAOM,MAAM,GAAI,EAAIuB,GAC9B5B,EAASA,EAAOK,MAAM,GAAI,EAAIuB,IAElC9B,EAAM9J,KAAK/C,KAAK0K,aAAa8D,EAAO,IAAI,IACxC1B,EAAO/J,KAAKiM,EAAMzD,GAClBwB,EAAOhK,KAAKiM,EAAM/D,IAClB2D,EAAWlD,EAAMmB,EAAMA,EAAMxK,OAAS,IAAIwK,EAAMA,EAAMxK,OAAS,IAC/DwK,EAAM9J,KAAK6L,GACX,MACJ,KAAK,EACD,OAAO,GAGf,OAAO,IAGAxK,EAAW4L,EAAQ,IAAnB5L,QACH4P,EAAO,IAAI5P,EAAQ,OAAO,EAAE,IAG5BK,EAAQ,GACRsP,EAAW,EAEXF,EAAc,GACdK,EAAiB,GACjBJ,EAAgB,GAChBK,EAAmB,GAEvB5G,EACS,CAEbL,IAAI,EAEJZ,WAAW,SAAoBC,EAAKC,GAC5B,IAAIxM,KAAKsJ,GAAGF,OAGR,MAAM,IAAInH,MAAMsK,GAFhBvM,KAAKsJ,GAAGF,OAAOkD,WAAWC,EAAKC,IAO3CqB,SAAS,SAAUlB,EAAOrD,GAiBlB,OAhBAtJ,KAAKsJ,GAAKA,GAAMtJ,KAAKsJ,IAAM,GAC3BtJ,KAAKiQ,OAAStD,EACd3M,KAAKkQ,MAAQlQ,KAAKmQ,WAAanQ,KAAKoQ,MAAO,EAC3CpQ,KAAK8K,SAAW9K,KAAK6K,OAAS,EAC9B7K,KAAK4K,OAAS5K,KAAKqQ,QAAUrQ,KAAKyP,MAAQ,GAC1CzP,KAAKsQ,eAAiB,CAAC,WACvBtQ,KAAK8N,OAAS,CACVtC,WAAY,EACZC,aAAc,EACdkE,UAAW,EACXC,YAAa,GAEb5P,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC,EAAE,IAE3B7P,KAAKuQ,OAAS,EACPvQ,MAIf2M,MAAM,WACE,IAAI6D,EAAKxQ,KAAKiQ,OAAO,GAkBrB,OAjBAjQ,KAAK4K,QAAU4F,EACfxQ,KAAK6K,SACL7K,KAAKuQ,SACLvQ,KAAKyP,OAASe,EACdxQ,KAAKqQ,SAAWG,EACJA,EAAGf,MAAM,oBAEjBzP,KAAK8K,WACL9K,KAAK8N,OAAO6B,aAEZ3P,KAAK8N,OAAO8B,cAEZ5P,KAAKiO,QAAQD,QACbhO,KAAK8N,OAAO+B,MAAM,KAGtB7P,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAM,GACzBoD,GAIfC,MAAM,SAAUD,GACR,IAAI7B,EAAM6B,EAAGnO,OACTqO,EAAQF,EAAGG,MAAM,iBAErB3Q,KAAKiQ,OAASO,EAAKxQ,KAAKiQ,OACxBjQ,KAAK4K,OAAS5K,KAAK4K,OAAOgG,OAAO,EAAG5Q,KAAK4K,OAAOvI,OAASsM,GAEzD3O,KAAKuQ,QAAU5B,EACf,IAAIkC,EAAW7Q,KAAKyP,MAAMkB,MAAM,iBAChC3Q,KAAKyP,MAAQzP,KAAKyP,MAAMmB,OAAO,EAAG5Q,KAAKyP,MAAMpN,OAAS,GACtDrC,KAAKqQ,QAAUrQ,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAAS,GAExDqO,EAAMrO,OAAS,IACfrC,KAAK8K,UAAY4F,EAAMrO,OAAS,GAEpC,IAAIoM,EAAIzO,KAAK8N,OAAO+B,MAgBpB,OAdA7P,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAac,GACRA,EAAMrO,SAAWwO,EAASxO,OAASrC,KAAK8N,OAAOrC,aAAe,GAC5DoF,EAASA,EAASxO,OAASqO,EAAMrO,QAAQA,OAASqO,EAAM,GAAGrO,OAChErC,KAAK8N,OAAOrC,aAAekD,GAG7B3O,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAACpB,EAAE,GAAIA,EAAE,GAAKzO,KAAK6K,OAAS8D,IAEpD3O,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACnBrC,MAIf8Q,KAAK,WAEG,OADA9Q,KAAKkQ,OAAQ,EACNlQ,MAIf+Q,OAAO,WACC,OAAI/Q,KAAKiO,QAAQ+C,iBACbhR,KAAKmQ,YAAa,EASfnQ,MAPIA,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,mIAAqI9K,KAAKsP,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAQ3BmG,KAAK,SAAU9C,GACPnO,KAAKyQ,MAAMzQ,KAAKyP,MAAMrC,MAAMe,KAIpC+C,UAAU,WACF,IAAIC,EAAOnR,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAASrC,KAAKyP,MAAMpN,QACnE,OAAQ8O,EAAK9O,OAAS,GAAK,MAAM,IAAM8O,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOtR,KAAKyP,MAIhB,OAHI6B,EAAKjP,OAAS,KACdiP,GAAQtR,KAAKiQ,OAAOW,OAAO,EAAG,GAAGU,EAAKjP,UAElCiP,EAAKV,OAAO,EAAE,KAAOU,EAAKjP,OAAS,GAAK,MAAQ,KAAK+O,QAAQ,MAAO,KAIpF9B,aAAa,WACL,IAAIiC,EAAMvR,KAAKkR,YACXM,EAAI,IAAIhM,MAAM+L,EAAIlP,OAAS,GAAGkN,KAAK,KACvC,OAAOgC,EAAMvR,KAAKqR,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAAShC,EAAOiC,GACnB,IAAI3C,EACA2B,EACAiB,EAwDJ,GAtDI3R,KAAKiO,QAAQ+C,kBAEbW,EAAS,CACL7G,SAAU9K,KAAK8K,SACfgD,OAAQ,CACJtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK2P,UAChBlE,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAa5P,KAAK8N,OAAO8B,aAE7BhF,OAAQ5K,KAAK4K,OACb6E,MAAOzP,KAAKyP,MACZmC,QAAS5R,KAAK4R,QACdvB,QAASrQ,KAAKqQ,QACdxF,OAAQ7K,KAAK6K,OACb0F,OAAQvQ,KAAKuQ,OACbL,MAAOlQ,KAAKkQ,MACZD,OAAQjQ,KAAKiQ,OACb3G,GAAItJ,KAAKsJ,GACTgH,eAAgBtQ,KAAKsQ,eAAelD,MAAM,GAC1CgD,KAAMpQ,KAAKoQ,MAEXpQ,KAAKiO,QAAQD,SACb2D,EAAO7D,OAAO+B,MAAQ7P,KAAK8N,OAAO+B,MAAMzC,MAAM,MAItDsD,EAAQjB,EAAM,GAAGA,MAAM,sBAEnBzP,KAAK8K,UAAY4F,EAAMrO,QAE3BrC,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAO6B,UACxBA,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAO8B,YAC1BA,YAAac,EACAA,EAAMA,EAAMrO,OAAS,GAAGA,OAASqO,EAAMA,EAAMrO,OAAS,GAAGoN,MAAM,UAAU,GAAGpN,OAC5ErC,KAAK8N,OAAO8B,YAAcH,EAAM,GAAGpN,QAEpDrC,KAAK4K,QAAU6E,EAAM,GACrBzP,KAAKyP,OAASA,EAAM,GACpBzP,KAAK4R,QAAUnC,EACfzP,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACtBrC,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC7P,KAAKuQ,OAAQvQ,KAAKuQ,QAAUvQ,KAAK6K,SAE1D7K,KAAKkQ,OAAQ,EACblQ,KAAKmQ,YAAa,EAClBnQ,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAMqC,EAAM,GAAGpN,QACzCrC,KAAKqQ,SAAWZ,EAAM,GACtBV,EAAQ/O,KAAK2K,cAAc0C,KAAKrN,KAAMA,KAAKsJ,GAAItJ,KAAM0R,EAAc1R,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAChHrC,KAAKoQ,MAAQpQ,KAAKiQ,SAClBjQ,KAAKoQ,MAAO,GAEZrB,EACA,OAAOA,EACJ,GAAI/O,KAAKmQ,WAAY,CAExB,IAAK,IAAIpJ,KAAK4K,EACV3R,KAAK+G,GAAK4K,EAAO5K,GAErB,OAAO,EAEX,OAAO,GAIfuK,KAAK,WACG,GAAItR,KAAKoQ,KACL,OAAOpQ,KAAKkN,IAMhB,IAAI6B,EACAU,EACAoC,EACA3L,EAPClG,KAAKiQ,SACNjQ,KAAKoQ,MAAO,GAOXpQ,KAAKkQ,QACNlQ,KAAK4K,OAAS,GACd5K,KAAKyP,MAAQ,IAGjB,IADA,IAAIqC,EAAQ9R,KAAK+R,gBACR7R,EAAI,EAAGA,EAAI4R,EAAMzP,OAAQnC,IAE9B,IADA2R,EAAY7R,KAAKiQ,OAAOR,MAAMzP,KAAK8R,MAAMA,EAAM5R,SAC5BuP,GAASoC,EAAU,GAAGxP,OAASoN,EAAM,GAAGpN,QAAS,CAGhE,GAFAoN,EAAQoC,EACR3L,EAAQhG,EACJF,KAAKiO,QAAQ+C,gBAAiB,CAE9B,IAAc,KADdjC,EAAQ/O,KAAKyR,WAAWI,EAAWC,EAAM5R,KAErC,OAAO6O,EACJ,GAAI/O,KAAKmQ,WAAY,CACxBV,GAAQ,EACR,SAGA,OAAO,EAER,IAAKzP,KAAKiO,QAAQ+D,KACrB,MAIZ,OAAIvC,GAEc,KADdV,EAAQ/O,KAAKyR,WAAWhC,EAAOqC,EAAM5L,MAE1B6I,EAKK,KAAhB/O,KAAKiQ,OACEjQ,KAAKkN,IAELlN,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,yBAA2B9K,KAAKsP,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAM3BgE,IAAI,WACI,IAAIL,EAAIzO,KAAKsR,OACb,OAAI7C,GAGOzO,KAAK8O,OAKxBmD,MAAM,SAAgBC,GACdlS,KAAKsQ,eAAevN,KAAKmP,IAIjCC,SAAS,WAED,OADQnS,KAAKsQ,eAAejO,OAAS,EAC7B,EACGrC,KAAKsQ,eAAe8B,MAEpBpS,KAAKsQ,eAAe,IAKvCyB,cAAc,WACN,OAAI/R,KAAKsQ,eAAejO,QAAUrC,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,GACxErC,KAAKqS,WAAWrS,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAAIyP,MAErE9R,KAAKqS,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBnE,GAEpB,OADAA,EAAInO,KAAKsQ,eAAejO,OAAS,EAAIkQ,KAAKC,IAAIrE,GAAK,KAC1C,EACEnO,KAAKsQ,eAAenC,GAEpB,WAKnBsE,UAAU,SAAoBP,GACtBlS,KAAKiS,MAAMC,IAInBQ,eAAe,WACP,OAAO1S,KAAKsQ,eAAejO,QAEnC4L,QAAS,CAAC,oBAAmB,GAC7BtD,cAAe,SAAmBrB,EAAGqJ,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAI/H,OAAS,kBAAoB+H,EAAI7E,OAAOtC,WAAa,oBAAsBmH,EAAI7E,OAAOrC,gBAK5KqG,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,iJAA+E,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WACxXO,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACPhT,KAAKsJ,GAAK,GAGZ,OALAF,EAAOmE,MAAQA,EAIfyF,EAAOrF,UAAYvE,EAAOA,EAAO4J,OAASA,EACnC,IAAIA,EAlsCM,GAusCjBC,EAAQ7J,OAASsK,EACjBT,EAAQD,OAASU,EAAUV,OAC3BC,EAAQvG,MAAQ,WAAc,OAAOgH,EAAUhH,MAAMoD,MAAM4D,EAAWpG,YACtE2F,EAAQC,KAAO,SAAuB/F,GAC7BA,EAAK,KACN2F,QAAQC,IAAI,UAAU5F,EAAK,GAAG,SAC9BgG,EAAQC,KAAK,IAEjB,IAAIC,EAASrD,EAAQ,IAAMsD,aAAatD,EAAQ,IAAQuD,UAAUpG,EAAK,IAAK,QAC5E,OAAO8F,EAAQ7J,OAAOsD,MAAM2G,IAEKrD,WAAiBwD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKrG,MAAM,M,4CC5xClC,cAyEA,IAAImH,EAAe,WACnB,IAAIzN,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAE1E,OAAO4E,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGI,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIqL,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACxxB7L,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,UAAY,EAAE,IAAM,EAAE,IAAI,EAAE,KAAO,EAAE,IAAI,EAAE,SAAW,EAAE,KAAK,GAAG,OAAS,GAAG,GAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAO,GAAG,IAAI,GAAG,IAAI,GAAG,KAAO,GAAG,MAAQ,GAAG,KAAK,GAAG,WAAa,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,MAAQ,GAAG,IAAI,GAAG,IAAM,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAM,GAAG,IAAM,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAM,GAAG,GAAK,GAAG,MAAQ,GAAG,OAAS,GAAG,QAAU,GAAG,OAAS,GAAG,SAAW,GAAG,KAAO,GAAG,QAAU,EAAE,KAAO,GAC9cC,WAAY,CAACC,EAAE,QAAQE,EAAE,MAAMC,EAAE,IAAIC,EAAE,IAAIgC,GAAG,KAAKE,GAAG,KAAKG,GAAG,IAAIC,GAAG,IAAIpC,GAAG,KAAKqC,GAAG,OAAOJ,GAAG,IAAIhC,GAAG,IAAIC,GAAG,OAAOC,GAAG,QAAQC,GAAG,KAAKC,GAAG,aAAaE,GAAG,IAAIC,GAAG,YAAYE,GAAG,IAAIyK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAAMC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,SAASzB,GAAG,UAAU0B,GAAG,SAASC,GAAG,WAAWC,GAAG,QAC9UxL,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG3I,OAAS,EACrB,OAAQ0I,GACR,KAAK,EAE+C,IAAII,EAAmBC,GAEvB,OADAA,GAAe,GACR,CAAC+K,MAAOnL,EAAGE,EAAG,GAAGE,aAAaD,GAGzF,KAAK,EACLH,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACtC,MACA,KAAK,EAAG,KAAK,EAAG,KAAK,GACrBlL,KAAKuL,EAAI,CAACP,EAAGE,IACb,MACA,KAAK,OACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAY,YACPpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,IACtH,MACA,KAAK,OACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAY,YACPpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,IACtH,MACA,KAAK,OACmBpJ,IAArBkJ,EAAGE,GAAIkL,YAAyBpL,EAAGE,GAAIkL,UAAY,YAAYpL,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACxG,MACA,KAAK,OACmBpJ,IAArBkJ,EAAGE,GAAIkL,YAAyBpL,EAAGE,GAAIkL,UAAY,YAAYpL,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACxG,MACA,KAAK,EACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,OAAQ,IAC5E,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,aAAc,IAClF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,SAAU,IAC9E,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,QAAS,IAC7E,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,QAAS,IACnF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAc,IACxF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,OAAQ,IAChF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,aAAc,IACtF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,OAAQ,GAAI,YACpF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,aAAc,GAAI,YAC1F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,OAAQF,EAAGE,IACrF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAcF,EAAGE,IAC3F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,OAAQF,EAAGE,IACrF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAcF,EAAGE,IAC3F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,OAAQF,EAAGE,GAAK,YAC1F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAcF,EAAGE,GAAK,YAChG,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,WAAY,IAChF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,iBAAkB,IACtF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,WAAY,IACpF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,iBAAkB,IAC1F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,WAAYF,EAAGE,IACzF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,iBAAkBF,EAAGE,IAC/F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,WAAYF,EAAGE,IACzF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,EAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,iBAAkBF,EAAGE,IAC/F,MACA,KAAK,GACLE,GAAarI,KAAK,IAAIY,GAAW,aAAa,4CAA4CsH,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,eACpH,MACA,KAAK,GACLT,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACtC,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAIP,EAAGE,EAAG,GACf,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIgL,EAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,EAAoBC,KAAMzL,EAAGE,EAAG,IACtH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIgL,EAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,EAAoBE,MAAO1L,EAAGE,EAAG,IACvH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIgL,EAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,EAAoBG,KAAM3L,EAAGE,EAAG,IACtH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIgL,EAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,EAAoBI,IAAK5L,EAAGE,EAAG,IACrH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIgL,EAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,EAAoBK,IAAK7L,EAAGE,EAAG,IACrH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBC,MAAOhM,EAAGE,EAAG,IACvH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBE,eAAgBjM,EAAGE,EAAG,IAChI,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBG,MAAOlM,EAAGE,EAAG,IACvH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBI,WAAYnM,EAAGE,EAAG,IAC5H,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBK,MAAOpM,EAAGE,EAAG,IACvH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBM,WAAYrM,EAAGE,EAAG,IAC5H,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+L,EAAOrM,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKqM,EAAgBC,IAAKxM,EAAGE,EAAG,IAC7G,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+L,EAAOrM,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKqM,EAAgBE,GAAIzM,EAAGE,EAAG,IAC5G,MACA,KAAK,GACLlL,KAAKuL,EAAIP,EAAGE,GACZ,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAItK,GAAUgK,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAKlK,GAAcY,QACrF,MACA,KAAK,GACL5B,KAAKuL,EAAI,IAAItK,GAAUgK,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAKlK,GAAcQ,QACrF,MACA,KAAK,GAAI,KAAK,GACdxB,KAAKuL,EAAI,IAAItK,GAAUgK,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,IACzE,MACA,KAAK,QACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAY,YAC3BpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,OACnG,MACA,KAAK,QACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAW,YAC1BpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,SAIvGQ,MAAO,CAAC,CAACC,EAAE,EAAEjC,EAAE,EAAEuC,EAAE,EAAEpC,EAAE3C,EAAI2E,GAAG1E,GAAK,CAAC2E,EAAE,CAAC,IAAI,CAACnC,EAAE,CAAC,EAAE,GAAGC,EAAE,CAAC,EAAE,IAAI9C,EAAEM,EAAI,CAAC,EAAE,IAAI,CAACqC,EAAEpC,EAAIuE,EAAE,EAAE9B,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAK,CAAC0B,EAAEpC,EAAIuE,EAAE,GAAG9B,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAK,CAAC+D,EAAE,CAAC,EAAE,IAAI,CAACG,EAAE,GAAGpC,EAAE3C,EAAI2E,GAAG1E,GAAKL,EAAEM,EAAI,CAAC,EAAE,GAAG,CAACyC,EAAE7B,EAAI6D,GAAG5D,IAAMnB,EAAEoB,EAAI,CAAC,EAAE,IAAIpB,EAAEoB,EAAI,CAAC,EAAE,GAAG,CAACmC,GAAG,GAAGG,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,KAAKpB,EAAEoB,EAAI,CAAC,EAAE,KAAK,CAAC8D,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAAC7B,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAAC4B,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAK,CAAC/B,GAAG,CAAC,EAAE,KAAKrD,EAAEoB,EAAI,CAAC,EAAE,KAAKpB,EAAEM,EAAI,CAAC,EAAE,GAAG,CAACyC,EAAE7B,EAAI6D,GAAG5D,IAAMnB,EAAEM,EAAI,CAAC,EAAE,IAAI,CAACqC,EAAEpC,EAAIyC,GAAG,GAAGiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAK,CAAC0B,EAAEpC,EAAIyC,GAAG,GAAGiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAKjB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEsB,EAAI,CAAC,EAAE,KAAK,CAACqB,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK7B,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAM,CAAC6B,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAAC+B,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAK,CAACH,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAKpF,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAM,CAAC4D,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,KAAKpF,EAAEoB,EAAI,CAAC,EAAE,IAAIpB,EAAEoB,EAAI,CAAC,EAAE,IAAIpB,EAAEsB,EAAI,CAAC,EAAE,KAAK,CAAC8D,GAAGtD,EAAIsM,GAAG,CAAC,EAAE,IAAIC,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,GAAK9N,EAAE+N,EAAI,CAAC,EAAE,KAAK,CAACpL,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK7B,EAAE+N,EAAI,CAAC,EAAE,KAAK/N,EAAE+N,EAAI,CAAC,EAAE,KAAK/N,EAAE+N,EAAI,CAAC,EAAE,KAAK,CAAC7I,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAKlF,EAAE+N,EAAI,CAAC,EAAE,IAAI,CAAChL,EAAE7B,EAAI6D,GAAG5D,IAAM,CAACwB,EAAEpC,EAAIuE,EAAE,GAAG9B,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIuC,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,GAAKjB,EAAEoB,EAAI,CAAC,EAAE,KAAKpB,EAAEoB,EAAI,CAAC,EAAE,KAAKpB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGH,GAAG,GAAGI,GAAGtC,IAAMrB,EAAEsB,EAAI,CAAC,EAAE,KAAK,CAACqB,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACc,EAAEpC,EAAIuE,EAAE,GAAGC,GAAGxD,EAAIyB,GAAG,EAAEiC,GAAGzE,EAAI4E,GAAG3E,EAAI4E,GAAG3E,EAAIuC,GAAGtC,EAAI2E,GAAG1E,EAAIsE,GAAG1D,EAAI2B,GAAGtC,EAAIuC,GAAGtC,EAAIwC,GAAGvC,EAAIyC,GAAGxC,EAAIyC,GAAGxC,EAAI2P,GAAG,GAAGC,GAAG,GAAG5B,GAAGxN,EAAI+L,GAAG9L,EAAIwN,GAAGvN,EAAIwN,GAAGvN,EAAIwN,GAAGvN,GAAK,CAACuD,GAAGtD,EAAIoB,GAAG,CAAC,EAAE,IAAImL,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,GAAK,CAAC5K,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAKlD,EAAE+N,EAAI,CAAC,EAAE,IAAI,CAAChL,EAAE7B,EAAI6D,GAAG5D,IAAMnB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACsC,GAAG,GAAGC,GAAGtC,IAAMrB,EAAEgO,EAAI,CAAC,EAAE,IAAI,CAAC5I,GAAGtD,EAAIyM,GAAGtM,EAAIuM,GAAGtM,IAAMlC,EAAEgO,EAAI,CAAC,EAAE,IAAI,CAAC5I,GAAGtD,EAAIyM,GAAGtM,EAAIuM,GAAGtM,IAAMlC,EAAEiO,EAAI,CAAC,EAAE,IAAI,CAACO,GAAGtM,IAAMlC,EAAEiO,EAAI,CAAC,EAAE,IAAI,CAACO,GAAGtM,IAAMlC,EAAE+N,EAAI,CAAC,EAAE,KAAK/N,EAAEkO,EAAI,CAAC,EAAE,IAAI,CAAC9I,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIyM,GAAGtM,EAAIuM,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAM5N,EAAEkO,EAAI,CAAC,EAAE,IAAI,CAAC9I,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIyM,GAAGtM,EAAIuM,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAM5N,EAAEmO,EAAI,CAAC,EAAE,IAAI,CAAC/I,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,IAAMlC,EAAEmO,EAAI,CAAC,EAAE,IAAI,CAAC/I,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,IAAMlC,EAAEmO,EAAI,CAAC,EAAE,IAAI,CAAC/I,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,IAAMlC,EAAEmO,EAAI,CAAC,EAAE,IAAI,CAAC/I,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,IAAMlC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAACoF,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAM5N,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAACoF,GAAGtD,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGtM,EAAIuM,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,EAAImB,GAAGlB,IAAM7N,EAAE+N,EAAI,CAAC,EAAE,KAAK/N,EAAE+N,EAAI,CAAC,EAAE,KAAK/N,EAAE+N,EAAI,CAAC,EAAE,MAChzJxI,eAAgB,CAACzC,EAAE,CAAC,EAAE,IACtB0C,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAI5I,EAAQ,IAAI5B,MAAMsK,GAEtB,MADA1I,EAAM2I,KAAOA,EACP3I,EAJN7D,KAAKqJ,MAAMkD,IAOnBG,MAAO,SAAgBC,GACnB,IAAIC,EAAO5M,KACP6M,EAAQ,CAAC,GAETC,EAAS,CAAC,MACVC,EAAS,GACTrB,EAAQ1L,KAAK0L,MACbd,EAAS,GACTE,EAAW,EACXD,EAAS,EACTmC,EAAa,EACbC,EAAS,EACTC,EAAM,EAENC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GAIpCC,EAAQC,OAAOC,OAAOzN,KAAKuN,OAC3BG,EAAc,CAAEpE,GAAI,IAExB,IAAK,IAAIvC,KAAK/G,KAAKsJ,GACbkE,OAAOG,UAAUC,eAAeP,KAAKrN,KAAKsJ,GAAIvC,KAChD2G,EAAYpE,GAAGvC,GAAK/G,KAAKsJ,GAAGvC,IAIhCwG,EAAMM,SAASlB,EAAOe,EAAYpE,IAClCoE,EAAYpE,GAAGiE,MAAQA,EACvBG,EAAYpE,GAAGF,OAASpJ,KACG,oBAAhBuN,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAOhK,KAAKgL,GAEZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OAQ5C,SAASE,EAAUC,GACftB,EAAMxK,OAASwK,EAAMxK,OAAS,EAAI8L,EAClCrB,EAAOzK,OAASyK,EAAOzK,OAAS8L,EAChCpB,EAAO1K,OAAS0K,EAAO1K,OAAS8L,EATK,oBAA9BT,EAAYpE,GAAGgD,WACtBtM,KAAKsM,WAAaoB,EAAYpE,GAAGgD,WAEjCtM,KAAKsM,WAAakB,OAAOY,eAAepO,MAAMsM,WAqBlD,IAXA,IAUI+B,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAV3EC,EAAM,WACN,IAAIC,EAMJ,MAHqB,kBAFrBA,EAAQxB,EAAMuB,OAAS5B,KAGnB6B,EAAQnC,EAAKrD,SAASwF,IAAUA,GAE7BA,GAGsCC,EAAQ,KAC5C,CAiBT,GAfAT,EAAQ1B,EAAMA,EAAMxK,OAAS,GAGzBrC,KAAKqM,eAAekC,GACpBC,EAASxO,KAAKqM,eAAekC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAGbN,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOF,IAKpB,qBAAXG,IAA2BA,EAAOnM,SAAWmM,EAAO,GAAI,KAC3DS,EAKKC,EAAT,SAAwCX,GAKpC,IAJA,IAAIY,EAActC,EAAMxK,OAAS,EAC7B+M,EAAQ,IAGJ,CAEJ,GAAKnC,EAAO9M,aAAeuL,EAAM6C,GAC7B,OAAOa,EAEX,GAAc,IAAVb,GAAeY,EAAc,EAC7B,OAAO,EAGXZ,EAAQ1B,EADRsC,GAAe,KAEbC,IAnBNC,EAAS,GAuBb,GAAKrC,EA0BMsB,IAAmBpB,IAC1B+B,EAAmBC,EAA+BX,QA3BrC,CAMb,IAAKG,KAJLO,EAAmBC,EAA+BX,GAGlDM,EAAW,GACDnD,EAAM6C,GACRvO,KAAKwJ,WAAWkF,IAAMA,EAAIzB,GAC1B4B,EAAS9L,KAAK,IAAI/C,KAAKwJ,WAAWkF,GAAG,KAIzCW,EADA9B,EAAM+B,aACG,wBAAwBxE,EAAS,GAAG,MAAMyC,EAAM+B,eAAe,eAAeT,EAASU,KAAK,MAAQ,WAAavP,KAAKwJ,WAAW6E,IAAWA,GAAS,IAErJ,wBAAwBvD,EAAS,GAAG,iBAC9BuD,GAAUnB,EAAM,eACJ,KAAKlN,KAAKwJ,WAAW6E,IAAWA,GAAQ,KAEvErO,KAAKsM,WAAW+C,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO/O,KAAKwJ,WAAW6E,IAAWA,EAClCnN,KAAMqM,EAAMzC,SACZ4E,IAAK3B,EACLc,SAAUA,EACVpC,aAAmC,IAArBwC,IAOtB,GAAkB,GAAdjC,EAAiB,CACjB,GAAIqB,IAAWnB,GAAOoB,IAAmBpB,EACrC,MAAM,IAAIjL,MAAMoN,GAAU,gEAI9BxE,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACdO,EAASS,IAIb,IAAyB,IAArBG,EACA,MAAM,IAAIhN,MAAMoN,GAAU,8DAE9BnB,EAASe,GAETX,EAAkBD,GAAUpB,EAAS,KAAOoB,EAC5CA,EAASpB,EACTsB,EAAQ1B,EAAMA,EAAMxK,OAAO,GAC3BmM,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOtB,GACtCD,EAAa,EAIjB,GAAIwB,EAAO,aAAchJ,OAASgJ,EAAOnM,OAAS,EAC9C,MAAM,IAAIJ,MAAM,oDAAoDsM,EAAM,YAAYF,GAG1F,OAAQG,EAAO,IACX,KAAK,EAGD3B,EAAM9J,KAAKsL,GACXvB,EAAO/J,KAAKwK,EAAM3C,QAClBmC,EAAOhK,KAAKwK,EAAMO,QAClBjB,EAAM9J,KAAKyL,EAAO,IAClBH,EAAS,KACJC,GAUDD,EAASC,EACTA,EAAiB,OAVjBzD,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAOR,MAEJ,KAAK,EAoBD,GAhBA2B,EAAM3O,KAAK0K,aAAa8D,EAAO,IAAI,GAGnCQ,EAAMzD,EAAIuB,EAAOA,EAAOzK,OAAOsM,GAE/BK,EAAM/D,GAAK,CACPO,WAAYuB,EAAOA,EAAO1K,QAAQsM,GAAK,IAAInD,WAC3CmE,UAAW5C,EAAOA,EAAO1K,OAAO,GAAGsN,UACnClE,aAAcsB,EAAOA,EAAO1K,QAAQsM,GAAK,IAAIlD,aAC7CmE,YAAa7C,EAAOA,EAAO1K,OAAO,GAAGuN,aAErC5B,IACFgB,EAAM/D,GAAG4E,MAAQ,CAAC9C,EAAOA,EAAO1K,QAAQsM,GAAK,IAAIkB,MAAM,GAAI9C,EAAOA,EAAO1K,OAAO,GAAGwN,MAAM,KAI1E,qBAFjBpB,EAAIzO,KAAK2K,cAAcmF,MAAMd,EAAO,CAACpE,EAAQC,EAAQC,EAAU4C,EAAYpE,GAAIkF,EAAO,GAAI1B,EAAQC,GAAQgD,OAAO5C,KAG7G,OAAOsB,EAIPE,IACA9B,EAAQA,EAAMO,MAAM,GAAG,EAAEuB,EAAI,GAC7B7B,EAASA,EAAOM,MAAM,GAAI,EAAEuB,GAC5B5B,EAASA,EAAOK,MAAM,GAAI,EAAEuB,IAGhC9B,EAAM9J,KAAK/C,KAAK0K,aAAa8D,EAAO,IAAI,IACxC1B,EAAO/J,KAAKiM,EAAMzD,GAClBwB,EAAOhK,KAAKiM,EAAM/D,IAElB2D,EAAWlD,EAAMmB,EAAMA,EAAMxK,OAAO,IAAIwK,EAAMA,EAAMxK,OAAO,IAC3DwK,EAAM9J,KAAK6L,GACX,MAEJ,KAAK,EAED,OAAO,GAKnB,OAAO,IAGA0H,EAAUtG,EAAQ,KAAlBsG,OACP,EAA0CtG,EAAQ,KAA3CuG,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,oBACnB,EAAkCxG,EAAQ,KAAnCsH,EAAP,EAAOA,OAAQC,EAAf,EAAeA,gBACRlB,GAAQrG,EAAQ,KAAhBqG,KACP,GAAmCrG,EAAQ,GAApC/O,GAAP,GAAOA,UAAWD,GAAlB,GAAkBA,cAClB,GAA0CgP,EAAQ,KAA3C8G,GAAP,GAAOA,WAAYC,GAAnB,GAAmBA,oBACZpT,GAAcqM,EAAQ,IAAtBrM,WACHyH,GAAe,GACfwM,GAAI,GAERrK,GACS,CAEbL,IAAI,EAEJZ,WAAW,SAAoBC,EAAKC,GAC5B,IAAIxM,KAAKsJ,GAAGF,OAGR,MAAM,IAAInH,MAAMsK,GAFhBvM,KAAKsJ,GAAGF,OAAOkD,WAAWC,EAAKC,IAO3CqB,SAAS,SAAUlB,EAAOrD,GAiBlB,OAhBAtJ,KAAKsJ,GAAKA,GAAMtJ,KAAKsJ,IAAM,GAC3BtJ,KAAKiQ,OAAStD,EACd3M,KAAKkQ,MAAQlQ,KAAKmQ,WAAanQ,KAAKoQ,MAAO,EAC3CpQ,KAAK8K,SAAW9K,KAAK6K,OAAS,EAC9B7K,KAAK4K,OAAS5K,KAAKqQ,QAAUrQ,KAAKyP,MAAQ,GAC1CzP,KAAKsQ,eAAiB,CAAC,WACvBtQ,KAAK8N,OAAS,CACVtC,WAAY,EACZC,aAAc,EACdkE,UAAW,EACXC,YAAa,GAEb5P,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC,EAAE,IAE3B7P,KAAKuQ,OAAS,EACPvQ,MAIf2M,MAAM,WACE,IAAI6D,EAAKxQ,KAAKiQ,OAAO,GAkBrB,OAjBAjQ,KAAK4K,QAAU4F,EACfxQ,KAAK6K,SACL7K,KAAKuQ,SACLvQ,KAAKyP,OAASe,EACdxQ,KAAKqQ,SAAWG,EACJA,EAAGf,MAAM,oBAEjBzP,KAAK8K,WACL9K,KAAK8N,OAAO6B,aAEZ3P,KAAK8N,OAAO8B,cAEZ5P,KAAKiO,QAAQD,QACbhO,KAAK8N,OAAO+B,MAAM,KAGtB7P,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAM,GACzBoD,GAIfC,MAAM,SAAUD,GACR,IAAI7B,EAAM6B,EAAGnO,OACTqO,EAAQF,EAAGG,MAAM,iBAErB3Q,KAAKiQ,OAASO,EAAKxQ,KAAKiQ,OACxBjQ,KAAK4K,OAAS5K,KAAK4K,OAAOgG,OAAO,EAAG5Q,KAAK4K,OAAOvI,OAASsM,GAEzD3O,KAAKuQ,QAAU5B,EACf,IAAIkC,EAAW7Q,KAAKyP,MAAMkB,MAAM,iBAChC3Q,KAAKyP,MAAQzP,KAAKyP,MAAMmB,OAAO,EAAG5Q,KAAKyP,MAAMpN,OAAS,GACtDrC,KAAKqQ,QAAUrQ,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAAS,GAExDqO,EAAMrO,OAAS,IACfrC,KAAK8K,UAAY4F,EAAMrO,OAAS,GAEpC,IAAIoM,EAAIzO,KAAK8N,OAAO+B,MAgBpB,OAdA7P,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAac,GACRA,EAAMrO,SAAWwO,EAASxO,OAASrC,KAAK8N,OAAOrC,aAAe,GAC5DoF,EAASA,EAASxO,OAASqO,EAAMrO,QAAQA,OAASqO,EAAM,GAAGrO,OAChErC,KAAK8N,OAAOrC,aAAekD,GAG7B3O,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAACpB,EAAE,GAAIA,EAAE,GAAKzO,KAAK6K,OAAS8D,IAEpD3O,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACnBrC,MAIf8Q,KAAK,WAEG,OADA9Q,KAAKkQ,OAAQ,EACNlQ,MAIf+Q,OAAO,WACC,OAAI/Q,KAAKiO,QAAQ+C,iBACbhR,KAAKmQ,YAAa,EASfnQ,MAPIA,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,mIAAqI9K,KAAKsP,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAQ3BmG,KAAK,SAAU9C,GACPnO,KAAKyQ,MAAMzQ,KAAKyP,MAAMrC,MAAMe,KAIpC+C,UAAU,WACF,IAAIC,EAAOnR,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAASrC,KAAKyP,MAAMpN,QACnE,OAAQ8O,EAAK9O,OAAS,GAAK,MAAM,IAAM8O,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOtR,KAAKyP,MAIhB,OAHI6B,EAAKjP,OAAS,KACdiP,GAAQtR,KAAKiQ,OAAOW,OAAO,EAAG,GAAGU,EAAKjP,UAElCiP,EAAKV,OAAO,EAAE,KAAOU,EAAKjP,OAAS,GAAK,MAAQ,KAAK+O,QAAQ,MAAO,KAIpF9B,aAAa,WACL,IAAIiC,EAAMvR,KAAKkR,YACXM,EAAI,IAAIhM,MAAM+L,EAAIlP,OAAS,GAAGkN,KAAK,KACvC,OAAOgC,EAAMvR,KAAKqR,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAAShC,EAAOiC,GACnB,IAAI3C,EACA2B,EACAiB,EAwDJ,GAtDI3R,KAAKiO,QAAQ+C,kBAEbW,EAAS,CACL7G,SAAU9K,KAAK8K,SACfgD,OAAQ,CACJtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK2P,UAChBlE,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAa5P,KAAK8N,OAAO8B,aAE7BhF,OAAQ5K,KAAK4K,OACb6E,MAAOzP,KAAKyP,MACZmC,QAAS5R,KAAK4R,QACdvB,QAASrQ,KAAKqQ,QACdxF,OAAQ7K,KAAK6K,OACb0F,OAAQvQ,KAAKuQ,OACbL,MAAOlQ,KAAKkQ,MACZD,OAAQjQ,KAAKiQ,OACb3G,GAAItJ,KAAKsJ,GACTgH,eAAgBtQ,KAAKsQ,eAAelD,MAAM,GAC1CgD,KAAMpQ,KAAKoQ,MAEXpQ,KAAKiO,QAAQD,SACb2D,EAAO7D,OAAO+B,MAAQ7P,KAAK8N,OAAO+B,MAAMzC,MAAM,MAItDsD,EAAQjB,EAAM,GAAGA,MAAM,sBAEnBzP,KAAK8K,UAAY4F,EAAMrO,QAE3BrC,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAO6B,UACxBA,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAO8B,YAC1BA,YAAac,EACAA,EAAMA,EAAMrO,OAAS,GAAGA,OAASqO,EAAMA,EAAMrO,OAAS,GAAGoN,MAAM,UAAU,GAAGpN,OAC5ErC,KAAK8N,OAAO8B,YAAcH,EAAM,GAAGpN,QAEpDrC,KAAK4K,QAAU6E,EAAM,GACrBzP,KAAKyP,OAASA,EAAM,GACpBzP,KAAK4R,QAAUnC,EACfzP,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACtBrC,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC7P,KAAKuQ,OAAQvQ,KAAKuQ,QAAUvQ,KAAK6K,SAE1D7K,KAAKkQ,OAAQ,EACblQ,KAAKmQ,YAAa,EAClBnQ,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAMqC,EAAM,GAAGpN,QACzCrC,KAAKqQ,SAAWZ,EAAM,GACtBV,EAAQ/O,KAAK2K,cAAc0C,KAAKrN,KAAMA,KAAKsJ,GAAItJ,KAAM0R,EAAc1R,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAChHrC,KAAKoQ,MAAQpQ,KAAKiQ,SAClBjQ,KAAKoQ,MAAO,GAEZrB,EACA,OAAOA,EACJ,GAAI/O,KAAKmQ,WAAY,CAExB,IAAK,IAAIpJ,KAAK4K,EACV3R,KAAK+G,GAAK4K,EAAO5K,GAErB,OAAO,EAEX,OAAO,GAIfuK,KAAK,WACG,GAAItR,KAAKoQ,KACL,OAAOpQ,KAAKkN,IAMhB,IAAI6B,EACAU,EACAoC,EACA3L,EAPClG,KAAKiQ,SACNjQ,KAAKoQ,MAAO,GAOXpQ,KAAKkQ,QACNlQ,KAAK4K,OAAS,GACd5K,KAAKyP,MAAQ,IAGjB,IADA,IAAIqC,EAAQ9R,KAAK+R,gBACR7R,EAAI,EAAGA,EAAI4R,EAAMzP,OAAQnC,IAE9B,IADA2R,EAAY7R,KAAKiQ,OAAOR,MAAMzP,KAAK8R,MAAMA,EAAM5R,SAC5BuP,GAASoC,EAAU,GAAGxP,OAASoN,EAAM,GAAGpN,QAAS,CAGhE,GAFAoN,EAAQoC,EACR3L,EAAQhG,EACJF,KAAKiO,QAAQ+C,gBAAiB,CAE9B,IAAc,KADdjC,EAAQ/O,KAAKyR,WAAWI,EAAWC,EAAM5R,KAErC,OAAO6O,EACJ,GAAI/O,KAAKmQ,WAAY,CACxBV,GAAQ,EACR,SAGA,OAAO,EAER,IAAKzP,KAAKiO,QAAQ+D,KACrB,MAIZ,OAAIvC,GAEc,KADdV,EAAQ/O,KAAKyR,WAAWhC,EAAOqC,EAAM5L,MAE1B6I,EAKK,KAAhB/O,KAAKiQ,OACEjQ,KAAKkN,IAELlN,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,yBAA2B9K,KAAKsP,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAM3BgE,IAAI,WACI,IAAIL,EAAIzO,KAAKsR,OACb,OAAI7C,GAGOzO,KAAK8O,OAKxBmD,MAAM,SAAgBC,GACdlS,KAAKsQ,eAAevN,KAAKmP,IAIjCC,SAAS,WAED,OADQnS,KAAKsQ,eAAejO,OAAS,EAC7B,EACGrC,KAAKsQ,eAAe8B,MAEpBpS,KAAKsQ,eAAe,IAKvCyB,cAAc,WACN,OAAI/R,KAAKsQ,eAAejO,QAAUrC,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,GACxErC,KAAKqS,WAAWrS,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAAIyP,MAErE9R,KAAKqS,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBnE,GAEpB,OADAA,EAAInO,KAAKsQ,eAAejO,OAAS,EAAIkQ,KAAKC,IAAIrE,GAAK,KAC1C,EACEnO,KAAKsQ,eAAenC,GAEpB,WAKnBsE,UAAU,SAAoBP,GACtBlS,KAAKiS,MAAMC,IAInBQ,eAAe,WACP,OAAO1S,KAAKsQ,eAAejO,QAEnC4L,QAAS,CAAC,oBAAmB,GAC7BtD,cAAe,SAAmBrB,EAAGqJ,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAAE5S,KAAKiS,MAAM,UAAW2F,GAAI,GACjC,MACA,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAAGA,IAASjF,EAAI/H,OAAU5K,KAAKiS,MAAM,UAC1C,MACA,KAAK,EAIe,OAHAjS,KAAKiS,MAAM,WACXU,EAAI/H,OAAQgN,GACZA,GAAM,GACC,GAG3B,KAAK,EAAE5X,KAAKiS,MAAM,UAAW2F,GAAI,GACjC,MACA,KAAK,EAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAAIA,IAASjF,EAAI/H,OAAU5K,KAAKiS,MAAM,UAC3C,MACA,KAAK,GAIe,OAHAjS,KAAKiS,MAAM,WACXU,EAAI/H,OAAQgN,GACZA,GAAM,GACC,GAG3B,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACL,MACA,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG9E,QAAQC,IAAI,+BAA8BJ,EAAI/H,OAAS,kBAAoB+H,EAAI7E,OAAOtC,WAAa,oBAAsBmH,EAAI7E,OAAOrC,gBAI5IqG,MAAO,CAAC,YAAY,aAAa,gBAAgB,gBAAgB,gBAAgB,gBAAgB,iBAAiB,aAAa,YAAY,aAAa,gBAAgB,gBAAgB,gBAAgB,gBAAgB,iBAAiB,aAAa,aAAa,WAAW,aAAa,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,eAAe,WAAW,WAAW,UAAU,WAAW,cAAc,UAAU,WAAW,WAAW,WAAW,UAAU,UAAU,aAAa,cAAc,cAAc,WAAW,gBAAgB,oBAAoB,qBAAqB,eAAe,eAAe,mBAAmB,eAAe,uCAAiC,UAAU,WAC3rhT,KAAKsJ,GAAK,GAGZ,OALAF,EAAOmE,MAAQA,GAIfyF,GAAOrF,UAAYvE,EAAOA,EAAO4J,OAASA,GACnC,IAAIA,GA53BQ,GAi4BnBC,EAAQ7J,OAASmL,EACjBtB,EAAQD,OAASuB,EAAYvB,OAC7BC,EAAQvG,MAAQ,WAAc,OAAO6H,EAAY7H,MAAMoD,MAAMyE,EAAajH,YAC1E2F,EAAQC,KAAO,SAAuB/F,GAC7BA,EAAK,KACN2F,QAAQC,IAAI,UAAU5F,EAAK,GAAG,SAC9BgG,EAAQC,KAAK,IAEjB,IAAIC,EAASrD,EAAQ,IAAMsD,aAAatD,EAAQ,IAAQuD,UAAUpG,EAAK,IAAK,QAC5E,OAAO8F,EAAQ7J,OAAOsD,MAAM2G,IAEKrD,WAAiBwD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKrG,MAAM,M,yHCn9BrBkJ,EAAb,WAKI,WACOpV,EACAC,EACAiE,EACAyS,EACAC,EACA1B,GAAsB,yBALtBlV,OAKqB,KAJrBC,SAIqB,KAHrBiE,KAGqB,KAFrByS,aAEqB,KADrBC,aACqB,KAArB1B,YAAqB,KAT5B2B,WAS4B,OAR5BC,mBAQ4B,EACxBhY,KAAK+X,OAAS,EACd/X,KAAKgY,eAAiB,EAb9B,+CAgBI,SAAmBpU,GACf5D,KAAKoW,UAAYxS,IAjBzB,yBAoBI,SAAmB1B,GAEf,IAAK,IAAMgC,KADXhC,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKoF,GAAGjF,WAAa,QACzFH,KAAK8X,WACnB5V,EAAQlC,KAAK8X,WAAW5T,GAAK+T,YAAY/V,GACzCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAlD,SAA+EH,KAAK8X,WAAW5T,GAAKhD,KAAKf,WAAa,IAAMH,KAAK8X,WAAW5T,GAAK/C,OAAOhB,WAAa,MAElL,OAAO+B,MA1Bf,M,uICGYsU,E,uCAAAA,O,eAAAA,I,iBAAAA,I,eAAAA,I,aAAAA,I,cAAAA,M,KAQL,IAAMD,EAAb,WAEI,WACWrV,EACAC,EACA+W,EACAC,EACAC,EACAC,GAAc,yBALdnX,OAKa,KAJbC,SAIa,KAHb+W,UAGa,KAFbC,UAEa,KADbC,gBACa,KAAbC,MARf,2CAWI,SAAe/W,EAAcC,GAEzB,IAAI+W,EAAWtY,KAAKkY,QAAQK,QAAQjX,EAAKC,GACrCiX,EAAWxY,KAAKmY,QAAQI,QAAQjX,EAAKC,GAEzC,GAAI+W,EAAS3W,OAASX,gBAAcyX,MAAQD,EAAS7W,OAASX,gBAAcyX,KACxE,MAAM,IAAIxW,MAAM,8DAAgEuW,EAAS7W,KAAO,iBAAmB6W,EAAS7W,KAAO,YAAc3B,KAAKkB,KAAO,WAAalB,KAAKmB,QAC5K,GAAKmX,EAAS3W,OAASX,gBAAcY,QAAU4W,EAAS7W,OAASX,gBAAcY,QAAW5B,KAAKoY,gBAAkB5B,EAAoBC,KAErI,IAAK6B,EAAS3W,OAASX,gBAAcQ,QAAYgX,EAAS7W,OAASX,gBAAcQ,OAAS,CAE7F,GAAIxB,KAAKoY,gBAAkB5B,EAAoBC,KAgB3C,OAZA3W,IAAWqC,aAAa,uCACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBqY,EAASlW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBuY,EAASpW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,QAAUH,IAAWG,EAAI,GAAK,QAAUH,IAAWG,EAAI,GAAK,KACzGH,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,QAAUL,IAAWG,EAAI,KAI1F,CAAEwB,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcQ,OAAQY,GAAItC,IAAWiB,cAC3F,GAAIf,KAAKoY,gBAAkB5B,EAAoBE,MAelD,OAZA5W,IAAWqC,aAAa,wCACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBqY,EAASlW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBuY,EAASpW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,QAAUH,IAAWG,EAAI,GAAK,QAAUH,IAAWG,EAAI,GAAK,KACzGH,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,QAAUL,IAAWG,EAAI,KAI1F,CAAEwB,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcQ,OAAQY,GAAItC,IAAWiB,cAC3F,GAAIf,KAAKoY,gBAAkB5B,EAAoBG,KAclD,OAXA7W,IAAWqC,aAAa,iDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBqY,EAASlW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBuY,EAASpW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,QAAUH,IAAWG,EAAI,GAAK,QAAUH,IAAWG,EAAI,GAAK,KACzGH,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,QAAUL,IAAWG,EAAI,KAG1F,CAAEwB,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcQ,OAAQY,GAAItC,IAAWiB,cAC3F,GAAIf,KAAKoY,gBAAkB5B,EAAoBI,IAAK,CAEvD,GAAIlV,OAAO8W,EAAS/W,QAAU,EAe1B,OAZA3B,IAAWqC,aAAa,2CACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBqY,EAASlW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBuY,EAASpW,GAAK,MAC9EtC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,QAAUH,IAAWG,EAAI,GAAK,QAAUH,IAAWG,EAAI,GAAK,KACzGH,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,QAAUL,IAAWG,EAAI,KAI1F,CAAEwB,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcQ,OAAQY,GAAItC,IAAWiB,cAE9F,MAAM,IAAIkB,MAAM,6BAA+BuW,EAAW,8CAAgDxY,KAAKkB,KAAO,WAAalB,KAAKmB,QAGzI,GAAInB,KAAKoY,gBAAkB5B,EAAoBK,IAClD,MAAO,CAAEpV,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcQ,OAAQY,IAAK,GAEpF,MAAM,IAAIH,MAAM,gDAAkDjC,KAAKqY,IAAM,YAAcrY,KAAKkB,KAAO,WAAalB,KAAKmB,QAI7H,MAAM,IAAIc,MAAM,8DAAgEuW,EAAS7W,KAAO,iBAAmB6W,EAAS7W,KAAO,YAAc3B,KAAKkB,KAAO,WAAalB,KAAKmB,QAhF/K,MAAO,CAAEM,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcY,OAAQQ,IAAK,KAnBhG,yBAwGI,SAAmBF,GAMf,OALAA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKqY,IAAIlY,WAAa,QAC5G+B,EAAQlC,KAAKkY,QAAQD,YAAY/V,GACjCA,EAAQlC,KAAKmY,QAAQF,YAAY/V,GACjCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKkY,QAAQhX,KAAO,IAAMlB,KAAKkY,QAAQ/W,OAAOhB,WAAa,MAC9I+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKmY,QAAQjX,KAAO,IAAMlB,KAAKmY,QAAQhX,OAAOhB,WAAa,UA7GtJ,M,+HCRYoX,E,uCAAAA,O,aAAAA,I,YAAAA,M,KAKL,IAAMD,EAAb,WAEI,WACWpW,EACAC,EACA+W,EACAC,EACAC,EACAC,GAAc,yBALdnX,OAKa,KAJbC,SAIa,KAHb+W,UAGa,KAFbC,UAEa,KADbC,gBACa,KAAbC,MARf,2CAUI,SAAe/W,EAAcC,GAEzB,IAAI+W,EAAWtY,KAAKkY,QAAQK,QAAQjX,EAAKC,GAEzC,GAAI+W,EAAS3W,OAASX,gBAAc0X,KAAM,CAEtC,IAAuB,IAAnBJ,EAAS7W,OAAmBzB,KAAKoY,gBAAkBb,EAAgBC,IAOnE,OALA1X,IAAWqC,aAAa,+CACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAGjE,CAAEsB,MAAO6W,EAAS7W,MAAOE,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,cACtE,IAAuB,IAAnBuX,EAAS7W,OAAkBzB,KAAKoY,gBAAkBb,EAAgBE,GAOzE,OALA3X,IAAWqC,aAAa,+CACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAGjE,CAAEsB,MAAO6W,EAAS7W,MAAOE,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,cAG7E,IAAIyX,EAAWxY,KAAKmY,QAAQI,QAAQjX,EAAKC,GAEzC,GAAIiX,EAAS7W,OAASX,gBAAc0X,KAAM,CAEtC,GAAI1Y,KAAKoY,gBAAkBb,EAAgBC,IAAK,CAC5C,IAAMmB,EAASL,EAAS7W,OAAS+W,EAAS/W,MAY1C,OAVA3B,IAAWqC,aAAa,4CACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,kBAAoBqY,EAAS7W,MAAQ,IAAM,KAAO,MAC/F3B,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,kBAAoBuY,EAAS/W,MAAQ,IAAM,KAAO,MAC/F3B,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,QAAUH,IAAWG,EAAI,GAAK,SAAWH,IAAWG,EAAI,GAAK,KAC1GH,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,QAAUL,IAAWG,EAAI,KAE1F,CAAEwB,MAAOkX,EAAQhX,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,cAC9D,GAAIf,KAAKoY,gBAAkBb,EAAgBE,GAAI,CAClD,IAAMkB,EAASL,EAAS7W,OAAS+W,EAAS/W,MAY1C,OAVA3B,IAAWqC,aAAa,4CACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,kBAAoBqY,EAAS7W,MAAQ,IAAM,KAAO,MAC/F3B,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,kBAAoBuY,EAAS/W,MAAQ,IAAM,KAAO,MAC/F3B,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,QAAUH,IAAWG,EAAI,GAAK,SAAWH,IAAWG,EAAI,GAAK,KAC1GH,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,QAAUL,IAAWG,EAAI,KAE1F,CAAEwB,MAAOkX,EAAQhX,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,cAEjE,MAAM,IAAIkB,MAAM,gDAAkDjC,KAAKqY,IAAM,YAAcrY,KAAKkB,KAAO,WAAalB,KAAKmB,QAI7H,MAAM,IAAIc,MAAM,8DAAgEuW,EAAS7W,KAAO,UAAY3B,KAAKkB,KAAO,WAAalB,KAAKmB,QAK9I,MAAM,IAAIc,MAAM,8DAAgEqW,EAAS3W,KAAO,UAAY3B,KAAKkB,KAAO,WAAalB,KAAKmB,UA5EtJ,yBAkFI,SAAmBe,GAMf,OALAA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKqY,IAAIlY,WAAa,QAC5G+B,EAAQlC,KAAKkY,QAAQD,YAAY/V,GACjCA,EAAQlC,KAAKmY,QAAQF,YAAY/V,GACjCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKkY,QAAQhX,KAAO,IAAMlB,KAAKkY,QAAQ/W,OAAOhB,WAAa,MAC9I+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKmY,QAAQjX,KAAO,IAAMlB,KAAKmY,QAAQhX,OAAOhB,WAAa,UAvFtJ,M,kHCHakW,EAAb,WAKI,WACWnV,EACAC,EACAyX,EACAC,GACR,yBAJQ3X,OAIT,KAHSC,SAGT,KAFSyX,YAET,KADSC,WACT,KARFrW,YAQE,OAPFsW,oBAOE,EACE9Y,KAAKwC,OAAS,GACdxC,KAAK8Y,eAAiB,GAZ9B,sDAeI,WAEI,IAFmC,EAE/BC,EAAqB,GAFU,cAGd/Y,KAAK4Y,WAHS,IAGnC,2BAAqC,CAAC,IAA3BI,EAA0B,QAEjC,GAA0B,UAAtBA,EAAOnB,WAAwB,CAE/B,KAAIkB,EAAS1W,OAAS,GAGlB,MAAM,IAAIJ,MAAM,mEAAqE+W,EAAO9X,KAAO,WAAa8X,EAAO7X,QAFvH4X,EAAS3G,WAKb2G,EAAShW,KAAKiW,IAba,8BAgBnC,OAAOD,IA/Bf,wBAkCI,WAEI,IAFyB,EAErBvW,EAAiB,GAFI,cAIHxC,KAAKwC,QAJF,IAIzB,2BAAmC,CAC/BA,GAD+B,SAJV,8BAOzB,OAAOA,IAzCf,qBA4CI,SAAelB,EAAcC,GAIzB,OAHAvB,KAAKiZ,mBACLjZ,KAAK4Y,UAAY5Y,KAAKkZ,qBAEA,QAAlBlZ,KAAK6Y,UA8CL7Y,KAAKwC,OAAS,GACdxC,KAAKmZ,SAAS7X,EAAK,EAAGC,GACf,CAAEE,MAAOzB,KAAKwC,OAAQb,KAAMX,gBAAcyX,KAAOrW,IAAK,KA9CzDpC,KAAK4Y,UAAUvW,OAAS,GAAKf,EAAIkC,cAAcnB,OAAS,IAEpDf,EAAIgC,gBAAkBtD,KAAK4Y,UAAU,GAAGxT,IAAuC,SAAjCpF,KAAK4Y,UAAU,GAAGf,YAE3B,KAAjC/X,IAAWQ,mBACXR,IAAWsZ,wBAEftZ,IAAWqC,aAAa,8CACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBqB,EAAIwE,MAAQ,MAC5EhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBD,KAAK4Y,UAAU,GAAGb,MAAQ,MAC1FjY,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAkBrC,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAkBrC,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,sBACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,aAC7CH,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,mBAAqBH,IAAWG,EAAI,GAAK,QACtFH,IAAWG,IAEXH,IAAWqC,aAAa,QAAUrC,IAAWG,EAAI,GAAK,iBACtDH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAG3Df,KAAKqZ,sBAAsB/X,EAAK,KAE5BtB,KAAK4Y,UAAUvW,OAAS,EACxBrC,KAAKmZ,SAAS7X,EAAK,GAEnBtB,KAAK8C,eAAexB,EAAK,MAGM,aAAhCtB,KAAK4Y,UAAU,GAAGxC,WACzBpW,KAAKmZ,SAAS7X,EAAK,IASxB,CAAEG,MAAOzB,KAAKgD,aAAcrB,KAAMX,gBAAcY,OAASQ,IAAK,MAlG7E,sBAqGI,SAAiBa,EAAmBqW,EAAsB/X,GAEtD,QAAqBO,IAAjBP,EAA4B,CAE5B,GAAgD,WAA5CvB,KAAK4Y,UAAUU,GAAczB,YAAsE,SAA3C7X,KAAK4Y,UAAUU,GAAclD,UAkBrF,MAAM,IAAInU,MAAM,qCAAuCjC,KAAK4Y,UAAUU,GAAclU,IAhBhFpF,KAAK4Y,UAAUvW,OAASiX,EAAe,EACvCtZ,KAAKmZ,SAASlW,EAAUqW,EAAe,EAAG/X,GAGpB,QAAlBvB,KAAK6Y,SACL7Y,KAAKwC,OAAOO,KAAK,CAAEtB,MAAOF,EAAaH,MAAMmC,WAAW,IAAM,IAAK5B,KAAMX,gBAAcY,SAGxC,SAA3C5B,KAAK4Y,UAAUU,GAAclD,UAC7BpW,KAAKwC,OAAOO,KAAKxB,EAAaH,MAAMmC,WAAW,IAAM,IAAM,MAE3DvD,KAAKwC,OAAOO,KAAKxB,EAAa+B,cAAgB,OAAU/B,EAAaH,MAAMmC,WAAW,IAAM,IAAM,YAUlH,GAAgD,aAA5CvD,KAAK4Y,UAAUU,GAAczB,WAA2B,CAGnB,KAAjC/X,IAAWa,mBACXb,IAAWyZ,0BAEfzZ,IAAWqC,aAAa,wDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBD,KAAK4Y,UAAUU,GAAcvB,MAAQ,MACrGjY,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,wBACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAG/D,IAAMsC,EAAOJ,EAASuW,YAAYxZ,KAAK4Y,UAAUU,GAAclU,IAC/D,GAAY,MAAR/B,EAEIrD,KAAKyZ,sBAAsBxW,EAAUI,EAAMiW,KAEvCtZ,KAAK4Y,UAAUvW,OAASiX,EAAe,EACvCtZ,KAAKmZ,SAASlW,EAAUqW,EAAe,EAAGjW,GAGpB,QAAlBrD,KAAK6Y,SACL7Y,KAAKwC,OAAOO,KAAK,CAAEtB,MAAO4B,EAAKjC,MAAMmC,WAAW,IAAM,IAAK5B,KAAMX,gBAAcY,UAE3C,KAAhC9B,IAAWc,kBACXd,IAAW4Z,wBAEf5Z,IAAWqC,aAAa,iDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBoD,EAAKyC,MAAQ,MAC7EhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBoD,EAAK0C,OAAS,MAC9EjG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,4BACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,2BACxBnC,KAAKwC,OAAOO,KAAKM,EAAKC,cAAgB,OAAUD,EAAKjC,MAAMmC,WAAW,IAAM,IAAM,cAI3F,GAAIN,EAASO,cAAcnB,OAAS,GAAgD,aAA3CrC,KAAK4Y,UAAUU,GAAclD,WAA4BpW,KAAK4Y,UAAUvW,SAAWiX,EAAe,EAAG,CAAC,IAAD,gBAEzHrW,EAASO,eAFgH,IAEjJ,2BAAgD,CAAC,IAAtCmW,EAAqC,QAC5C3Z,KAAKmZ,SAASQ,EAAWL,IAHoH,qCAOlJ,GAAgD,mBAA5CtZ,KAAK4Y,UAAUU,GAAczB,YAEpC,GAA+C,aAA3C7X,KAAK4Y,UAAUU,GAAclD,WAA4BpW,KAAK4Y,UAAUvW,SAAWiX,EAAe,EAElGtZ,KAAK4Z,wBAAwB3W,QAI7B,GAAIA,EAASG,cAAcf,OAAS,EAAG,CAAC,IAAD,gBAEhBY,EAASG,eAFO,IAEnC,2BAA2C,CAAC,IAAjCC,EAAgC,QAEnCrD,KAAKyZ,sBAAsBxW,EAAUI,EAAMiW,KAEvCtZ,KAAK4Y,UAAUvW,OAASiX,EAAe,EACvCtZ,KAAKmZ,SAASlW,EAAUqW,EAAe,EAAGjW,GAGpB,QAAlBrD,KAAK6Y,SACL7Y,KAAKwC,OAAOO,KAAK,CAAEtB,MAAO4B,EAAKjC,MAAMmC,WAAW,IAAM,IAAK5B,KAAMX,gBAAcY,SAE/E5B,KAAKwC,OAAOO,KAAKM,EAAKC,cAAgB,OAAUD,EAAKjC,MAAMmC,WAAW,IAAM,IAAM,SAb/D,qCAqBxC,GAAgD,UAA5CvD,KAAK4Y,UAAUU,GAAczB,WAAwB,CAE5D,GAAI7X,KAAK4Y,UAAUvW,SAAWiX,EAAe,EA8BzC,MAAM,IAAIrX,MAAM,wGA5B+B,aAA3CjC,KAAK4Y,UAAUU,GAAclD,UAEN,KAAnBnT,EAASf,QAEsB,KAA3BpC,IAAWM,aACXN,IAAW+Z,mBAEf/Z,IAAWqC,aAAa,8DACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBgD,EAAS8C,OAAS,MAElFjG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAkBrC,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,kBACxBrC,IAAWqC,aAAa,kDACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAE/Df,KAAKwC,OAAOO,KAAKE,EAASf,MAAQ,OAItClC,KAAK8Z,qBAAqB7W,QAO/B,GAAgD,WAA5CjD,KAAK4Y,UAAUU,GAAczB,WAEhC7X,KAAK4Y,UAAUvW,OAASiX,EAAe,EACvCtZ,KAAKmZ,SAASlW,EAAUqW,EAAe,GAEvCtZ,KAAK8C,eAAeG,EAAU,SAG/B,GAAgD,eAA5CjD,KAAK4Y,UAAUU,GAAczB,YAEpC,GAAI5U,EAASO,cAAcnB,OAAS,EAAG,CAAC,IAAD,gBAEXY,EAASO,eAFE,IAEnC,2BAAgD,CAAC,IAAtCC,EAAqC,QAExCzD,KAAK+Z,uBAAuB9W,EAAUQ,EAAW6V,KAE7CtZ,KAAK4Y,UAAUvW,OAASiX,EAAe,EACvCtZ,KAAKmZ,SAAS1V,EAAW6V,EAAe,GAExCtZ,KAAK8C,eAAeW,EAAW,MATR,oCAgBpC,IAAgD,SAA5CzD,KAAK4Y,UAAUU,GAAczB,WAkDpC,MAAM,IAAI5V,MAAM,mCAAqCjC,KAAK4Y,UAAUU,GAAczB,WAAa,gBAAkB7X,KAAK4Y,UAAUU,GAAczB,WAA9H,uCACA7X,KAAK4Y,UAAUU,GAAcpY,KAAO,cAAgBlB,KAAK4Y,UAAUU,GAAcnY,QAjDjG,GAAI8B,EAASO,cAAcnB,OAAS,EAAG,CAAC,IAAD,gBAEXY,EAASO,eAFE,IAEnC,2BAAgD,CAAC,IAAtCC,EAAqC,QAExCA,EAAUH,gBAAkBtD,KAAK4Y,UAAUU,GAAclU,IAGpB,KAAjCtF,IAAWQ,mBACXR,IAAWsZ,wBAEftZ,IAAWqC,aAAa,8CACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBwD,EAAUqC,MAAQ,MAClFhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBD,KAAK4Y,UAAUU,GAAcvB,MAAQ,MACrGjY,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAkBrC,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAkBrC,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,sBACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,aAC7CH,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,mBAAqBH,IAAWG,EAAI,GAAK,QACtFH,IAAWG,IAEXH,IAAWqC,aAAa,QAAUrC,IAAWG,EAAI,GAAK,iBACtDH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAG3Df,KAAK+Z,uBAAuB9W,EAAUQ,EAAW6V,KAE7CtZ,KAAK4Y,UAAUvW,OAASiX,EAAe,EACvCtZ,KAAKmZ,SAAS1V,EAAW6V,EAAe,GAExCtZ,KAAK8C,eAAeW,EAAW,MAGW,aAA3CzD,KAAK4Y,UAAUU,GAAclD,WACpCpW,KAAKmZ,SAAS1V,EAAW6V,IA1CE,mCAvRvD,kCA6UI,SAA6BrW,GAuBzB,GArBuB,KAAnBA,EAASf,QAEsB,KAA3BpC,IAAWM,aACXN,IAAW+Z,mBAEf/Z,IAAWqC,aAAa,8DACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBgD,EAAS8C,OAAS,MAElFjG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAkBrC,IAAWG,EAAK,SAAWH,IAAWG,EAAI,GAAK,KACzFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,kBACxBrC,IAAWqC,aAAa,kDACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAE/Df,KAAKwC,OAAOO,KAAKE,EAASf,MAAQ,OAGlCe,EAASO,cAAcnB,OAAS,EAAG,CAAC,IAAD,gBAEXY,EAASO,eAFE,IAEnC,2BAAgD,CAAC,IAAtCC,EAAqC,QAC5CzD,KAAK8Z,qBAAqBrW,IAHK,kCApW/C,qCA4WI,SAAgCR,GAAoB,IAAD,gBAE5BA,EAASG,eAFmB,IAE/C,2BAA2C,CAAC,IAAjCC,EAAgC,QAEjB,QAAlBrD,KAAK6Y,SACL7Y,KAAKwC,OAAOO,KAAK,CAAEtB,MAAO4B,EAAKjC,MAAMmC,WAAW,IAAM,IAAK5B,KAAMX,gBAAcY,UAG3C,KAAhC9B,IAAWc,kBACXd,IAAW4Z,wBAEf5Z,IAAWqC,aAAa,iDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBoD,EAAKyC,MAAQ,MAC7EhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBoD,EAAK0C,OAAS,MAC9EjG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,4BACxBrC,IAAWqC,aAAa,kDACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAE/Df,KAAKwC,OAAOO,KAAKM,EAAKC,cAAgB,OAAUD,EAAKjC,MAAMmC,WAAW,IAAM,IAAM,SA3B3C,8BA+B/C,GAAIN,EAASO,cAAcnB,OAAS,EAAG,CAAC,IAAD,gBAEXY,EAASO,eAFE,IAEnC,2BAAgD,CAAC,IAAtCC,EAAqC,QAC5CzD,KAAK4Z,wBAAwBnW,IAHE,kCA3Y/C,4BAoZI,SAAuBR,EAAmBC,GAEtC,GAAsB,QAAlBlD,KAAK6Y,SAOL7Y,KAAKwC,OAAOO,KAAK,CAAEtB,MAAOwB,EAAUtB,KAAMX,gBAAc4B,WAErD,CAEiC,KAAhC9C,IAAWU,kBACXV,IAAWka,wBAEfla,IAAWqC,aAAa,oDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBgD,EAAS6C,MAAQ,MACjFhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,4BACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAE/D,IAhBG,EAgBCoC,EAAY,GAhBb,cAiBgBF,EAASG,eAjBzB,IAiBH,2BAA2C,CAAC,IAAjCC,EAAgC,QACvCF,GAAaE,EAAKC,cAAgB,OAAUD,EAAKjC,MAAMmC,WAAW,IAAM,IAAM,MAC1C,KAAhCzD,IAAWc,kBACXd,IAAW4Z,wBAEf5Z,IAAWqC,aAAa,iDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBoD,EAAKyC,MAAQ,MAC7EhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBoD,EAAK0C,OAAS,MAC9EjG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,4BACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,MAnChE,8BAwCH,GAAsC,IAAlCkC,EAASO,cAAcnB,QAAmC,KAAnBY,EAASf,MAEhDpC,IAAWqC,aAAa,qCACxBrC,IAAWqC,aAAa,qCACxBrC,IAAWqC,aAAa,kDAExBnC,KAAKwC,OAAOO,KAAKG,EAAM,IAAMD,EAASK,cAAgB,IAAMH,EAAY,aAEvE,GAAIF,EAASO,cAAcnB,OAAS,EAAG,CAExCvC,IAAWqC,aAAa,qCACxBrC,IAAWqC,aAAa,kDAExBnC,KAAKwC,OAAOO,KAAKG,EAAM,IAAMD,EAASK,cAAgB,IAAMH,EAAY,OALhC,oBAMhBF,EAASO,eANO,IAMxC,2BAAgD,CAAC,IAAtCC,EAAqC,QAC5CzD,KAAK8C,eAAeW,EAAWP,EAAM,QAPD,8BASxClD,KAAKwC,OAAOO,KAAKG,EAAM,KAAOD,EAASK,cAAgB,OAErB,KAA9BxD,IAAWW,gBACXX,IAAWma,sBAEfna,IAAWqC,aAAa,yDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBgD,EAAS6C,MAAQ,MACjFhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,0BACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,UAG/DjB,IAAWqC,aAAa,qCAES,KAA7BrC,IAAWS,eACXT,IAAWoa,qBAEfpa,IAAWqC,aAAa,oDACxBrC,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBgD,EAAS6C,MAAQ,MACjFhG,IAAWG,IACXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,iBAAmBgD,EAAS8C,OAAS,MAClFjG,IAAWG,IAEXH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,UAAYH,IAAWiB,aAAe,KACnFjB,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,IAAMrC,IAAWG,EAAI,OAASH,IAAWG,EAAI,SACrEH,IAAWqC,aAAa,eAAiBrC,IAAWG,EAAI,SAAWH,IAAWG,EAAI,GAAK,KACvFH,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAC/DjB,IAAWqC,aAAa,yBACxBrC,IAAWqC,aAAa,WAAarC,IAAWiB,aAAe,KAE/Df,KAAKwC,OAAOO,KAAKG,EAAM,IAAMD,EAASK,cAAgB,IAAMH,EAAY,IAAMF,EAASf,MAAQ,KAAOe,EAASK,cAAgB,UA9f/I,mCAogBI,SAA8BL,EAAmB1B,EAAuB+X,GAEpE,IAAK,IAAIpZ,EAAI,EAAGA,EAAIF,KAAK4Y,UAAUU,GAAcxB,WAAWzV,OAAQnC,IAAK,CAErE,IAAIyY,EAAkB3Y,KAAK4Y,UAAUU,GAAcxB,WAAW5X,GAAGqY,QAAQtV,EAAU1B,GACnF,GAAIoX,EAAOlX,QAAUT,gBAAcQ,QAE/B,GAAImX,EAAOlX,MAAQ,GAAK,GAAKkX,EAAOlX,MAAQ,EAAIwB,EAASO,cAAcnB,QAC/DY,EAASG,cAAcuV,EAAOlX,MAAQ,KAAOF,EAC7C,OAAO,OAGZ,GAAIoX,EAAOhX,OAASX,gBAAcyX,MAErC,GAA4B,IAAxBE,EAAOlX,MAAMY,OACb,OAAO,OAER,IAAqB,IAAjBsW,EAAOlX,MACd,OAAO,EAIf,OAAO,IA1hBf,oCA6hBI,SAA+BwB,EAAmBQ,EAAoB6V,GAElE,IAAK,IAAIpZ,EAAI,EAAGA,EAAIF,KAAK4Y,UAAUU,GAAcxB,WAAWzV,OAAQnC,IAAK,CAErE,IAAIyY,EAAkB3Y,KAAK4Y,UAAUU,GAAcxB,WAAW5X,GAAGqY,QAAQ9U,GACzE,GAAIkV,EAAOhX,OAASX,gBAAcQ,QAE9B,GAAImX,EAAOlX,MAAQ,GAAK,GAAKkX,EAAOlX,MAAQ,EAAIwB,EAASO,cAAcnB,QAC/DY,EAASO,cAAcmV,EAAOlX,MAAQ,KAAOgC,EAC7C,OAAO,OAGZ,GAAIkV,EAAOhX,OAASX,gBAAcyX,MAErC,GAA4B,IAAxBE,EAAOlX,MAAMY,OACb,OAAO,OAER,IAAqB,IAAjBsW,EAAOlX,MACd,OAAO,EAGf,OAAO,IAljBf,mCAqjBI,SAA8BgC,EAAoB6V,GAE9C,IAAK,IAAIpZ,EAAI,EAAGA,EAAIF,KAAK4Y,UAAUU,GAAcxB,WAAWzV,OAAQnC,IAAK,CAErE,IAAIyY,EAAkB3Y,KAAK4Y,UAAUU,GAAcxB,WAAW5X,GAAGqY,QAAQ9U,GACzE,GAAIkV,EAAOhX,OAASX,gBAAcQ,QAE9B,GAAqB,IAAjBmX,EAAOlX,MACP,OAAO,OAER,GAAIkX,EAAOhX,OAASX,gBAAcyX,MAErC,GAA4B,IAAxBE,EAAOlX,MAAMY,OACb,OAAO,OAER,IAAqB,IAAjBsW,EAAOlX,MACd,OAAO,EAGf,OAAO,IAxkBf,yBA2kBI,SAAmBS,GAQf,IAAK,IAAMgC,IAPW,aAAlBlE,KAAK6Y,SACL3W,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,iBAC/C,aAAlBH,KAAK6Y,SACZ3W,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,kBAExE+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,mBAE1DH,KAAK4Y,UACnB1W,EAAQlC,KAAK4Y,UAAU1U,GAAK+T,YAAY/V,GACpClC,KAAKkB,KAAKf,aAAeH,KAAK4Y,UAAU1U,GAAKhD,KAAKf,YAAcH,KAAKmB,OAAOhB,aAAeH,KAAK4Y,UAAU1U,GAAK/C,OAAOhB,aACtH+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAlD,SAA+EH,KAAK4Y,UAAU1U,GAAKhD,KAAKf,WAAa,IAAMH,KAAK4Y,UAAU1U,GAAK/C,OAAOhB,WAAa,OAGpL,OAAO+B,IAzlBf,8BA4lBI,WACIpC,IAAWqC,aAAa,+CADF,oBAGJnC,KAAK4Y,WAHD,IAGtB,2BAAkC,CAAC,IAAxB1U,EAAuB,QAC9BpE,IAAWiB,eACXmD,EAAI6T,MAAQjY,IAAWiB,aACvBjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAWqC,aAAa,yCACD,aAAnB+B,EAAI2T,aACJ/X,IAAWqC,aAAa,sCACxBrC,IAAWqC,aAAa,eAE5B,IAAK,IAAIjC,EAAI,EAAGA,EAAIgE,EAAIkB,GAAG/C,OAAQnC,IAC/BJ,IAAWqC,aAAa,kBAAoB+B,EAAIkB,GAAG9C,WAAWpC,GAAtC,mBAAqEgE,EAAIkB,GAAGlF,GAAGC,YACvGL,IAAWqC,aAAa,cACpBjC,EAAI,IAAMgE,EAAIkB,GAAG/C,SACjBvC,IAAWqC,aAAa,yCACxBrC,IAAWqC,aAAa,eAKhCrC,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXmD,EAAI8T,cAAgBlY,IAAWiB,aAC/BjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAnC,UACxB,IAAK,IAAID,EAAI,EAAGA,EAAIgE,EAAI2T,WAAWxV,OAAQnC,IACvCJ,IAAWqC,aAAa,kBAAoB+B,EAAI2T,WAAWvV,WAAWpC,GAA9C,mBAA6EgE,EAAI2T,WAAW3X,GAAGC,YACvHL,IAAWqC,aAAa,cACpBjC,EAAI,IAAMgE,EAAI2T,WAAWxV,SACzBvC,IAAWqC,aAAa,yCACxBrC,IAAWqC,aAAa,gBA/Bd,mCA5lB9B,M,uICFY4U,E,+CAAAA,O,iBAAAA,I,mCAAAA,I,iBAAAA,I,2BAAAA,I,iBAAAA,I,4BAAAA,M,KAUL,IAAMD,EAAb,WAEI,WACW5V,EACAC,EACA+W,EACAC,EACAC,EACAC,GAAc,yBALdnX,OAKa,KAJbC,SAIa,KAHb+W,UAGa,KAFbC,UAEa,KADbC,gBACa,KAAbC,MARf,2CAUI,SAAe/W,EAAcC,GAEzB,IAAI+W,EAAWtY,KAAKkY,QAAQK,QAAQjX,EAAKC,GACrCiX,EAAWxY,KAAKmY,QAAQI,QAAQjX,EAAKC,GAEzC,GAAI+W,EAAS3W,OAASX,gBAAcyX,MAAQD,EAAS7W,OAASX,gBAAcyX,KAAM,CAAC,IAAD,gBAEzDH,EAAS7W,OAFgD,IAE9E,2BAAqC,CAAC,IAAD,EAA1B0Y,EAA0B,sBACZ3B,EAAS/W,OADG,IACjC,2BAAqC,CAAC,IAA3B2Y,EAA0B,QAEjC,GAAID,EAAOxY,OAASX,gBAAc4B,MAAQwX,EAAOzY,OAASX,gBAAc4B,MAEpE,GAAI5C,KAAKqa,QAAQF,EAAO1Y,MAAM6B,cAAe8W,EAAO3Y,MAAM6B,eAMtD,OAJAxD,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,mBAEhE,GAAIoZ,EAAOxY,OAASX,gBAAc4B,MAErC,GAA0C,IAAtCuX,EAAO1Y,MAAM+B,cAAcnB,QAAuC,KAAvB8X,EAAO1Y,MAAMS,OAEpDlC,KAAKqa,QAAQF,EAAO1Y,MAAMS,MAAOkY,EAAO3Y,OAMxC,OAJA3B,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,mBAItE,GAAIqZ,EAAOzY,OAASX,gBAAc4B,MAEnC,GAA0C,IAAtCwX,EAAO3Y,MAAM+B,cAAcnB,QAAuC,KAAvB+X,EAAO3Y,MAAMS,OAEpDlC,KAAKqa,QAAQD,EAAO3Y,MAAMS,MAAOiY,EAAO1Y,OAMxC,OAJA3B,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,mBAMvE,GAAIf,KAAKqa,QAAQF,EAAO1Y,MAAO2Y,EAAO3Y,OAMlC,OAJA3B,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,eAjD1C,gCAFyC,8BA8D9E,OALAjB,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAGjE,CAAEsB,OAAO,EAAOE,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,cAE7D,GAAIuX,EAAS3W,OAASX,gBAAcyX,KAAM,CAAC,IAAD,gBAExBH,EAAS7W,OAFe,IAE7C,2BAAqC,CAAC,IAA3B0Y,EAA0B,QACjC,GAAIA,EAAOxY,OAASX,gBAAc4B,MAE9B,GAA0C,IAAtCuX,EAAO1Y,MAAM+B,cAAcnB,QAAuC,KAAvB8X,EAAO1Y,MAAMS,OAEpDlC,KAAKqa,QAAQF,EAAO1Y,MAAMS,MAAOsW,EAAS/W,OAM1C,OAJA3B,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,mBAKvE,GAAIf,KAAKqa,QAAQF,EAAO1Y,MAAO+W,EAAS/W,OAMpC,OAJA3B,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,eAxB9B,8BAiC7C,OAJAjB,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAOE,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,cAE7D,GAAIyX,EAAS7W,OAASX,gBAAcyX,KAAM,CAAC,IAAD,gBAExBD,EAAS/W,OAFe,IAE7C,2BAAqC,CAAC,IAA3B2Y,EAA0B,QACjC,GAAIA,EAAOzY,OAASX,gBAAc4B,MAE9B,GAA0C,IAAtCwX,EAAO3Y,MAAM+B,cAAcnB,QAAuC,KAAvB+X,EAAO3Y,MAAMS,OAEpDlC,KAAKqa,QAAQD,EAAO3Y,MAAMS,MAAOoW,EAAS7W,OAM1C,OAJA3B,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,mBAKvE,GAAIf,KAAKqa,QAAQ/B,EAAS7W,MAAO2Y,EAAO3Y,OAMpC,OAJA3B,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAME,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,eAxB9B,8BAiC7C,OAJAjB,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,UAEjE,CAAEsB,OAAO,EAAOE,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,cAQhE,OAJAjB,IAAWqC,aAAa,iDACxBrC,IAAWiB,eACXjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAa,QAAQH,KAAKqa,QAAQ/B,EAAS7W,MAAO+W,EAAS/W,OAAS,IAAM,KAAK,KAEnI,CAAEA,MAAOzB,KAAKqa,QAAQ/B,EAAS7W,MAAO+W,EAAS/W,OAAQE,KAAMX,gBAAc0X,KAAMtW,GAAItC,IAAWiB,gBA3JnH,qBAgKI,SAAgBuX,EAAkBE,GAE9B,GAAIxY,KAAKoY,gBAAkBrB,EAAoBC,MAE3C,OADesB,GAAYE,EAExB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBE,eAElD,OADeqB,GAAYE,EAExB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBG,MAElD,OADeoB,EAAWE,EAEvB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBI,WAElD,OADemB,GAAYE,EAExB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBK,MAElD,OADekB,EAAWE,EAEvB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBM,WAElD,OADeiB,GAAYE,EAI3B,MAAM,IAAIvW,MAAM,gDAAkDjC,KAAKqY,IAAM,YAAcrY,KAAKkB,KAAO,WAAalB,KAAKmB,UAtLrI,yBA0LI,SAAmBe,GAMf,OALAA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKqY,IAAIlY,WAAa,QAC5G+B,EAAQlC,KAAKkY,QAAQD,YAAY/V,GACjCA,EAAQlC,KAAKmY,QAAQF,YAAY/V,GACjCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKkY,QAAQhX,KAAO,IAAMlB,KAAKkY,QAAQ/W,OAAOhB,WAAa,MAC9I+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKmY,QAAQjX,KAAO,IAAMlB,KAAKmY,QAAQhX,OAAOhB,WAAa,UA/LtJ,M,iBChBA,cAyEA,IAAIma,EAAiB,WACrB,IAAIxT,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAE1E,OAAO4E,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGI,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIqL,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIsF,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACvqD7T,GAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,QAAU,EAAE,IAAM,EAAE,IAAI,EAAE,MAAQ,EAAE,OAAS,EAAE,QAAU,EAAE,UAAY,GAAG,OAAS,GAAG,IAAM,GAAG,IAAM,GAAG,OAAS,GAAG,IAAM,GAAG,EAAI,GAAG,GAAK,GAAG,GAAK,GAAG,SAAW,GAAG,QAAU,GAAG,UAAY,GAAG,WAAa,GAAG,MAAQ,GAAG,GAAK,GAAG,WAAa,GAAG,KAAO,GAAG,MAAQ,GAAG,UAAY,GAAG,MAAQ,GAAG,GAAK,GAAG,IAAM,GAAG,KAAK,GAAG,OAAS,GAAG,IAAI,GAAG,SAAW,GAAG,IAAI,GAAG,OAAS,GAAG,GAAK,GAAG,GAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAO,GAAG,OAAS,GAAG,KAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAM,GAAG,IAAM,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAM,GAAG,GAAK,GAAG,eAAiB,GAAG,OAAS,GAAG,IAAI,GAAG,eAAiB,GAAG,KAAK,GAAG,aAAe,GAAG,IAAI,GAAG,IAAI,GAAG,SAAW,GAAG,OAAS,GAAG,IAAI,GAAG,KAAK,GAAG,KAAO,GAAG,KAAO,GAAG,MAAQ,GAAG,KAAK,GAAG,WAAa,GAAG,WAAa,GAAG,UAAY,GAAG,MAAQ,GAAG,IAAI,GAAG,IAAM,GAAG,IAAI,GAAG,MAAQ,GAAG,SAAW,GAAG,KAAO,GAAG,QAAU,EAAE,KAAO,GACx2BC,WAAY,CAACC,EAAE,QAAQE,EAAE,MAAMC,EAAE,IAAIC,EAAE,SAAS+B,EAAE,UAAU7B,GAAG,MAAMqC,GAAG,IAAIJ,GAAG,KAAKhC,GAAG,KAAKG,GAAG,YAAYC,GAAG,aAAaE,GAAG,KAAKG,GAAG,QAAQyK,GAAG,QAAQC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,SAASC,GAAG,IAAIE,GAAG,IAAIG,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAI6B,GAAG,OAAOrD,GAAG,OAAO0B,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIgH,GAAG,MAAMC,GAAG,MAAMC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,SAASC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAAOC,GAAG,OAAOC,GAAG,QAAQC,GAAG,KAAKC,GAAG,aAAaC,GAAG,YAAYC,GAAG,IAAIC,GAAG,IAAIC,GAAG,WAAWC,GAAG,QACxflU,aAAc,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IACh7BC,cAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG3I,OAAS,EACrB,OAAQ0I,GACR,KAAK,EACL,OAAOC,EAAGE,EAAG,GAEb,KAAK,EACL,OAAOF,EAAGE,GAEV,KAAK,EAAG,KAAK,GAAI,KAAK,GACtBF,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACtC,MACA,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IACjDlL,KAAKuL,EAAI,CAACP,EAAGE,IACb,MACA,KAAK,EAAG,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,KAAK,IAAK,KAAK,IACjDlL,KAAKuL,EAAI,IAAItK,GAAUgK,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAKlK,GAAcY,QACrF,MACA,KAAK,EACL5B,KAAKuL,EAAI,IAAIsT,GAAY5T,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,IACpE,MACA,KAAK,EAAG,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAC1IlL,KAAKuL,EAAIP,EAAGE,GACZ,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,GAAIF,EAAGE,EAAG,GAAI,KAAM,KAAM,GAAIF,EAAGE,IACxG,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,GAAIF,EAAGE,EAAG,GAAI,KAAMF,EAAGE,EAAG,GAAI,GAAIF,EAAGE,IAC5G,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,GAAIF,EAAGE,EAAG,GAAI,KAAMF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,IAClH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAI,KAAM,GAAIF,EAAGE,IAC5G,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAI,GAAIF,EAAGE,IAChH,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,IACtH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAI,KAAM,KAAM,GAAIF,EAAGE,IAC9G,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAI,KAAMF,EAAGE,EAAG,GAAI,GAAIF,EAAGE,IAClH,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,IAAIM,WAAYP,EAAGC,EAAG,IAAIO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAI,KAAMF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,IAC1H,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAI,KAAM,GAAIF,EAAGE,IAClH,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,IAAIM,WAAYP,EAAGC,EAAG,IAAIO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAI,GAAIF,EAAGE,IACxH,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAIuT,GAAI7T,EAAGC,EAAG,IAAIM,WAAYP,EAAGC,EAAG,IAAIO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,IAC9H,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAIwT,GAAI9T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK,IAAI8T,GAAQ/T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAc,KACvI,MACA,KAAK,GAAI,KAAK,GACdzL,KAAKuL,EAAI,IAAIwT,GAAI9T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,IACpF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIyT,GAAQ/T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,IACvE,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAIyT,GAAQ/T,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAc,CAACT,EAAGE,KACrE,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI0T,GAAGhU,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,EAAG,GAAIF,EAAGE,IACnF,MACA,KAAK,GACLlL,KAAKuL,EAAI,KACT,MACA,KAAK,GAAI,KAAK,IACdvL,KAAKuL,EAAI,IAAIgL,GAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,GAAoBC,KAAMzL,EAAGE,EAAG,IACtH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIgL,GAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,GAAoBE,MAAO1L,EAAGE,EAAG,IACvH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIgL,GAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,GAAoBG,KAAM3L,EAAGE,EAAG,IACtH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIgL,GAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,GAAoBI,IAAK5L,EAAGE,EAAG,IACrH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIgL,GAAWtL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKsL,GAAoBK,IAAK7L,EAAGE,EAAG,IACrH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBC,MAAOhM,EAAGE,EAAG,IACvH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBE,eAAgBjM,EAAGE,EAAG,IAChI,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBG,MAAOlM,EAAGE,EAAG,IACvH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBI,WAAYnM,EAAGE,EAAG,IAC5H,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBK,MAAOpM,EAAGE,EAAG,IACvH,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAIuL,GAAW7L,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAK6L,GAAoBM,WAAYrM,EAAGE,EAAG,IAC5H,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAI+L,GAAOrM,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKqM,GAAgBC,IAAKxM,EAAGE,EAAG,IAC7G,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAI+L,GAAOrM,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAIF,EAAGE,GAAKqM,GAAgBE,GAAIzM,EAAGE,EAAG,IAC5G,MACA,KAAK,GAAI,KAAK,IAAK,KAAK,IACxBlL,KAAKuL,EAAIP,EAAGE,EAAG,GACf,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAItK,GAAUgK,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAKlK,GAAcQ,QACrF,MACA,KAAK,GACLxB,KAAKuL,EAAIP,EAAGE,GACZ,MACA,KAAK,GACLF,EAAGE,GAAI,GAAGkL,UAAY,WACuCpW,KAAKuL,EAAI,IAAI2T,GAAWjU,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,IAAImL,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,QACxM,MACA,KAAK,GACLF,EAAGE,GAAI,GAAGkL,UAAY,WACuCpW,KAAKuL,EAAI,IAAI2T,GAAWjU,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,IAAImL,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,QACxM,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI2T,GAAWjU,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,IAAImL,GAAKpL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAc,GAAI,QAC7H,MACA,KAAK,GAAI,KAAK,GACdT,EAAGE,GAAIkL,UAAY,WAAYpL,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACrE,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,OAAQ,IAC5E,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,aAAc,IAClF,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,WAAY,IAChF,MACA,KAAK,GAAI,KAAK,IACdlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,iBAAkB,IACtF,MACA,KAAK,QACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAY,YACPpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,IACtH,MACA,KAAK,QACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAY,YACPpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,IACtH,MACA,KAAK,QACmBpJ,IAArBkJ,EAAGE,GAAIkL,YAAyBpL,EAAGE,GAAIkL,UAAY,YAAYpL,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACxG,MACA,KAAK,QACmBpJ,IAArBkJ,EAAGE,GAAIkL,YAAyBpL,EAAGE,GAAIkL,UAAY,YAAYpL,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACxG,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,SAAU,IAC9E,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,QAAS,IAC7E,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,QAAS,IACnF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAc,IACxF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,OAAQ,IAChF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,aAAc,IACtF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,OAAQ,GAAI,YACpF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,aAAc,GAAI,YAC1F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,OAAQF,EAAGE,IACrF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAcF,EAAGE,IAC3F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,OAAQF,EAAGE,IACrF,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAcF,EAAGE,IAC3F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,OAAQF,EAAGE,GAAK,YAC1F,MACA,KAAK,GACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,aAAcF,EAAGE,GAAK,YAChG,MACA,KAAK,IACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,WAAY,IACpF,MACA,KAAK,IACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,iBAAkB,IAC1F,MACA,KAAK,IACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,WAAYF,EAAGE,IACzF,MACA,KAAK,IACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,iBAAkBF,EAAGE,IAC/F,MACA,KAAK,IACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,WAAYF,EAAGE,IACzF,MACA,KAAK,IACLlL,KAAKuL,EAAI,IAAI+K,GAAOrL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,GAAI,iBAAkBF,EAAGE,IAC/F,MACA,KAAK,IACLE,GAAarI,KAAK,IAAIY,GAAW,aAAa,4CAA4CsH,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,eACpH,MACA,KAAK,IACLT,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAMlL,KAAKuL,EAAIP,EAAGE,EAAG,GACtC,MACA,KAAK,IAAK,KAAK,IACflL,KAAKuL,EAAI,IAAItK,GAAUgK,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,EAAG,IACzE,MACA,KAAK,SACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAY,YACPpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,GAAIM,WAAYP,EAAGC,GAAIO,aAAcT,EAAGE,GAAK,OACvH,MACA,KAAK,SACsBpJ,IAAxBkJ,EAAGE,GAAI,GAAGkL,YAAyBpL,EAAGE,GAAI,GAAGkL,UAAW,YACNpW,KAAKuL,EAAI,IAAI8K,GAAKpL,EAAGC,EAAG,GAAGM,WAAYP,EAAGC,EAAG,GAAGO,aAAcT,EAAGE,GAAK,SAI3HQ,MAAO,CAAC,CAACC,EAAE,EAAEjC,EAAE,EAAEC,EAAE,CAAC,EAAE,GAAGsC,EAAE,EAAEpC,EAAE3C,EAAI0E,EAAEzE,EAAI0E,GAAG,EAAE/B,GAAG,EAAEiC,GAAG,GAAGG,GAAG,GAAGC,GAAG,GAAGpC,GAAG3C,EAAIoD,GAAG,EAAE4K,GAAG/N,EAAIiO,GAAGhO,EAAIuW,GAAGtW,EAAIuW,GAAGtW,GAAK,CAACsE,EAAE,CAAC,IAAI,CAACnC,EAAE,CAAC,EAAE,IAAIC,EAAE,CAAC,EAAE,KAAK,CAACkC,EAAE,CAAC,EAAE,IAAIhF,EAAEW,EAAI,CAAC,EAAE,IAAIX,EAAEW,EAAI,CAAC,EAAE,IAAIX,EAAEW,EAAI,CAAC,EAAE,IAAIX,EAAEW,EAAI,CAAC,EAAE,GAAG,CAACuW,GAAG,CAAC,EAAE,MAAMlX,EAAEW,EAAI,CAAC,EAAE,IAAIX,EAAEY,EAAI,CAAC,EAAE,KAAKZ,EAAEa,EAAI,CAAC,EAAE,IAAIb,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAK,CAAC8B,EAAE7B,EAAIoE,GAAGnE,EAAIqO,GAAGpO,EAAIiW,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,GAAK,CAACmB,EAAE7B,EAAIoE,GAAGnE,EAAIqO,GAAGpO,EAAIiW,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,GAAK,CAAC8D,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACvC,EAAEtB,EAAIqD,EAAEpD,EAAIsB,GAAG,GAAGiC,GAAG,GAAGG,GAAG,GAAGC,GAAG,GAAGpC,GAAG3C,EAAIgF,GAAG3D,EAAI8B,GAAG,GAAGC,GAAG,GAAGkN,GAAG,GAAGtC,GAAG/N,EAAIiO,GAAGhO,EAAIiO,GAAG,CAAC,EAAE,IAAIG,GAAG,GAAGC,GAAG,GAAGC,GAAGlN,EAAImN,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,EAAIiV,GAAGtW,EAAIuW,GAAGtW,GAAK,CAACsE,EAAE,CAAC,EAAE,IAAI,CAACG,EAAE,GAAGpC,EAAE3C,EAAI0E,EAAEzE,EAAI0E,GAAG,EAAE/B,GAAG,EAAEiC,GAAG,GAAGG,GAAG,GAAGC,GAAG,GAAGpC,GAAG3C,EAAIoD,GAAG,EAAE4K,GAAG/N,EAAIiO,GAAGhO,EAAIuW,GAAGtW,EAAIuW,GAAGtW,GAAK,CAACgD,GAAG,GAAGqT,GAAGtW,EAAIuW,GAAGtW,GAAKV,EAAE+B,EAAI,CAAC,EAAE,IAAI,CAACgV,GAAG/U,EAAIgV,GAAG/U,IAAMjC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACsW,GAAG,GAAGC,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGD,GAAG,GAAGb,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAAC6M,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACyI,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACtS,GAAG,CAAC,EAAE,IAAIkK,GAAG,CAAC,EAAE,KAAK,CAACoI,GAAG,CAAC,EAAE,KAAKxX,EAAEkC,EAAI,CAAC,EAAE,MAAMlC,EAAE+B,EAAI,CAAC,EAAE,IAAI,CAACgV,GAAG/U,EAAIgV,GAAG/U,IAAM,CAACiD,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACnC,EAAEtB,EAAIqD,EAAEpD,EAAIsB,GAAG,GAAGiC,GAAG,GAAGG,GAAG,GAAGC,GAAG,GAAGpC,GAAG3C,EAAIgF,GAAG3D,EAAI8B,GAAG,GAAGC,GAAG,GAAGkN,GAAG,GAAGtC,GAAG/N,EAAIiO,GAAGhO,EAAIkO,GAAG,GAAGE,GAAG,GAAGC,GAAG,GAAGC,GAAGlN,EAAImN,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,EAAIiV,GAAGtW,EAAIuW,GAAGtW,GAAKV,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,IAAI,CAACqO,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGpD,IAAMzT,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAE0T,EAAI,CAAC,EAAE,KAAK,CAAC3E,GAAG,CAAC,EAAE,KAAK,CAAChM,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,GAAG7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK9B,EAAE0T,EAAI,CAAC,EAAE,KAAK1T,EAAE0T,EAAI,CAAC,EAAE,KAAK1T,EAAE0T,EAAI,CAAC,EAAE,KAAK1T,EAAE0T,EAAI,CAAC,EAAE,KAAK,CAACxO,GAAG,CAAC,EAAE,KAAKlF,EAAEW,EAAI,CAAC,EAAE,IAAIX,EAAEY,EAAI,CAAC,EAAE,KAAK,CAAC+B,EAAE7B,EAAIoE,GAAGnE,EAAIqO,GAAGpO,EAAIiW,GAAGhW,EAAIqX,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,GAAK,CAACmB,EAAE7B,EAAIoE,GAAGnE,EAAIqO,GAAGpO,EAAIiW,GAAGhW,EAAIqX,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,GAAKxB,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAE2T,EAAI,CAAC,EAAE,MAAM,CAAChR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,GAAGC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAKlU,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGd,GAAGxV,IAAM,CAAC6M,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,MAAM,CAAC9J,GAAG,CAAC,EAAE,KAAKkK,GAAG,CAAC,EAAE,MAAM,CAAClK,GAAG,CAAC,EAAE,KAAKkK,GAAG,CAAC,EAAE,MAAMpP,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAM,CAAC+C,GAAG,CAAC,EAAE,KAAKkK,GAAG,CAAC,EAAE,MAAM,CAAClM,GAAG,CAAC,EAAE,KAAKM,GAAG,CAAC,EAAE,MAAM,CAAC+K,GAAG,CAAC,EAAE,MAAM,CAACzL,EAAE,CAAC,EAAE,KAAK6L,GAAG,CAAC,EAAE,MAAM3O,EAAEmU,GAAI,CAAC,EAAE,KAAK,CAACpR,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACiB,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACkN,GAAG,CAAC,EAAE,KAAKE,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGpD,GAAKzT,EAAEoU,GAAI,CAAC,EAAE,IAAI,CAAC2C,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,OAAOhX,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAE2T,EAAI,CAAC,EAAE,MAAM,CAACzE,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,GAAK2C,GAAG,CAAC,EAAE,MAAM5X,EAAEkV,GAAK,CAAC,EAAE,MAAM,CAACvS,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAKlU,EAAEkV,GAAK,CAAC,EAAE,MAAMlV,EAAEkV,GAAK,CAAC,EAAE,MAAMlV,EAAEkV,GAAK,CAAC,EAAE,MAAM,CAACnG,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAM/O,EAAEkV,GAAK,CAAC,EAAE,KAAK,CAAC6B,GAAG/U,EAAIgV,GAAG/U,IAAM,CAACU,EAAE7B,EAAIoE,GAAGnE,EAAIqO,GAAGpO,EAAIiW,GAAGhW,EAAIoX,GAAG,IAAIC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,GAAKxB,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,KAAKlC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGD,GAAG,IAAIb,GAAGxV,IAAM,CAACmD,GAAG3D,EAAIwB,GAAG,IAAIM,GAAG,IAAIC,GAAG,IAAIqT,GAAGtW,EAAIuW,GAAGtW,GAAK,CAAC4E,GAAG,CAAC,EAAE,MAAM,CAACvC,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGC,GAAG,IAAIkN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,EAAIiV,GAAGtW,EAAIuW,GAAGtW,GAAKV,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACkC,EAAEtB,EAAIqD,EAAEpD,EAAIsB,GAAG,GAAGiC,GAAG,GAAGG,GAAG,GAAGC,GAAG,GAAGpC,GAAG3C,EAAIgF,GAAG3D,EAAI8B,GAAG,GAAGC,GAAG,GAAGkN,GAAG,GAAGtC,GAAG/N,EAAIiO,GAAGhO,EAAIoO,GAAG,IAAIC,GAAG,GAAGC,GAAGlN,EAAImN,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,EAAIiV,GAAGtW,EAAIuW,GAAGtW,GAAKV,EAAEmV,GAAK,CAAC,EAAE,IAAI,CAAC/F,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAM5N,EAAEmV,GAAK,CAAC,EAAE,IAAI,CAAC/F,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAM5N,EAAEoV,GAAK,CAAC,EAAE,IAAI,CAACiB,GAAGzI,IAAM5N,EAAEoV,GAAK,CAAC,EAAE,IAAI,CAACiB,GAAGzI,IAAM5N,EAAE0T,EAAI,CAAC,EAAE,KAAK1T,EAAEqV,GAAK,CAAC,EAAE,IAAI,CAACnG,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI4I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAMlO,EAAEqV,GAAK,CAAC,EAAE,IAAI,CAACnG,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI4I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAMlO,EAAEsV,GAAK,CAAC,EAAE,IAAI,CAACpG,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAM5N,EAAEsV,GAAK,CAAC,EAAE,IAAI,CAACpG,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAM5N,EAAEsV,GAAK,CAAC,EAAE,IAAI,CAACpG,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAM5N,EAAEsV,GAAK,CAAC,EAAE,IAAI,CAACpG,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAM5N,EAAE,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAACkP,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAMlO,EAAE,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAACkP,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,IAAM,CAACa,GAAG,CAAC,EAAE,KAAKE,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGpD,GAAKzT,EAAE0T,EAAI,CAAC,EAAE,KAAK,CAACxO,GAAGqQ,GAAKnG,GAAGoG,GAAKoD,GAAG,IAAIC,GAAG,IAAI5B,GAAGxB,IAAM,CAACvQ,GAAGqQ,GAAKnG,GAAGoG,GAAKoD,GAAG,IAAIC,GAAG,IAAI5B,GAAGxB,IAAMzV,EAAE2T,EAAI,CAAC,EAAE,MAAM,CAAChR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAACvR,EAAE7B,EAAIiC,EAAE6Q,EAAI9O,EAAE+O,EAAI3O,GAAGnE,EAAIgO,GAAG+E,EAAI1E,GAAGpO,EAAI8V,GAAG/C,EAAIiD,GAAGhD,EAAIiD,GAAGhW,EAAIoX,GAAG,GAAGC,GAAG,GAAGnB,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAIkW,GAAGjW,EAAImW,GAAGlW,EAAImW,GAAGlW,EAAIkX,GAAG,IAAIC,GAAG,GAAGd,GAAG5D,GAAI6D,GAAG5D,IAAK,CAAClF,GAAG,CAAC,EAAE,KAAKE,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,IAAM,CAACjG,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAMhP,EAAEkV,GAAK,CAAC,EAAE,KAAK,CAAC6B,GAAG/U,EAAIgV,GAAG/U,IAAMjC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,IAAI,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGd,GAAGxV,IAAMnC,EAAEkC,EAAI,CAAC,EAAE,KAAK,CAACuW,GAAG,GAAGd,GAAGxV,IAAM,CAACkD,GAAG,IAAIjC,GAAG,IAAIG,GAAG,IAAII,GAAG+R,GAAKtH,GAAGuH,GAAKnH,GAAGhO,GAAKR,EAAE4V,GAAK,CAAC,EAAE,KAAK5V,EAAE4V,GAAK,CAAC,EAAE,KAAK,CAAC1Q,GAAG,CAAC,EAAE,MAAMlF,EAAEa,EAAI,CAAC,EAAE,IAAI,CAACwE,GAAG,IAAImJ,GAAGhO,EAAI0O,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGpD,IAAMzT,EAAEa,EAAI,CAAC,EAAE,IAAI,CAACwE,GAAG,IAAImJ,GAAGhO,IAAMR,EAAEmU,GAAI,CAAC,EAAE,KAAK,CAACtD,GAAG,CAAC,EAAE,MAAM7Q,EAAEoU,GAAI,CAAC,EAAE,IAAI,CAAC2C,GAAGlB,GAAKmB,GAAGlB,KAAO9V,EAAE+V,GAAK,CAAC,EAAE,KAAK/V,EAAE+V,GAAK,CAAC,EAAE,KAAK/V,EAAE+V,GAAK,CAAC,EAAE,KAAK,CAAC7Q,GAAG,CAAC,EAAE,KAAKkK,GAAG,CAAC,EAAE,MAAMpP,EAAEoU,GAAI,CAAC,EAAE,IAAI,CAAC2C,GAAGlB,GAAKmB,GAAGlB,KAAO9V,EAAEgW,GAAK,CAAC,EAAE,KAAK,CAAC5G,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,KAAMzU,EAAEgW,GAAK,CAAC,EAAE,KAAK,CAAC5G,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,KAAMzU,EAAEiW,GAAK,CAAC,EAAE,KAAK,CAACI,GAAG5B,KAAMzU,EAAEiW,GAAK,CAAC,EAAE,KAAK,CAACI,GAAG5B,KAAMzU,EAAEkV,GAAK,CAAC,EAAE,MAAMlV,EAAEkW,GAAK,CAAC,EAAE,KAAK,CAAChH,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI+B,GAAG5B,GAAI6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,KAAO/U,EAAEkW,GAAK,CAAC,EAAE,KAAK,CAAChH,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI+B,GAAG5B,GAAI6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,KAAO/U,EAAEmW,GAAK,CAAC,EAAE,KAAK,CAACjH,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,KAAMzU,EAAEmW,GAAK,CAAC,EAAE,KAAK,CAACjH,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,KAAMzU,EAAEmW,GAAK,CAAC,EAAE,KAAK,CAACjH,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,KAAMzU,EAAEmW,GAAK,CAAC,EAAE,KAAK,CAACjH,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,KAAMzU,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,KAAK,CAACkP,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,KAAO/U,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,KAAK,CAACkP,GAAGmF,GAAIlF,GAAGmF,GAAIlF,GAAGmF,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAI6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,GAAK6B,GAAG5B,KAAOhV,EAAEkV,GAAK,CAAC,EAAE,MAAMlV,EAAEkV,GAAK,CAAC,EAAE,MAAMlV,EAAEkV,GAAK,CAAC,EAAE,MAAMlV,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAIhC,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,KAAKkL,GAAGhO,GAAK,CAAC6E,GAAG,IAAIjC,GAAG,IAAIgL,GAAGuH,GAAKnH,GAAGhO,GAAK,CAAC6N,GAAG,CAAC,EAAE,MAAM,CAACtL,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACoB,GAAG,CAAC,EAAE,MAAMlD,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACkC,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI7B,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK,CAACoD,GAAGqQ,GAAKnG,GAAGoG,GAAKqD,GAAG,IAAI5B,GAAGxB,IAAM,CAACvQ,GAAGqQ,GAAKnG,GAAGoG,GAAKqD,GAAG,IAAI5B,GAAGxB,IAAMzV,EAAE+V,GAAK,CAAC,EAAE,KAAK/V,EAAE+V,GAAK,CAAC,EAAE,KAAK/V,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAImJ,GAAGhO,GAAK,CAAC6E,GAAG,IAAImJ,GAAGhO,GAAKR,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAIhC,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,KAAKkL,GAAGhO,GAAK,CAAC8E,GAAG3D,EAAI8B,GAAG,KAAKzD,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAACkP,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGpD,IAAM,CAACnO,GAAG3D,EAAIwB,GAAG,IAAIM,GAAG,IAAIC,GAAG,IAAIqT,GAAGtW,EAAIuW,GAAGtW,GAAKV,EAAEa,EAAI,CAAC,EAAE,IAAI,CAACoO,GAAG,IAAIzB,GAAG,CAAC,EAAE,KAAK0B,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGpD,IAAMzT,EAAE+V,GAAK,CAAC,EAAE,KAAK/V,EAAE+V,GAAK,CAAC,EAAE,KAAK/V,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAImJ,GAAGhO,GAAK,CAAC6E,GAAG,IAAImJ,GAAGhO,GAAKR,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,KAAK,CAACqF,GAAG,IAAIjC,GAAG,IAAIG,GAAG,IAAII,GAAG+R,GAAKtH,GAAGuH,GAAKnH,GAAGhO,GAAKR,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACkC,EAAEtB,EAAIqD,EAAEpD,EAAI4D,GAAG3D,EAAI8B,GAAG,GAAGmN,GAAG,IAAI/B,GAAG,IAAIC,GAAGlN,EAAImN,GAAGlN,EAAI0W,GAAG,GAAGzB,GAAGhV,GAAK9B,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAIhC,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,KAAKkL,GAAGhO,GAAK,CAAC6E,GAAG,IAAIjC,GAAG,IAAIgL,GAAGuH,GAAKnH,GAAGhO,GAAKR,EAAEa,EAAI,CAAC,EAAE,IAAI,CAACqO,GAAG9M,EAAI+M,GAAG9M,EAAI+M,GAAG1B,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGzI,EAAI0I,GAAGpD,IAAMzT,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAImJ,GAAGhO,GAAK,CAAC6E,GAAG,IAAImJ,GAAGhO,GAAKR,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAIhC,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,KAAKkL,GAAGhO,GAAKR,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,KAAK,CAACwE,GAAG,IAAImJ,GAAGhO,GAAK,CAAC6E,GAAG,IAAImJ,GAAGhO,GAAKR,EAAEa,EAAI,CAAC,EAAE,KAAKb,EAAEa,EAAI,CAAC,EAAE,MAC/xT0E,eAAgB,CAACV,EAAE,CAAC,EAAE,GAAG3B,GAAG,CAAC,EAAE,IAC/BsC,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAI5I,EAAQ,IAAI5B,MAAMsK,GAEtB,MADA1I,EAAM2I,KAAOA,EACP3I,EAJN7D,KAAKqJ,MAAMkD,IAOnBG,MAAO,SAAgBC,GACnB,IAAIC,EAAO5M,KACP6M,EAAQ,CAAC,GAETC,EAAS,CAAC,MACVC,EAAS,GACTrB,EAAQ1L,KAAK0L,MACbd,EAAS,GACTE,EAAW,EACXD,EAAS,EACTmC,EAAa,EACbC,EAAS,EACTC,EAAM,EAENC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GAIpCC,EAAQC,OAAOC,OAAOzN,KAAKuN,OAC3BG,EAAc,CAAEpE,GAAI,IAExB,IAAK,IAAIvC,KAAK/G,KAAKsJ,GACbkE,OAAOG,UAAUC,eAAeP,KAAKrN,KAAKsJ,GAAIvC,KAChD2G,EAAYpE,GAAGvC,GAAK/G,KAAKsJ,GAAGvC,IAIhCwG,EAAMM,SAASlB,EAAOe,EAAYpE,IAClCoE,EAAYpE,GAAGiE,MAAQA,EACvBG,EAAYpE,GAAGF,OAASpJ,KACG,oBAAhBuN,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAOhK,KAAKgL,GAEZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OAQ5C,SAASE,EAAUC,GACftB,EAAMxK,OAASwK,EAAMxK,OAAS,EAAI8L,EAClCrB,EAAOzK,OAASyK,EAAOzK,OAAS8L,EAChCpB,EAAO1K,OAAS0K,EAAO1K,OAAS8L,EATK,oBAA9BT,EAAYpE,GAAGgD,WACtBtM,KAAKsM,WAAaoB,EAAYpE,GAAGgD,WAEjCtM,KAAKsM,WAAakB,OAAOY,eAAepO,MAAMsM,WAqBlD,IAXA,IAUI+B,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAV3EC,EAAM,WACN,IAAIC,EAMJ,MAHqB,kBAFrBA,EAAQxB,EAAMuB,OAAS5B,KAGnB6B,EAAQnC,EAAKrD,SAASwF,IAAUA,GAE7BA,GAGsCC,EAAQ,KAC5C,CAiBT,GAfAT,EAAQ1B,EAAMA,EAAMxK,OAAS,GAGzBrC,KAAKqM,eAAekC,GACpBC,EAASxO,KAAKqM,eAAekC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAGbN,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOF,IAKpB,qBAAXG,IAA2BA,EAAOnM,SAAWmM,EAAO,GAAI,KAC3DS,EAKKC,EAAT,SAAwCX,GAKpC,IAJA,IAAIY,EAActC,EAAMxK,OAAS,EAC7B+M,EAAQ,IAGJ,CAEJ,GAAKnC,EAAO9M,aAAeuL,EAAM6C,GAC7B,OAAOa,EAEX,GAAc,IAAVb,GAAeY,EAAc,EAC7B,OAAO,EAGXZ,EAAQ1B,EADRsC,GAAe,KAEbC,IAnBNC,EAAS,GAuBb,GAAKrC,EA0BMsB,IAAmBpB,IAC1B+B,EAAmBC,EAA+BX,QA3BrC,CAMb,IAAKG,KAJLO,EAAmBC,EAA+BX,GAGlDM,EAAW,GACDnD,EAAM6C,GACRvO,KAAKwJ,WAAWkF,IAAMA,EAAIzB,GAC1B4B,EAAS9L,KAAK,IAAI/C,KAAKwJ,WAAWkF,GAAG,KAIzCW,EADA9B,EAAM+B,aACG,wBAAwBxE,EAAS,GAAG,MAAMyC,EAAM+B,eAAe,eAAeT,EAASU,KAAK,MAAQ,WAAavP,KAAKwJ,WAAW6E,IAAWA,GAAS,IAErJ,wBAAwBvD,EAAS,GAAG,iBAC9BuD,GAAUnB,EAAM,eACJ,KAAKlN,KAAKwJ,WAAW6E,IAAWA,GAAQ,KAEvErO,KAAKsM,WAAW+C,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO/O,KAAKwJ,WAAW6E,IAAWA,EAClCnN,KAAMqM,EAAMzC,SACZ4E,IAAK3B,EACLc,SAAUA,EACVpC,aAAmC,IAArBwC,IAOtB,GAAkB,GAAdjC,EAAiB,CACjB,GAAIqB,IAAWnB,GAAOoB,IAAmBpB,EACrC,MAAM,IAAIjL,MAAMoN,GAAU,gEAI9BxE,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACdO,EAASS,IAIb,IAAyB,IAArBG,EACA,MAAM,IAAIhN,MAAMoN,GAAU,8DAE9BnB,EAASe,GAETX,EAAkBD,GAAUpB,EAAS,KAAOoB,EAC5CA,EAASpB,EACTsB,EAAQ1B,EAAMA,EAAMxK,OAAO,GAC3BmM,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOtB,GACtCD,EAAa,EAIjB,GAAIwB,EAAO,aAAchJ,OAASgJ,EAAOnM,OAAS,EAC9C,MAAM,IAAIJ,MAAM,oDAAoDsM,EAAM,YAAYF,GAG1F,OAAQG,EAAO,IACX,KAAK,EAGD3B,EAAM9J,KAAKsL,GACXvB,EAAO/J,KAAKwK,EAAM3C,QAClBmC,EAAOhK,KAAKwK,EAAMO,QAClBjB,EAAM9J,KAAKyL,EAAO,IAClBH,EAAS,KACJC,GAUDD,EAASC,EACTA,EAAiB,OAVjBzD,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAOR,MAEJ,KAAK,EAoBD,GAhBA2B,EAAM3O,KAAK0K,aAAa8D,EAAO,IAAI,GAGnCQ,EAAMzD,EAAIuB,EAAOA,EAAOzK,OAAOsM,GAE/BK,EAAM/D,GAAK,CACPO,WAAYuB,EAAOA,EAAO1K,QAAQsM,GAAK,IAAInD,WAC3CmE,UAAW5C,EAAOA,EAAO1K,OAAO,GAAGsN,UACnClE,aAAcsB,EAAOA,EAAO1K,QAAQsM,GAAK,IAAIlD,aAC7CmE,YAAa7C,EAAOA,EAAO1K,OAAO,GAAGuN,aAErC5B,IACFgB,EAAM/D,GAAG4E,MAAQ,CAAC9C,EAAOA,EAAO1K,QAAQsM,GAAK,IAAIkB,MAAM,GAAI9C,EAAOA,EAAO1K,OAAO,GAAGwN,MAAM,KAI1E,qBAFjBpB,EAAIzO,KAAK2K,cAAcmF,MAAMd,EAAO,CAACpE,EAAQC,EAAQC,EAAU4C,EAAYpE,GAAIkF,EAAO,GAAI1B,EAAQC,GAAQgD,OAAO5C,KAG7G,OAAOsB,EAIPE,IACA9B,EAAQA,EAAMO,MAAM,GAAG,EAAEuB,EAAI,GAC7B7B,EAASA,EAAOM,MAAM,GAAI,EAAEuB,GAC5B5B,EAASA,EAAOK,MAAM,GAAI,EAAEuB,IAGhC9B,EAAM9J,KAAK/C,KAAK0K,aAAa8D,EAAO,IAAI,IACxC1B,EAAO/J,KAAKiM,EAAMzD,GAClBwB,EAAOhK,KAAKiM,EAAM/D,IAElB2D,EAAWlD,EAAMmB,EAAMA,EAAMxK,OAAO,IAAIwK,EAAMA,EAAMxK,OAAO,IAC3DwK,EAAM9J,KAAK6L,GACX,MAEJ,KAAK,EAED,OAAO,GAKnB,OAAO,IAGA0H,GAAUtG,EAAQ,KAAlBsG,OACP,GAA0CtG,EAAQ,KAA3CuG,GAAP,GAAOA,WAAYC,GAAnB,GAAmBA,oBACnB,GAAkCxG,EAAQ,KAAnCsH,GAAP,GAAOA,OAAQC,GAAf,GAAeA,gBACRlB,GAAQrG,EAAQ,KAAhBqG,KACP,GAAmCrG,EAAQ,GAApC/O,GAAP,GAAOA,UAAWD,GAAlB,GAAkBA,cAClB,GAA0CgP,EAAQ,KAA3C8G,GAAP,GAAOA,WAAYC,GAAnB,GAAmBA,oBACZpT,GAAcqM,EAAQ,IAAtBrM,WAEAmb,GAAO9O,EAAQ,KAAf8O,IACAG,GAAMjP,EAAQ,KAAdiP,GACAF,GAAO/O,EAAQ,KAAf+O,IACAF,GAAe7O,EAAQ,KAAvB6O,YACAG,GAAUhP,EAAQ,KAAlBgP,OACAE,GAAclP,EAAQ,KAAtBkP,WAGH9T,GAAe,GACfwM,GAAI,GAERrK,GACS,CAEbL,IAAI,EAEJZ,WAAW,SAAoBC,EAAKC,GAC5B,IAAIxM,KAAKsJ,GAAGF,OAGR,MAAM,IAAInH,MAAMsK,GAFhBvM,KAAKsJ,GAAGF,OAAOkD,WAAWC,EAAKC,IAO3CqB,SAAS,SAAUlB,EAAOrD,GAiBlB,OAhBAtJ,KAAKsJ,GAAKA,GAAMtJ,KAAKsJ,IAAM,GAC3BtJ,KAAKiQ,OAAStD,EACd3M,KAAKkQ,MAAQlQ,KAAKmQ,WAAanQ,KAAKoQ,MAAO,EAC3CpQ,KAAK8K,SAAW9K,KAAK6K,OAAS,EAC9B7K,KAAK4K,OAAS5K,KAAKqQ,QAAUrQ,KAAKyP,MAAQ,GAC1CzP,KAAKsQ,eAAiB,CAAC,WACvBtQ,KAAK8N,OAAS,CACVtC,WAAY,EACZC,aAAc,EACdkE,UAAW,EACXC,YAAa,GAEb5P,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC,EAAE,IAE3B7P,KAAKuQ,OAAS,EACPvQ,MAIf2M,MAAM,WACE,IAAI6D,EAAKxQ,KAAKiQ,OAAO,GAkBrB,OAjBAjQ,KAAK4K,QAAU4F,EACfxQ,KAAK6K,SACL7K,KAAKuQ,SACLvQ,KAAKyP,OAASe,EACdxQ,KAAKqQ,SAAWG,EACJA,EAAGf,MAAM,oBAEjBzP,KAAK8K,WACL9K,KAAK8N,OAAO6B,aAEZ3P,KAAK8N,OAAO8B,cAEZ5P,KAAKiO,QAAQD,QACbhO,KAAK8N,OAAO+B,MAAM,KAGtB7P,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAM,GACzBoD,GAIfC,MAAM,SAAUD,GACR,IAAI7B,EAAM6B,EAAGnO,OACTqO,EAAQF,EAAGG,MAAM,iBAErB3Q,KAAKiQ,OAASO,EAAKxQ,KAAKiQ,OACxBjQ,KAAK4K,OAAS5K,KAAK4K,OAAOgG,OAAO,EAAG5Q,KAAK4K,OAAOvI,OAASsM,GAEzD3O,KAAKuQ,QAAU5B,EACf,IAAIkC,EAAW7Q,KAAKyP,MAAMkB,MAAM,iBAChC3Q,KAAKyP,MAAQzP,KAAKyP,MAAMmB,OAAO,EAAG5Q,KAAKyP,MAAMpN,OAAS,GACtDrC,KAAKqQ,QAAUrQ,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAAS,GAExDqO,EAAMrO,OAAS,IACfrC,KAAK8K,UAAY4F,EAAMrO,OAAS,GAEpC,IAAIoM,EAAIzO,KAAK8N,OAAO+B,MAgBpB,OAdA7P,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAac,GACRA,EAAMrO,SAAWwO,EAASxO,OAASrC,KAAK8N,OAAOrC,aAAe,GAC5DoF,EAASA,EAASxO,OAASqO,EAAMrO,QAAQA,OAASqO,EAAM,GAAGrO,OAChErC,KAAK8N,OAAOrC,aAAekD,GAG7B3O,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAACpB,EAAE,GAAIA,EAAE,GAAKzO,KAAK6K,OAAS8D,IAEpD3O,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACnBrC,MAIf8Q,KAAK,WAEG,OADA9Q,KAAKkQ,OAAQ,EACNlQ,MAIf+Q,OAAO,WACC,OAAI/Q,KAAKiO,QAAQ+C,iBACbhR,KAAKmQ,YAAa,EASfnQ,MAPIA,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,mIAAqI9K,KAAKsP,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAQ3BmG,KAAK,SAAU9C,GACPnO,KAAKyQ,MAAMzQ,KAAKyP,MAAMrC,MAAMe,KAIpC+C,UAAU,WACF,IAAIC,EAAOnR,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAASrC,KAAKyP,MAAMpN,QACnE,OAAQ8O,EAAK9O,OAAS,GAAK,MAAM,IAAM8O,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOtR,KAAKyP,MAIhB,OAHI6B,EAAKjP,OAAS,KACdiP,GAAQtR,KAAKiQ,OAAOW,OAAO,EAAG,GAAGU,EAAKjP,UAElCiP,EAAKV,OAAO,EAAE,KAAOU,EAAKjP,OAAS,GAAK,MAAQ,KAAK+O,QAAQ,MAAO,KAIpF9B,aAAa,WACL,IAAIiC,EAAMvR,KAAKkR,YACXM,EAAI,IAAIhM,MAAM+L,EAAIlP,OAAS,GAAGkN,KAAK,KACvC,OAAOgC,EAAMvR,KAAKqR,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAAShC,EAAOiC,GACnB,IAAI3C,EACA2B,EACAiB,EAwDJ,GAtDI3R,KAAKiO,QAAQ+C,kBAEbW,EAAS,CACL7G,SAAU9K,KAAK8K,SACfgD,OAAQ,CACJtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK2P,UAChBlE,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAa5P,KAAK8N,OAAO8B,aAE7BhF,OAAQ5K,KAAK4K,OACb6E,MAAOzP,KAAKyP,MACZmC,QAAS5R,KAAK4R,QACdvB,QAASrQ,KAAKqQ,QACdxF,OAAQ7K,KAAK6K,OACb0F,OAAQvQ,KAAKuQ,OACbL,MAAOlQ,KAAKkQ,MACZD,OAAQjQ,KAAKiQ,OACb3G,GAAItJ,KAAKsJ,GACTgH,eAAgBtQ,KAAKsQ,eAAelD,MAAM,GAC1CgD,KAAMpQ,KAAKoQ,MAEXpQ,KAAKiO,QAAQD,SACb2D,EAAO7D,OAAO+B,MAAQ7P,KAAK8N,OAAO+B,MAAMzC,MAAM,MAItDsD,EAAQjB,EAAM,GAAGA,MAAM,sBAEnBzP,KAAK8K,UAAY4F,EAAMrO,QAE3BrC,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAO6B,UACxBA,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAO8B,YAC1BA,YAAac,EACAA,EAAMA,EAAMrO,OAAS,GAAGA,OAASqO,EAAMA,EAAMrO,OAAS,GAAGoN,MAAM,UAAU,GAAGpN,OAC5ErC,KAAK8N,OAAO8B,YAAcH,EAAM,GAAGpN,QAEpDrC,KAAK4K,QAAU6E,EAAM,GACrBzP,KAAKyP,OAASA,EAAM,GACpBzP,KAAK4R,QAAUnC,EACfzP,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACtBrC,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC7P,KAAKuQ,OAAQvQ,KAAKuQ,QAAUvQ,KAAK6K,SAE1D7K,KAAKkQ,OAAQ,EACblQ,KAAKmQ,YAAa,EAClBnQ,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAMqC,EAAM,GAAGpN,QACzCrC,KAAKqQ,SAAWZ,EAAM,GACtBV,EAAQ/O,KAAK2K,cAAc0C,KAAKrN,KAAMA,KAAKsJ,GAAItJ,KAAM0R,EAAc1R,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAChHrC,KAAKoQ,MAAQpQ,KAAKiQ,SAClBjQ,KAAKoQ,MAAO,GAEZrB,EACA,OAAOA,EACJ,GAAI/O,KAAKmQ,WAAY,CAExB,IAAK,IAAIpJ,KAAK4K,EACV3R,KAAK+G,GAAK4K,EAAO5K,GAErB,OAAO,EAEX,OAAO,GAIfuK,KAAK,WACG,GAAItR,KAAKoQ,KACL,OAAOpQ,KAAKkN,IAMhB,IAAI6B,EACAU,EACAoC,EACA3L,EAPClG,KAAKiQ,SACNjQ,KAAKoQ,MAAO,GAOXpQ,KAAKkQ,QACNlQ,KAAK4K,OAAS,GACd5K,KAAKyP,MAAQ,IAGjB,IADA,IAAIqC,EAAQ9R,KAAK+R,gBACR7R,EAAI,EAAGA,EAAI4R,EAAMzP,OAAQnC,IAE9B,IADA2R,EAAY7R,KAAKiQ,OAAOR,MAAMzP,KAAK8R,MAAMA,EAAM5R,SAC5BuP,GAASoC,EAAU,GAAGxP,OAASoN,EAAM,GAAGpN,QAAS,CAGhE,GAFAoN,EAAQoC,EACR3L,EAAQhG,EACJF,KAAKiO,QAAQ+C,gBAAiB,CAE9B,IAAc,KADdjC,EAAQ/O,KAAKyR,WAAWI,EAAWC,EAAM5R,KAErC,OAAO6O,EACJ,GAAI/O,KAAKmQ,WAAY,CACxBV,GAAQ,EACR,SAGA,OAAO,EAER,IAAKzP,KAAKiO,QAAQ+D,KACrB,MAIZ,OAAIvC,GAEc,KADdV,EAAQ/O,KAAKyR,WAAWhC,EAAOqC,EAAM5L,MAE1B6I,EAKK,KAAhB/O,KAAKiQ,OACEjQ,KAAKkN,IAELlN,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,yBAA2B9K,KAAKsP,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAM3BgE,IAAI,WACI,IAAIL,EAAIzO,KAAKsR,OACb,OAAI7C,GAGOzO,KAAK8O,OAKxBmD,MAAM,SAAgBC,GACdlS,KAAKsQ,eAAevN,KAAKmP,IAIjCC,SAAS,WAED,OADQnS,KAAKsQ,eAAejO,OAAS,EAC7B,EACGrC,KAAKsQ,eAAe8B,MAEpBpS,KAAKsQ,eAAe,IAKvCyB,cAAc,WACN,OAAI/R,KAAKsQ,eAAejO,QAAUrC,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,GACxErC,KAAKqS,WAAWrS,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAAIyP,MAErE9R,KAAKqS,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBnE,GAEpB,OADAA,EAAInO,KAAKsQ,eAAejO,OAAS,EAAIkQ,KAAKC,IAAIrE,GAAK,KAC1C,EACEnO,KAAKsQ,eAAenC,GAEpB,WAKnBsE,UAAU,SAAoBP,GACtBlS,KAAKiS,MAAMC,IAInBQ,eAAe,WACP,OAAO1S,KAAKsQ,eAAejO,QAEnC4L,QAAS,CAAC,oBAAmB,GAC7BtD,cAAe,SAAmBrB,EAAGqJ,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE5S,KAAKiS,MAAM,UAAW2F,GAAI,GACjC,MACA,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAAGA,IAASjF,EAAI/H,OAAU5K,KAAKiS,MAAM,UAC1C,MACA,KAAK,EAIe,OAHAjS,KAAKiS,MAAM,WACXU,EAAI/H,OAAQgN,GACZA,GAAM,GACC,EAG3B,KAAK,EAAE5X,KAAKiS,MAAM,UAAW2F,GAAI,GACjC,MACA,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAAIA,IAASjF,EAAI/H,OAAU5K,KAAKiS,MAAM,UAC3C,MACA,KAAK,GAIe,OAHAjS,KAAKiS,MAAM,WACXU,EAAI/H,OAAQgN,GACZA,GAAM,GACC,EAG3B,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAEL,KAAK,GACL,MACA,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG9E,QAAQC,IAAI,+BAA8BJ,EAAI/H,OAAS,kBAAoB+H,EAAI7E,OAAOtC,WAAa,oBAAsBmH,EAAI7E,OAAOrC,gBAI5IqG,MAAO,CAAC,eAAe,YAAY,aAAa,gBAAgB,gBAAgB,gBAAgB,gBAAgB,iBAAiB,aAAa,YAAY,aAAa,gBAAgB,gBAAgB,gBAAgB,gBAAgB,iBAAiB,aAAa,aAAa,WAAW,aAAa,WAAW,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,cAAc,UAAU,WAAW,WAAW,WAAW,UAAU,UAAU,aAAa,cAAc,cAAc,UAAU,WAAW,WAAW,gBAAgB,oBAAoB,qBAAqB,eAAe,eAAe,mBAAmB,eAAe,eAAe,aAAa,oBAAoB,qBAAqB,aAAa,gBAAgB,gBAAgB,aAAa,aAAa,cAAc,iBAAiB,WAAW,cAAc,WAAW,uCAAiC,UAAU,WACzjb,SAASW,KACPhT,KAAKsJ,GAAK,GAGZ,OALAF,GAAOmE,MAAQA,GAIfyF,GAAOrF,UAAYvE,GAAOA,GAAO4J,OAASA,GACnC,IAAIA,GAh/BU,GAq/BrBC,EAAQ7J,OAASkR,EACjBrH,EAAQD,OAASsH,EAActH,OAC/BC,EAAQvG,MAAQ,WAAc,OAAO4N,EAAc5N,MAAMoD,MAAMwK,EAAehN,YAC9E2F,EAAQC,KAAO,SAAuB/F,GAC7BA,EAAK,KACN2F,QAAQC,IAAI,UAAU5F,EAAK,GAAG,SAC9BgG,EAAQC,KAAK,IAEjB,IAAIC,EAASrD,EAAQ,IAAMsD,aAAatD,EAAQ,IAAQuD,UAAUpG,EAAK,IAAK,QAC5E,OAAO8F,EAAQ7J,OAAOsD,MAAM2G,IAEKrD,WAAiBwD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKrG,MAAM,M,yHCxkCrBkJ,EAAb,WAKI,WACOpV,EACAC,EACAiE,EACAyS,EACAC,EACA1B,GAAsB,yBALtBlV,OAKqB,KAJrBC,SAIqB,KAHrBiE,KAGqB,KAFrByS,aAEqB,KADrBC,aACqB,KAArB1B,YAAqB,KAT5B2B,WAS4B,OAR5BC,mBAQ4B,EACxBhY,KAAK+X,OAAS,EACd/X,KAAKgY,eAAiB,EAb9B,+CAgBI,SAAmB9V,GAEf,IAAK,IAAMgC,KADXhC,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKoF,GAAGjF,WAAa,QACzFH,KAAK8X,WACnB5V,EAAQlC,KAAK8X,WAAW5T,GAAK+T,YAAY/V,GACzCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,UAAYH,KAAK8X,WAAW5T,GAAKhD,KAAKf,WAAa,IAAMH,KAAK8X,WAAW5T,GAAK/C,OAAOhB,WAAa,MAE9K,OAAO+B,MAtBf,M,uICKYsU,E,gCAAAA,O,eAAAA,I,iBAAAA,I,eAAAA,I,aAAAA,I,cAAAA,M,KAQL,IAAMD,EAAb,WAEI,WACOrV,EACAC,EACA+W,EACAC,EACAC,EACAC,GAAa,yBALbnX,OAKY,KAJZC,SAIY,KAHZ+W,UAGY,KAFZC,UAEY,KADZC,gBACY,KAAZC,MARX,iDAUI,SAAqBhX,EAA0BC,EAAcC,GAEzD,IAAI+W,EAAWtY,KAAKkY,QAAQ0H,cAAcve,EAAWC,EAAKC,GACtDiX,EAAWxY,KAAKmY,QAAQyH,cAAcve,EAAWC,EAAKC,GAE1D,GAAG+W,EAAS3W,OAASX,gBAAcyX,MAAQD,EAAS7W,OAASX,gBAAcyX,KACvE,MAAM,IAAIxW,MAAM,8DAA8DuW,EAAS7W,KAAK,iBAAiB6W,EAAS7W,KAAM,YAAY3B,KAAKkB,KAAK,WAAWlB,KAAKmB,QAChK,GAAImX,EAAS3W,OAASX,gBAAcY,QAAU4W,EAAS7W,OAASX,gBAAcY,QAAW5B,KAAKoY,gBAAkB5B,EAAoBC,KAEpI,IAAK6B,EAAS3W,OAASX,gBAAcQ,QAAYgX,EAAS7W,OAASX,gBAAcQ,OAAS,CAE5F,GAAIxB,KAAKoY,gBAAkB5B,EAAoBC,KAC3C,MAAQ,CAAEhV,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcQ,QACtE,GAAGxB,KAAKoY,gBAAkB5B,EAAoBE,MAChD,MAAO,CAAEjV,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAASE,KAAMX,gBAAcQ,QACtE,GAAGxB,KAAKoY,gBAAkB5B,EAAoBG,KAChD,MAAO,CAAElV,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAASE,KAAMX,gBAAcQ,QACtE,GAAGxB,KAAKoY,gBAAkB5B,EAAoBI,IAAI,CAEpD,GAAGlV,OAAO8W,EAAS/W,QAAU,EACzB,MAAO,CAAEA,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAASE,KAAMX,gBAAcQ,QAExE,MAAM,IAAIS,MAAM,6BAA6BuW,EAAS,8CAA8CxY,KAAKkB,KAAK,WAAWlB,KAAKmB,QAGhI,GAAInB,KAAKoY,gBAAkB5B,EAAoBK,IACjD,MAAQ,CAAEpV,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAASE,KAAMX,gBAAcQ,QAEzE,MAAM,IAAIS,MAAM,gDAAkDjC,KAAKqY,IAAM,YAAYrY,KAAKkB,KAAK,WAAWlB,KAAKmB,QAIvH,MAAM,IAAIc,MAAM,8DAA8DuW,EAAS7W,KAAK,iBAAiB6W,EAAS7W,KAAM,YAAY3B,KAAKkB,KAAK,WAAWlB,KAAKmB,QAxBlK,MAAQ,CAAEM,MAAQ6W,EAAS7W,MAAQ+W,EAAS/W,MAAQE,KAAMX,gBAAcY,UAlBpF,yBA+CI,SAAmBM,GAMf,OALAA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKqY,IAAIlY,WAAa,QAC5G+B,EAAQlC,KAAKkY,QAAQD,YAAY/V,GACjCA,EAAQlC,KAAKmY,QAAQF,YAAY/V,GACjCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKkY,QAAQhX,KAAO,IAAMlB,KAAKkY,QAAQ/W,OAAOhB,WAAa,MAC9I+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKmY,QAAQjX,KAAO,IAAMlB,KAAKmY,QAAQhX,OAAOhB,WAAa,UApDtJ,M,+HCRYoX,E,gCAAAA,O,aAAAA,I,YAAAA,M,KAKL,IAAMD,EAAb,WAEI,WACOpW,EACAC,EACA+W,EACAC,EACAC,EACAC,GAAa,yBALbnX,OAKY,KAJZC,SAIY,KAHZ+W,UAGY,KAFZC,UAEY,KADZC,gBACY,KAAZC,MARX,iDAUI,SAAqBhX,EAA0BC,EAAcC,GAEzD,GAAoB,MAAhBvB,KAAKkY,SAAmC,MAAhBlY,KAAKmY,QAAgB,CAE7C,IAAIG,EAAWtY,KAAKkY,QAAQ0H,cAAcve,EAAWC,EAAKC,GAE1D,GAAI+W,EAAS3W,OAASX,gBAAc0X,KAAK,CAErC,IAAuB,IAAnBJ,EAAS7W,OAAmBzB,KAAKoY,gBAAkBb,EAAgBC,IAEnE,MAAQ,CAAE/V,MAAO6W,EAAS7W,MAAOE,KAAMX,gBAAc0X,MAClD,IAAuB,IAAnBJ,EAAS7W,OAAkBzB,KAAKoY,gBAAkBb,EAAgBE,GAEzE,MAAQ,CAAEhW,MAAO6W,EAAS7W,MAAOE,KAAMX,gBAAc0X,MAGzD,IAAIF,EAAWxY,KAAKmY,QAAQyH,cAAcve,EAAWC,EAAKC,GAE1D,GAAIiX,EAAS7W,OAASX,gBAAc0X,KAAK,CAErC,GAAI1Y,KAAKoY,gBAAkBb,EAAgBC,IAEvC,MAAO,CAAE/V,MADM6W,EAAS7W,OAAS+W,EAAS/W,MAClBE,KAAMX,gBAAc0X,MAC1C,GAAI1Y,KAAKoY,gBAAkBb,EAAgBE,GAE7C,MAAO,CAAEhW,MADM6W,EAAS7W,OAAS+W,EAAS/W,MAClBE,KAAMX,gBAAc0X,MAE5C,MAAM,IAAIzW,MAAM,gDAAkDjC,KAAKqY,IAAM,YAAYrY,KAAKkB,KAAK,WAAWlB,KAAKmB,QAIvH,MAAM,IAAIc,MAAM,8DAA8DuW,EAAS7W,KAAO,UAAU3B,KAAKkB,KAAK,WAAWlB,KAAKmB,QAKtI,MAAM,IAAIc,MAAM,8DAA8DqW,EAAS3W,KAAO,UAAU3B,KAAKkB,KAAK,WAAWlB,KAAKmB,QAItI,MAAM,IAAIc,MAAM,yDAAyDjC,KAAKkB,KAAK,YAAalB,KAAKmB,UAlDjH,yBAuDI,SAAmBe,GACf,GAAoB,MAAhBlC,KAAKkY,SAAmC,MAAhBlY,KAAKmY,QAM7B,OALAjW,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKqY,IAAIlY,WAAa,QAC5G+B,EAAQlC,KAAKkY,QAAQD,YAAY/V,GACjCA,EAAQlC,KAAKmY,QAAQF,YAAY/V,GACjCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKkY,QAAQhX,KAAO,IAAMlB,KAAKkY,QAAQ/W,OAAOhB,WAAa,MAC9I+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKmY,QAAQjX,KAAO,IAAMlB,KAAKmY,QAAQhX,OAAOhB,WAAa,MAG9I,MAAM,IAAI8B,MAAM,yDAAyDjC,KAAKkB,KAAK,YAAalB,KAAKmB,YAhEjH,M,2GCLakV,EAAb,WAII,WACOnV,EACAC,EACAyX,EACAC,GACL,yBAJK3X,OAIN,KAHMC,SAGN,KAFMyX,YAEN,KADMC,WACN,KAPDrW,YAOC,EACGxC,KAAKwC,OAAO,GAVpB,sDAcI,WAEI,IAFmC,EAE/BuW,EAAsB,GAFS,cAGd/Y,KAAK4Y,WAHS,IAGnC,2BAAqC,CAAC,IAA3BI,EAA0B,QAEjC,GAA0B,UAAtBA,EAAOnB,WAAuB,CAE9B,KAAIkB,EAAS1W,OAAQ,GAGjB,MAAM,IAAIJ,MAAM,mEAAmE+W,EAAO9X,KAAK,WAAW8X,EAAO7X,QAFjH4X,EAAS3G,WAKb2G,EAAShW,KAAKiW,IAba,8BAgBnC,OAAOD,IA9Bf,2BAiCI,SAAqB1X,EAA0BC,EAAeC,GA+B1D,OA7BAvB,KAAKwC,OAAS,GACdxC,KAAK4Y,UAAY5Y,KAAKkZ,qBAEA,QAAlBlZ,KAAK6Y,SAEDvX,EAAIkC,cAAcnB,OAAS,GAAKrC,KAAK4Y,UAAUvW,OAAS,IAEpDf,EAAIgC,gBAAkBtD,KAAK4Y,UAAU,GAAGxT,IAAuC,SAAjCpF,KAAK4Y,UAAU,GAAGf,WAE5D7X,KAAKqZ,sBAAsBhY,EAAWC,EAAK,KAExCtB,KAAK4Y,UAAUvW,OAAU,EACxBrC,KAAKmZ,SAAS9X,EAAWC,EAAK,GAE9BtB,KAAK8C,eAAexB,EAAK,KAGK,aAAhCtB,KAAK4Y,UAAU,GAAGxC,WACxBpW,KAAKmZ,SAAS9X,EAAWC,EAAK,IAKlCtB,KAAK4Y,UAAUvW,OAAS,EACxBrC,KAAKmZ,SAAS9X,EAAWC,EAAK,EAAGC,GAEjCvB,KAAK8C,eAAexB,EAAK,IAG1B,CAACG,MAAOzB,KAAKwC,OAAQb,KAAMX,gBAAcyX,QAhExD,sBAmEI,SAAiBpX,EAA0B4B,EAAmBqW,EAAsB/X,GAEhF,QAAoBO,IAAjBP,EAA4B,CAE3B,GAAgD,WAA5CvB,KAAK4Y,UAAUU,GAAczB,WAa7B,MAAM,IAAI5V,MAAM,qCAAuCjC,KAAK4Y,UAAUU,GAAclU,IAXjFpF,KAAK4Y,UAAUvW,OAASiX,EAAe,EACtCtZ,KAAKmZ,SAAS9X,EAAW4B,EAAUqW,EAAe,EAAG/X,GAIjDvB,KAAKwC,OAAOO,KAAK,CAACtB,MAAQF,EAAaH,MAAMmC,WAAW,IAAK,IAAK5B,KAAMX,gBAAcY,cAWlG,GAAgD,aAA5C5B,KAAK4Y,UAAUU,GAAczB,WAA0B,CAEvD,IAAMxU,EAAOJ,EAASuW,YAAYxZ,KAAK4Y,UAAUU,GAAclU,IAC/D,GAAW,MAAR/B,EAEKrD,KAAKyZ,sBAAsBpY,EAAW4B,EAAUI,EAAMiW,KAEnDtZ,KAAK4Y,UAAUvW,OAASiX,EAAe,EACtCtZ,KAAKmZ,SAAS9X,EAAW4B,EAAUqW,EAAe,EAAGjW,GAIjDrD,KAAKwC,OAAOO,KAAK,CAACtB,MAAQ4B,EAAKjC,MAAMmC,WAAW,IAAK,IAAK5B,KAAMX,gBAAcY,eAMxF,GAAGqB,EAASO,cAAcnB,OAAS,GAAgD,aAA3CrC,KAAK4Y,UAAUU,GAAclD,UAA0B,CAAC,IAAD,gBAE1EnT,EAASO,eAFiE,IAEjG,2BAAgD,CAAC,IAAtCqc,EAAqC,QAC5C7f,KAAKmZ,SAAS9X,EAAWwe,EAAUvG,IAH0D,qCAOnG,GAAgD,mBAA5CtZ,KAAK4Y,UAAUU,GAAczB,WAAgC,CAEnE,GAAI7X,KAAK4Y,UAAUvW,SAAWiX,EAAe,EAwBzC,MAAM,IAAIrX,MAAM,kIAtBhB,GAA+C,aAA3CjC,KAAK4Y,UAAUU,GAAclD,UAE7BpW,KAAK4Z,wBAAwB3W,QAI7B,GAAIA,EAASG,cAAcf,OAAS,EAAE,CAAC,IAAD,gBAEfY,EAASG,eAFM,IAElC,2BAA0C,CAAC,IAAhCC,EAA+B,QAElCrD,KAAKyZ,sBAAsBpY,EAAW4B,EAAUI,EAAMiW,IAGtDtZ,KAAKwC,OAAOO,KAAK,CAACtB,MAAQ4B,EAAKjC,MAAMmC,WAAW,IAAK,IAAK5B,KAAMX,gBAAcY,UAPpD,qCAmB5C,GAA+C,UAA3C5B,KAAK4Y,UAAUU,GAAczB,WAAsB,CAEzD,GAAI7X,KAAK4Y,UAAUvW,SAAWiX,EAAe,EAkBzC,MAAM,IAAIrX,MAAM,yHAhB+B,aAA3CjC,KAAK4Y,UAAUU,GAAclD,UAE7BpW,KAAK8Z,qBAAqB7W,GAIH,KAAnBA,EAASf,OAELlC,KAAKwC,OAAOO,KAAK,CAACtB,MAAQwB,EAASf,MAAOP,KAAMX,gBAAcY,cAW5E,GAAgD,WAA5C5B,KAAK4Y,UAAUU,GAAczB,WAEhC7X,KAAK4Y,UAAUvW,OAAUiX,EAAe,EACvCtZ,KAAKmZ,SAAS9X,EAAW4B,EAAUqW,EAAe,GAElDtZ,KAAK8C,eAAeG,EAAU,SAGhC,GAAgD,eAA5CjD,KAAK4Y,UAAUU,GAAczB,YAEnC,GAAG5U,EAASO,cAAcnB,OAAS,EAAE,CAAC,IAAD,gBAETY,EAASO,eAFA,IAEjC,2BAAgD,CAAC,IAAtCC,EAAqC,QAExCzD,KAAK+Z,uBAAuB1Y,EAAW4B,EAAUQ,EAAW6V,KAEzDtZ,KAAK4Y,UAAUvW,OAASiX,EAAe,EACtCtZ,KAAKmZ,SAAS9X,EAAWoC,EAAW6V,EAAe,GAEnDtZ,KAAK8C,eAAeW,EAAW,MATV,oCAenC,IAAgD,SAA5CzD,KAAK4Y,UAAUU,GAAczB,WAuBnC,MAAM,IAAI5V,MAAM,mCAAmCjC,KAAK4Y,UAAUU,GAAczB,WAAW,gBAAgB7X,KAAK4Y,UAAUU,GAAczB,WAAxH,uCACN7X,KAAK4Y,UAAUU,GAAcpY,KAAK,cAAclB,KAAK4Y,UAAUU,GAAcnY,QAtBvF,GAAG8B,EAASO,cAAcnB,OAAS,EAAE,CAAC,IAAD,gBAETY,EAASO,eAFA,IAEjC,2BAAgD,CAAC,IAAtCC,EAAqC,QAEzCA,EAAUH,gBAAkBtD,KAAK4Y,UAAUU,GAAclU,GAEpDpF,KAAK+Z,uBAAuB1Y,EAAW4B,EAAUQ,EAAW6V,KAEzDtZ,KAAK4Y,UAAUvW,OAASiX,EAAe,EACtCtZ,KAAKmZ,SAAS9X,EAAWoC,EAAW6V,EAAe,GAEnDtZ,KAAK8C,eAAeW,EAAW,KAGU,aAA3CzD,KAAK4Y,UAAUU,GAAclD,WACnCpW,KAAKmZ,SAAS9X,EAAWoC,EAAW6V,IAfX,mCAjMrD,kCA4NI,SAA6BrW,GAUzB,GARuB,KAAnBA,EAASf,OAELlC,KAAKwC,OAAOO,KAAK,CAACtB,MAAQwB,EAASf,MAAOP,KAAMX,gBAAcY,SAMlEqB,EAASO,cAAcnB,OAAS,EAAE,CAAC,IAAD,gBAEVY,EAASO,eAFC,IAElC,2BAAgD,CAAC,IAAtCC,EAAqC,QAC5CzD,KAAK8Z,qBAAqBrW,IAHI,kCAtO9C,qCA8OI,SAAgCR,GAAmB,IAAD,gBAE3BA,EAASG,eAFkB,IAE9C,2BAA0C,CAAC,IAAhCC,EAA+B,QAGlCrD,KAAKwC,OAAOO,KAAK,CAACtB,MAAQ4B,EAAKjC,MAAMmC,WAAW,IAAK,IAAK5B,KAAMX,gBAAcY,UALxC,8BAW9C,GAAIqB,EAASO,cAAcnB,OAAS,EAAE,CAAC,IAAD,gBAEVY,EAASO,eAFC,IAElC,2BAAgD,CAAC,IAAtCC,EAAqC,QAC5CzD,KAAK4Z,wBAAwBnW,IAHC,kCAzP9C,4BAkQI,SAAuBR,EAAkBC,GAGjClD,KAAKwC,OAAOO,KAAK,CAACtB,MAAQwB,EAAWtB,KAAMX,gBAAc4B,SArQrE,mCAgSI,SAA8BvB,EAA0B4B,EAAmB1B,EAAsB+X,GAE7F,IAAK,IAAIpZ,EAAI,EAAGA,EAAIF,KAAK4Y,UAAUU,GAAcxB,WAAWzV,OAAQnC,IAAK,CAErE,IAAIyY,EAAmB3Y,KAAK4Y,UAAUU,GAAcxB,WAAW5X,GAAG0f,cAAcve,EAAW4B,EAAU1B,GACrG,GAAIoX,EAAOlX,QAAUT,gBAAcQ,QAE/B,GAAImX,EAAOlX,MAAQ,GAAK,GAAKkX,EAAOlX,MAAQ,EAAIwB,EAASO,cAAcnB,QAC/DY,EAASG,cAAcuV,EAAOlX,MAAQ,KAAOF,EAC7C,OAAO,OAGb,GAAIoX,EAAOhX,OAASX,gBAAcyX,MAEpC,GAA4B,IAAxBE,EAAOlX,MAAMY,OACb,OAAO,OAET,IAAqB,IAAjBsW,EAAOlX,MACb,OAAO,EAIf,OAAO,IAtTf,oCAyTI,SAA+BJ,EAA0B4B,EAAmBQ,EAAqB6V,GAE7F,IAAK,IAAIpZ,EAAI,EAAGA,EAAIF,KAAK4Y,UAAUU,GAAcxB,WAAWzV,OAAQnC,IAAK,CAErE,IAAIyY,EAAmB3Y,KAAK4Y,UAAUU,GAAcxB,WAAW5X,GAAG0f,cAAcve,EAAWoC,GAC3F,GAAIkV,EAAOhX,OAASX,gBAAcQ,QAE9B,GAAImX,EAAOlX,MAAQ,GAAK,GAAKkX,EAAOlX,MAAQ,EAAIwB,EAASO,cAAcnB,QAC/DY,EAASO,cAAcmV,EAAOlX,MAAQ,KAAOgC,EAC7C,OAAO,OAGb,GAAIkV,EAAOhX,OAASX,gBAAcyX,MAEpC,GAA4B,IAAxBE,EAAOlX,MAAMY,OACb,OAAO,OAET,IAAqB,IAAjBsW,EAAOlX,MACb,OAAO,EAGf,OAAO,IA9Uf,mCAiVI,SAA8BJ,EAA0BoC,EAAqB6V,GAEzE,IAAK,IAAIpZ,EAAI,EAAGA,EAAIF,KAAK4Y,UAAUU,GAAcxB,WAAWzV,OAAQnC,IAAK,CAErE,IAAIyY,EAAmB3Y,KAAK4Y,UAAUU,GAAcxB,WAAW5X,GAAG0f,cAAcve,EAAWoC,GAC3F,GAAIkV,EAAOhX,OAASX,gBAAcQ,QAE9B,GAAsB,IAAjBmX,EAAOlX,MACR,OAAO,OAET,GAAIkX,EAAOhX,OAASX,gBAAcyX,MAEpC,GAA4B,IAAxBE,EAAOlX,MAAMY,OACb,OAAO,OAET,IAAqB,IAAjBsW,EAAOlX,MACb,OAAO,EAGf,OAAO,IApWf,yBAuWI,SAAmBS,GAQf,IAAK,IAAMgC,IAPW,aAAlBlE,KAAK6Y,SACL3W,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,iBAC/C,aAAlBH,KAAK6Y,SACZ3W,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,kBAExE+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,mBAE1DH,KAAK4Y,UACnB1W,EAAQlC,KAAK4Y,UAAU1U,GAAK+T,YAAY/V,GACpClC,KAAKkB,KAAKf,aAAeH,KAAK4Y,UAAU1U,GAAKhD,KAAKf,YAAcH,KAAKmB,OAAOhB,aAAeH,KAAK4Y,UAAU1U,GAAK/C,OAAOhB,aACtH+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,UAAYH,KAAK4Y,UAAU1U,GAAKhD,KAAKf,WAAa,IAAMH,KAAK4Y,UAAU1U,GAAK/C,OAAOhB,WAAa,OAGhL,OAAO+B,MArXf,M,uICAY6U,E,wCAAAA,O,iBAAAA,I,mCAAAA,I,iBAAAA,I,2BAAAA,I,iBAAAA,I,4BAAAA,M,KAUL,IAAMD,EAAb,WAEI,WACO5V,EACAC,EACA+W,EACAC,EACAC,EACAC,GAAa,yBALbnX,OAKY,KAJZC,SAIY,KAHZ+W,UAGY,KAFZC,UAEY,KADZC,gBACY,KAAZC,MARX,iDAUI,SAAqBhX,EAA0BC,EAAcC,GAEzD,IAAI+W,EAAWtY,KAAKkY,QAAQ0H,cAAcve,EAAWC,EAAKC,GACtDiX,EAAWxY,KAAKmY,QAAQyH,cAAcve,EAAWC,EAAKC,GAE1D,GAAI+W,EAAS3W,OAASX,gBAAcyX,MAAQD,EAAS7W,OAASX,gBAAcyX,KAAM,CAAC,IAAD,gBAEzDH,EAAS7W,OAFgD,IAE9E,2BAAsC,CAAC,IAAD,EAA3B0Y,EAA2B,sBACb3B,EAAS/W,OADI,IAClC,2BAAqC,CAAC,IAA3B2Y,EAA0B,QAEjC,GAAID,EAAOxY,OAASX,gBAAc4B,MAAQwX,EAAOzY,OAASX,gBAAc4B,MAEpE,GAAI5C,KAAKqa,QAAQF,EAAO1Y,MAAM6B,cAAe8W,EAAO3Y,MAAM6B,eACtD,MAAO,CAAC7B,OAAO,EAAME,KAAMX,gBAAc0X,WAE3C,GAAIyB,EAAOxY,OAASX,gBAAc4B,MAEpC,GAA0C,IAAtCuX,EAAO1Y,MAAM+B,cAAcnB,QAAuC,KAAvB8X,EAAO1Y,MAAMS,OAEpDlC,KAAKqa,QAAQF,EAAO1Y,MAAMS,MAAOkY,EAAO3Y,OACxC,MAAO,CAACA,OAAO,EAAME,KAAMX,gBAAc0X,WAIhD,GAAK0B,EAAOzY,OAASX,gBAAc4B,MAEpC,GAA0C,IAAtCwX,EAAO3Y,MAAM+B,cAAcnB,QAAuC,KAAvB+X,EAAO3Y,MAAMS,OAEpDlC,KAAKqa,QAAQD,EAAO3Y,MAAMS,MAAOiY,EAAO1Y,OACxC,MAAO,CAACA,OAAO,EAAME,KAAMX,gBAAc0X,WAMjD,GAAI1Y,KAAKqa,QAAQF,EAAO1Y,MAAO2Y,EAAO3Y,OAClC,MAAO,CAACA,OAAO,EAAME,KAAMX,gBAAc0X,OA7BnB,gCAFwC,8BAoC9E,MAAO,CAACjX,OAAO,EAAQE,KAAOX,gBAAc0X,MAE1C,GAAIJ,EAAS3W,OAASX,gBAAcyX,KAAK,CAAC,IAAD,gBAEtBH,EAAS7W,OAFa,IAE3C,2BAAqC,CAAC,IAA3B0Y,EAA0B,QACjC,GAAIA,EAAOxY,OAASX,gBAAc4B,MAE9B,GAA0C,IAAtCuX,EAAO1Y,MAAM+B,cAAcnB,QAAuC,KAAvB8X,EAAO1Y,MAAMS,OAEpDlC,KAAKqa,QAAQF,EAAO1Y,MAAMS,MAAOsW,EAAS/W,OAC1C,MAAO,CAACA,OAAO,EAAME,KAAMX,gBAAc0X,WAKjD,GAAI1Y,KAAKqa,QAAQF,EAAO1Y,MAAO+W,EAAS/W,OACpC,MAAO,CAACA,OAAO,EAAME,KAAMX,gBAAc0X,OAdV,8BAkB3C,MAAO,CAACjX,OAAO,EAAQE,KAAOX,gBAAc0X,MAE1C,GAAIF,EAAS7W,OAASX,gBAAcyX,KAAK,CAAC,IAAD,gBAEtBD,EAAS/W,OAFa,IAE3C,2BAAqC,CAAC,IAA3B2Y,EAA0B,QACjC,GAAKA,EAAOzY,OAASX,gBAAc4B,MAE/B,GAA0C,IAAtCwX,EAAO3Y,MAAM+B,cAAcnB,QAAuC,KAAvB+X,EAAO3Y,MAAMS,OAEpDlC,KAAKqa,QAAQD,EAAO3Y,MAAMS,MAAOoW,EAAS7W,OAC1C,MAAO,CAACA,OAAO,EAAME,KAAMX,gBAAc0X,WAKjD,GAAI1Y,KAAKqa,QAAQ/B,EAAS7W,MAAO2Y,EAAO3Y,OACpC,MAAO,CAACA,OAAO,EAAME,KAAMX,gBAAc0X,OAdV,8BAkB3C,MAAO,CAACjX,OAAO,EAAQE,KAAOX,gBAAc0X,MAG5C,MAAO,CAAEjX,MAAOzB,KAAKqa,QAAQ/B,EAAS7W,MAAO+W,EAAS/W,OAAQE,KAAMX,gBAAc0X,QA9F9F,qBAmGI,SAAgBJ,EAAmBE,GAE/B,GAAIxY,KAAKoY,gBAAkBrB,EAAoBC,MAE3C,OADesB,GAAYE,EAExB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBE,eAElD,OADeqB,GAAYE,EAEzB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBG,MAEjD,OADeoB,EAAWE,EAEvB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBI,WAElD,OADemB,GAAYE,EAExB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBK,MAElD,OADekB,EAAWE,EAEvB,GAAIxY,KAAKoY,gBAAkBrB,EAAoBM,WAElD,OADeiB,GAAYE,EAI3B,MAAM,IAAIvW,MAAM,gDAAkDjC,KAAKqY,IAAM,YAAYrY,KAAKkB,KAAK,WAAWlB,KAAKmB,UAzH/H,yBA6HI,SAAmBe,GAMf,OALAA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,WAAcH,KAAKqY,IAAIlY,WAAa,QAC5G+B,EAAQlC,KAAKkY,QAAQD,YAAY/V,GACjCA,EAAQlC,KAAKmY,QAAQF,YAAY/V,GACjCA,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKkY,QAAQhX,KAAO,IAAMlB,KAAKkY,QAAQ/W,OAAOhB,WAAa,MAC9I+B,GAAS,OAASlC,KAAKkB,KAAKf,WAAa,IAAMH,KAAKmB,OAAOhB,WAAa,SAAWH,KAAKmY,QAAQjX,KAAO,IAAMlB,KAAKmY,QAAQhX,OAAOhB,WAAa,UAlItJ,M,kHCXa2e,EAAb,WAEI,WACW5d,EACAC,EACA2e,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAAa,yBARblf,OAQY,KAPZC,SAOY,KANZ2e,OAMY,KALZC,OAKY,KAJZC,SAIY,KAHZC,QAGY,KAFZC,UAEY,KADZC,QACY,KAAZC,MAXf,iDAaI,SAAcC,EAAuBC,GAEjC,IAAI3H,EAAiB,GAEjB5Y,EAAmBC,KAAKggB,OAAOJ,cAAcS,EAAQC,GACzD,GAAIvgB,EAAQ4B,OAASX,gBAAcyX,KAAK,CAEpC,IAFoC,EAEhC8H,EAAwB,IAAIxb,IAAcsb,EAAQ,iBAFlB,cAGdtgB,EAAQ0B,OAHM,IAGpC,2BAAqC,CAAC,IAA3BkB,EAA0B,QAEjC4d,EAAOC,YAAYxgB,KAAK8f,KAAOnd,GAC3B3C,KAAKygB,aAAaF,EAAQD,KAC1B3H,GAAU3Y,KAAKogB,IAAIR,cAAcW,EAAQD,GAAS7e,QAPtB,8BAUpC,MAAO,CAACA,MAAOkX,EAAQhX,KAAOX,gBAAcY,QAG5C,MAAM,IAAIK,MAAM,gCAAiCjC,KAAK8f,KAAO,mEAAoE9f,KAAKkB,KAAO,YAAalB,KAAKmB,UA/B3K,0BAmCI,SAAqBkf,EAAuBC,GAA4B,IAAD,EAE/D3H,EAAM,UAAI3Y,KAAKigB,aAAT,aAAI,EAAYL,cAAcS,EAAQC,GAChD,QAAexe,IAAX6W,EAAqB,CAErB,GAAIA,EAAOhX,OAASX,gBAAc0X,KAC9B,OAAOC,EAAOlX,MAEd,MAAM,IAAIQ,MAAM,uDAAuD0W,EAAOhX,KAAKxB,WAAW,uCAAwCH,KAAKkB,KAAO,YAAalB,KAAKmB,QAG5K,OAAO,IA9Cf,yBAiDI,SAAYe,GACR,MAAM,IAAID,MAAM,+BAlDxB,M,iGCCagd,EAAb,WAEI,WACO/d,EACAC,EACAuf,EACAC,EACAC,GAAiC,yBAJjC1f,OAIgC,KAHhCC,SAGgC,KAFhCuf,YAEgC,KADhCC,MACgC,KAAhCC,SAPX,iDAQI,SAAcP,EAAuBC,EAAkB/e,GAEnD,IAAMmf,EAAY1gB,KAAK0gB,UAAUd,cAAcS,EAAQC,GACvD,GAAII,EAAU/e,OAASX,gBAAc0X,KACjC,MAAM,IAAIzW,MAAM,oDAAoDye,EAAU/e,KAAK,oCAAoC3B,KAAKkB,KAAM,WAAWlB,KAAKmB,QAGtJ,IAAwB,IAApBuf,EAAUjf,MAGV,OADkBzB,KAAK2gB,IAAIf,cAAcS,EAAQC,GAG9C,IAAD,EAEIM,EAAM,UAAG5gB,KAAK4gB,cAAR,aAAG,EAAahB,cAAcS,EAAQC,GAClD,YAAexe,IAAX8e,EACO,CAACnf,MAAQ,GAAIE,KAAMX,gBAAcyX,MAErCmI,IA1BnB,yBA+BI,SAAY1e,GACR,MAAM,IAAID,MAAM,+BAhCxB,M,kGCAa8c,EAAb,WAEI,WACW7d,EACAC,EACA0f,EACAF,EACAP,GAAc,yBAJdlf,OAIa,KAHbC,SAGa,KAFb0f,QAEa,KADbF,MACa,KAAbP,MAPf,iDAUI,SAAqBC,EAAuBC,GAExC,GAAKD,EAAOS,UAAU9gB,KAAK6gB,OAMvB,MAAM,IAAI5e,MAAM,+CAA+CjC,KAAK6gB,MAAM,YAAY7gB,KAAKkB,KAAM,aAAalB,KAAKmB,QAJnH,IAAIpB,EAAqBC,KAAK2gB,IAAIf,cAAcS,EAAQC,GAM5D,OALID,EAAOG,YAAYxgB,KAAK6gB,MAAO9gB,GAK5B,CAAC0B,MAAQzB,KAAKogB,IAAIR,cAAcS,EAAQC,GAAS7e,MAAOE,KAAMX,gBAAcY,UApB3F,yBAuBI,SAAYM,GACR,MAAM,IAAID,MAAM,+BAxBxB,M,0HCCa4c,EAAb,WAEI,WACW3d,EACAC,EACA4f,GAAgB,yBAFhB7f,OAEe,KADfC,SACe,KAAf4f,QALf,iDAQI,SAAqBV,EAAuBC,GAExC,IAFmE,EAE/DvgB,EAAsB,GAFyC,cAGhDC,KAAK+gB,OAH2C,IAGnE,2BAA+B,CAAC,IAArBC,EAAoB,QAC3Bze,IAAgBM,WAAW9C,EAASihB,EAAKpB,cAAcS,EAAQC,GAAS7e,QAJT,8BAMnE,MAAO,CAACA,MAAOc,IAAgB0e,YAAYlhB,GAAU4B,KAAOX,gBAAcY,UAdlF,yBAiBI,SAAYM,GACR,MAAM,IAAID,MAAM,+BAlBxB,M,qHCFa+c,EAAb,WAEI,WACW9d,EACAC,EACA+f,GAA4B,yBAF5BhgB,OAE2B,KAD3BC,SAC2B,KAA3B+f,SALf,iDAQI,SAAcb,EAAuBC,GAEjC,IAF4D,EAExDvgB,EAAsB,GAFkC,cAIvCC,KAAKkhB,QAJkC,IAI5D,2BAAkC,CAAC,IAEzBC,EAFwB,QAELvB,cAAcS,EAAQC,GAE3Ca,EAAUxf,OAASX,gBAAcyX,KACjClW,IAAgBM,WAAW9C,EAASohB,EAAU1f,OAE9C1B,EAAQgD,KAAKoe,IAXuC,8BAc5D,MAAO,CAAC1f,MAAOc,IAAgB0e,YAAYlhB,GAAU4B,KAAOX,gBAAcY,UAtBlF,yBAyBI,SAAYM,GACR,MAAM,IAAID,MAAM,+BA1BxB,M,yHCEaid,EAAb,WAEI,WACWhe,EACAC,EACA0f,EACAO,GAAe,yBAHflgB,OAGc,KAFdC,SAEc,KADd0f,QACc,KAAdO,UANf,iDAQI,SAAqBf,EAAuBC,GAExC,IAAIvgB,EAAsB,GAEtBshB,EAAUhB,EAAOiB,OAAOthB,KAAK6gB,OACjC,GAAe,MAAXQ,EAAgB,CAEhB,GAAIA,EAAQ1f,OAASX,gBAAcyX,KAAK,CAAC,IAAD,gBAEd4I,EAAQ5f,OAFM,IAEpC,2BAAqC,CAAC,IAA3BkB,EAA0B,QAE7BA,EAAQhB,OAASX,gBAAc4B,KAC/BL,IAAgBM,WAAW9C,EAASC,KAAKohB,QAAQxB,cAAcS,EAAQ1d,EAAQlB,OAAOA,OAEtF1B,EAAQgD,KAAKJ,IAPe,8BAUpC,MAAO,CAAClB,MAAQ1B,EAAS4B,KAAMX,gBAAcyX,MAE3C,OAAI4I,EAAQ1f,OAASX,gBAAc4B,MACrCL,IAAgBM,WAAW9C,EAASC,KAAKohB,QAAQxB,cAAcS,EAAQgB,EAAQ5f,OAAOA,OAC/E,CAACA,MAAQ1B,EAAS4B,KAAMX,gBAAcyX,OAEtC4I,EAIX,MAAM,IAAIpf,MAAM,2CAA2CjC,KAAK6gB,MAAM,YAAY7gB,KAAKkB,KAAM,aAAalB,KAAKmB,UAnC3H,yBAuCI,SAAYe,GACR,MAAM,IAAID,MAAM,+BAxCxB,M,iBCRA,cAyEA,IAAIsf,EAAc,WAClB,IAAIza,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAE1E,OAAO4E,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGI,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,IAAIC,EAAI,CAAC,GAAG,IAAIC,EAAI,CAAC,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IACtYU,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,MAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAQ,EAAE,GAAK,EAAE,OAAS,GAAG,IAAI,GAAG,IAAI,GAAG,IAAM,GAAG,IAAI,GAAG,IAAI,GAAG,YAAc,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,WAAa,GAAG,KAAO,GAAG,OAAS,GAAG,UAAY,GAAG,IAAM,GAAG,QAAU,GAAG,OAAS,GAAG,IAAI,GAAG,IAAI,GAAG,OAAS,GAAG,QAAU,GAAG,IAAI,GAAG,IAAI,GAAG,QAAU,GAAG,KAAO,GAAG,IAAI,GAAG,SAAW,GAAG,IAAI,GAAG,SAAW,GAAG,UAAY,GAAG,SAAW,GAAG,GAAK,GAAG,OAAS,GAAG,OAAS,GAAG,IAAI,GAAG,KAAO,GAAG,UAAY,GAAG,UAAY,GAAG,UAAY,GAAG,GAAK,GAAG,OAAS,GAAG,QAAU,GAAG,KAAO,GAAG,QAAU,GAAG,QAAU,EAAE,KAAO,GACzjBC,WAAY,CAACC,EAAE,QAAQC,EAAE,IAAIC,EAAE,IAAIC,EAAE,IAAIqC,EAAE,IAAIL,EAAE,KAAKC,GAAG,SAAS/B,GAAG,IAAIiC,GAAG,IAAIG,GAAG,MAAMC,GAAG,IAAIpC,GAAG,IAAIiC,GAAG,IAAIhC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIK,GAAG,MAAMmN,GAAG,IAAIxC,GAAG,IAAIC,GAAG,SAASE,GAAG,IAAIC,GAAG,IAAIE,GAAG,OAAOC,GAAG,IAAIE,GAAG,IAAII,GAAG,SAASC,GAAG,IAAIC,GAAG,OAAOmH,GAAG,KAAKC,GAAG,SAASC,GAAG,UAAUC,GAAG,OAAOC,GAAG,WACvR9S,aAAcvfC,cAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAG3I,OAAS,EACrB,OAAQ0I,GACR,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,KAAK,GACvE/K,KAAKuL,EAAIP,EAAGE,GACZ,MACA,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GACxClL,KAAKuL,EAAIP,EAAGE,EAAG,GAAGF,EAAGE,GACrB,MACA,KAAK,EAAG,KAAK,GACblL,KAAKuL,EAAIP,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,GAClE,MACA,KAAK,EAAG,KAAK,GACblL,KAAKuL,EAAIP,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,GACvC,MACA,KAAK,GAOG,OALAsW,EAAWtf,EACXA,EAAQ,GACRuf,EAAMC,kBACNC,EAAUF,EAAMG,aAChBH,EAAMI,QACC,CAACC,WAAYN,EAAUO,aAAcJ,GAGpD,KAAK,GAAI,KAAK,GACdzf,GAAS,IAAM8I,EAAGE,EAAG,GAAK,KAAOF,EAAGE,EAAG,GAAK,MAC5C,MACA,KAAK,GAAI,KAAK,GACdhJ,GAAS,IAAM8I,EAAGE,EAAG,GAAK,KAAOF,EAAGE,EAAG,GAAK,IAAMF,EAAGE,EAAG,GAAK,MAC7D,MACA,KAAK,GAGG,IAAI,IAAMhH,KADVhC,GAAS,UACQ8I,EAAGE,EAAG,GACnBhJ,GAAS8I,EAAGE,EAAG,GAAGhH,GAEtBhC,GAAS,MAEjB,MACA,KAAK,GAGG,IAAI,IAAMgC,KADVhC,GAAS,YACQ8I,EAAGE,EAAG,GACnBhJ,GAAS8I,EAAGE,EAAG,GAAGhH,GAEtBhC,GAAS,MAEjB,MACA,KAAK,GACL8I,EAAGE,EAAG,GAAGnI,KAAK,KAAKiI,EAAGE,IAAKlL,KAAKuL,EAAEP,EAAGE,EAAG,GACxC,MACA,KAAK,GACLF,EAAGE,EAAG,GAAGnI,KAAK,KAAKiI,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAG,KAAKlL,KAAKuL,EAAEP,EAAGE,EAAG,GAC3D,MACA,KAAK,GACLlL,KAAKuL,EAAE,CAACP,EAAGE,IACX,MACA,KAAK,GACLlL,KAAKuL,EAAE,CAACP,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAG,KAC9B,MACA,KAAK,GAGG,IAAK,IAAMhH,KADXhC,GAAS,KAAK8I,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAG,KACjDF,EAAGE,EAAG,GACpBhJ,GAAS8I,EAAGE,EAAG,GAAGhH,GAEtBhC,GAAS8I,EAAGE,GAAI,KAExB,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC7EF,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,IAAKlL,KAAKuL,EAAEP,EAAGE,EAAG,GACnC,MACA,KAAK,GAAI,KAAK,GACdF,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,EAAG,GAAGF,EAAGE,GAAI,MAAMlL,KAAKuL,EAAEP,EAAGE,EAAG,GACjD,MACA,KAAK,GAAI,KAAK,GACdF,EAAGE,EAAG,GAAGnI,KAAKiI,EAAGE,EAAG,GAAG,SAASlL,KAAKuL,EAAEP,EAAGE,EAAG,GAC7C,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC7ElL,KAAKuL,EAAI,CAACP,EAAGE,IACb,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAE,CAACP,EAAGE,EAAG,GAAGF,EAAGE,GAAI,MACxB,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAE,CAACP,EAAGE,EAAG,GAAG,SACjB,MACA,KAAK,GAEGlL,KAAKuL,EAAIkW,EAAMO,UAAU,IAAI3b,EAAW2E,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,KAEjF,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAEP,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,GAAI,KACjD,MACA,KAAK,GACLlL,KAAKuL,EAAEP,EAAGE,EAAG,GAAGF,EAAGE,GAAI,KACvB,MACA,KAAK,GAGG,IAAK,IAAMhH,KADXlE,KAAKuL,EAAEP,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAG,KAAKF,EAAGE,EAAG,GAAGF,EAAGE,GAAI,KACzCF,EAAGE,EAAG,GACpBhJ,GAASuf,EAAMO,UAAUhX,EAAGE,EAAG,GAAGhH,IAG9C,MACA,KAAK,GACLlE,KAAKuL,EAAEP,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAG,KAAKF,EAAGE,EAAG,GAAGF,EAAGE,GAAI,KAC3D,MACA,KAAK,GACLlL,KAAKuL,EAAEP,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,GAAI,KACpC,MACA,KAAK,GACLlL,KAAKuL,EAAEP,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,GAAI,KAC3E,MACA,KAAK,GAEGlL,KAAKuL,EAAGkW,EAAMO,UAAU,IAAIvb,EAAYuE,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,KAAMF,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,GAAI,KAE3G,MACA,KAAK,GAAI,KAAK,GACdlL,KAAKuL,EAAEP,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAG,IAAIF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGF,EAAGE,GAAI,OAInGQ,MAAO,CAAC,CAACtB,GAAG,EAAEC,GAAG,EAAEE,GAAG,CAAC,EAAE,GAAGC,GAAG,EAAEkN,GAAG,CAAC,EAAE,IAAI,CAAC5L,EAAE,CAAC,IAAI,CAACxB,GAAG,EAAEiL,GAAG,EAAEC,GAAGtO,GAAK,CAAC4E,EAAE,CAAC,EAAE,KAAK,CAACrB,GAAG,EAAEiN,GAAG,CAAC,EAAE,IAAIvC,GAAG,CAAC,EAAE,KAAK,CAACvJ,EAAE,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIgL,GAAG,GAAGC,GAAGtO,GAAKJ,EAAEK,EAAI,CAAC,EAAE,KAAK,CAACyE,EAAE,CAAC,EAAE,KAAK,CAACuJ,GAAG,CAAC,EAAE,IAAIK,GAAG,CAAC,EAAE,KAAK,CAAC5J,EAAE,CAAC,EAAE,KAAK,CAACA,EAAExE,EAAIgO,GAAG,IAAI,CAAClL,GAAG,CAAC,EAAE,KAAK,CAAC4B,EAAE,CAAC,EAAE,KAAKhF,EAAEK,EAAI,CAAC,EAAE,KAAK,CAAC4E,GAAG,CAAC,EAAE,KAAK,CAACH,EAAExE,EAAIgO,GAAG,IAAI,CAAClL,GAAG,CAAC,EAAE,KAAK,CAACmL,GAAG,CAAC,EAAE,IAAIC,GAAGjO,GAAKP,EAAEQ,EAAI,CAAC,EAAE,IAAI,CAACwC,GAAG,CAAC,EAAE,MAAM,CAAC8B,EAAE,CAAC,EAAE,KAAK,CAACO,GAAG,CAAC,EAAE,KAAK,CAACkJ,GAAG,CAAC,EAAE,IAAIC,GAAGjO,GAAK,CAACuE,EAAE,CAAC,EAAE,KAAK9E,EAAES,EAAI,CAAC,EAAE,KAAK,CAACqE,EAAE,CAAC,EAAE,KAAK,CAACC,GAAG,CAAC,EAAE,KAAK,CAAC5B,GAAG,CAAC,EAAE,IAAIiL,GAAG,CAAC,EAAE,KAAK,CAACO,GAAG,CAAC,EAAE,KAAK3O,EAAES,EAAI,CAAC,EAAE,KAAK,CAAC0C,GAAG,CAAC,EAAE,IAAIiL,GAAG,CAAC,EAAE,KAAKpO,EAAEQ,EAAI,CAAC,EAAE,IAAI,CAACwC,GAAG,CAAC,EAAE,MAAM,CAACC,GAAG,CAAC,EAAE,KAAKjD,EAAEU,EAAI,CAAC,EAAE,KAAK,CAACoE,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,IAAIzB,GAAG,GAAGuL,GAAG,GAAGE,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAG6B,GAAG,GAAG5B,GAAG,CAAC,EAAE,IAAIzB,GAAG,GAAG2B,GAAGxO,EAAI2V,GAAG1V,EAAI2V,GAAG1V,GAAKb,EAAEU,EAAI,CAAC,EAAE,KAAK,CAACoE,EAAE,CAAC,EAAE,KAAK,CAACC,GAAG,CAAC,EAAE,KAAK/E,EAAEQ,EAAI,CAAC,EAAE,KAAK,CAAC2C,GAAG,CAAC,EAAE,KAAK,CAAC2B,EAAE,CAAC,EAAE,IAAIzB,GAAG,GAAGwL,GAAG,CAAC,EAAE,IAAIC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAG6B,GAAG,GAAG5B,GAAG,CAAC,EAAE,IAAIzB,GAAG,GAAG2B,GAAGxO,EAAI2V,GAAG1V,EAAI2V,GAAG1V,GAAKb,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACyN,GAAG,CAAC,EAAE,KAAKvO,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACkC,GAAGjC,EAAIkE,GAAG,CAAC,EAAE,IAAIC,GAAGlE,EAAIkO,GAAGjO,GAAKjB,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACoE,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAAC3B,GAAG,CAAC,EAAE,KAAK,CAACF,GAAG,CAAC,EAAE,KAAKjD,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEK,EAAI,CAAC,EAAE,KAAKL,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACyN,GAAG,CAAC,EAAE,KAAKvO,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACkC,GAAGjC,EAAIkE,GAAG,CAAC,EAAE,IAAIC,GAAGlE,EAAIkO,GAAGjO,GAAKjB,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACuE,GAAG,CAAC,EAAE,KAAKrF,EAAEc,EAAI,CAAC,EAAE,KAAK,CAAC+B,EAAE3B,EAAI6B,EAAE,GAAG+B,EAAE3D,EAAI4D,GAAG3D,EAAI6D,GAAG,CAAC,EAAE,KAAK,CAACpC,EAAE3B,EAAI6B,EAAE,GAAG+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAACyB,EAAE3B,EAAI6B,EAAE,GAAG+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAACoV,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACnI,GAAG,CAAC,EAAE,KAAKvO,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEQ,EAAI,CAAC,EAAE,KAAKR,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACuE,GAAG,CAAC,EAAE,KAAK,CAACkJ,GAAG,CAAC,EAAE,KAAK,CAACnJ,GAAG,CAAC,EAAE,KAAK,CAACnC,GAAG,CAAC,EAAE,KAAKjD,EAAEqB,EAAI,CAAC,EAAE,GAAG,CAAC2B,GAAG,CAAC,EAAE,MAAMhD,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAAC0D,GAAG,CAAC,EAAE,KAAK,CAACF,EAAE,GAAGjC,EAAEtB,EAAIuB,EAAEtB,EAAIuB,EAAEtB,EAAI2D,EAAE1D,EAAI8M,GAAG,CAAC,EAAE,KAAK,CAACjJ,GAAG,GAAGJ,GAAG,CAAC,EAAE,KAAKhC,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,MAAM,CAACoL,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAM,CAAC1J,EAAE,CAAC,EAAE,KAAKzB,GAAG,IAAIwN,GAAG,IAAI5B,GAAG,CAAC,EAAE,KAAKzB,GAAG,IAAI2B,GAAGzN,EAAI0N,GAAG,IAAIgH,GAAG,IAAIC,GAAG,IAAIC,GAAG1V,EAAI2V,GAAG1V,GAAK,CAAC0N,GAAG,CAAC,EAAE,MAAMvO,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACuE,GAAG,CAAC,EAAE,MAAM,CAACH,GAAG,CAAC,EAAE,KAAK,CAACrC,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,EAAI6D,GAAG,CAAC,EAAE,MAAMjF,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACwB,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAKpB,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAE2B,EAAI,CAAC,EAAE,IAAI3B,EAAE2B,EAAI,CAAC,EAAE,IAAI3B,EAAE2B,EAAI,CAAC,EAAE,IAAI3B,EAAE2B,EAAI,CAAC,EAAE,IAAI,CAACkB,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAAC8D,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAMlF,EAAE2B,EAAI,CAAC,EAAE,IAAI,CAACuD,GAAG,CAAC,EAAE,OAAOlF,EAAE2B,EAAI,CAAC,EAAE,IAAI,CAACuD,GAAG,CAAC,EAAE,OAAO,CAACD,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAM,CAACH,EAAE,CAAC,EAAE,KAAKzB,GAAG,IAAIwN,GAAG,IAAI5B,GAAG,CAAC,EAAE,KAAKzB,GAAG,IAAI2B,GAAGzN,EAAI0U,GAAG,IAAIC,GAAG,IAAIC,GAAG1V,EAAI2V,GAAG1V,GAAK,CAACmC,GAAGjC,EAAIkE,GAAG,CAAC,EAAE,KAAKC,GAAGlE,EAAIkO,GAAG,CAAC,EAAE,MAAMlP,EAAE4B,EAAI,CAAC,EAAE,KAAK5B,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAAC2M,GAAG,CAAC,EAAE,MAAMvO,EAAE4B,EAAI,CAAC,EAAE,KAAK5B,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAACsD,GAAG,CAAC,EAAE,MAAM,CAACJ,EAAE,CAAC,EAAE,MAAM9E,EAAEc,EAAI,CAAC,EAAE,KAAK,CAAC+B,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAACgE,GAAG,CAAC,EAAE,MAAM,CAACnC,GAAG,CAAC,EAAE,MAAM,CAACsL,GAAG,CAAC,EAAE,MAAM,CAAClJ,GAAG,CAAC,EAAE,MAAMrF,EAAE2B,EAAI,CAAC,EAAE,KAAK3B,EAAE2B,EAAI,CAAC,EAAE,KAAK3B,EAAE2B,EAAI,CAAC,EAAE,KAAK3B,EAAE2B,EAAI,CAAC,EAAE,KAAK,CAAC8U,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAM,CAACzT,GAAGjC,EAAIkE,GAAG,CAAC,EAAE,KAAKC,GAAGlE,EAAIkO,GAAG,CAAC,EAAE,MAAMlP,EAAE4B,EAAI,CAAC,EAAE,KAAK5B,EAAE4B,EAAI,CAAC,EAAE,KAAK5B,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAAC2M,GAAG,CAAC,EAAE,MAAMvO,EAAE4B,EAAI,CAAC,EAAE,KAAK5B,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACuE,GAAG,CAAC,EAAE,MAAMrF,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAACiB,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAACmN,GAAG,CAAC,EAAE,MAAM,CAACtL,GAAG,CAAC,EAAE,MAAM,CAACoC,GAAG,CAAC,EAAE,MAAMrF,EAAEqB,EAAI,CAAC,EAAE,IAAIrB,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACqO,GAAG,CAAC,EAAE,MAAM,CAAC9J,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAMrF,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACuE,GAAG,CAAC,EAAE,MAAMrF,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAAC2M,GAAG,CAAC,EAAE,MAAM,CAAC1J,EAAE,IAAIjC,EAAEtB,EAAIuB,EAAEtB,EAAIuB,EAAEtB,EAAI2D,EAAE1D,EAAI8M,GAAG,CAAC,EAAE,MAAMvO,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAACsD,GAAG,CAAC,EAAE,KAAK,CAACrC,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAAC0D,EAAE,CAAC,EAAE,MAAM,CAACjC,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAACyB,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAK,CAACmN,GAAG,CAAC,EAAE,MAAMvO,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAACiB,EAAE3B,EAAI6B,EAAE,IAAI+B,EAAE3D,EAAI4D,GAAG3D,GAAKpB,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAACqB,GAAG,CAAC,EAAE,MAAM,CAACsL,GAAG,CAAC,EAAE,MAAM,CAAClJ,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAMrF,EAAE4B,EAAI,CAAC,EAAE,KAAK,CAAC2M,GAAG,CAAC,EAAE,MAAMvO,EAAEqB,EAAI,CAAC,EAAE,IAAIrB,EAAEc,EAAI,CAAC,EAAE,KAAK,CAACyN,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,MAAMvO,EAAE4B,EAAI,CAAC,EAAE,KAAK5B,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAEc,EAAI,CAAC,EAAE,MACtgGyE,eAAgB,CAACV,EAAE,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAI+V,GAAG,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,KACrD5V,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAI5I,EAAQ,IAAI5B,MAAMsK,GAEtB,MADA1I,EAAM2I,KAAOA,EACP3I,EAJN7D,KAAKqJ,MAAMkD,IAOnBG,MAAO,SAAeC,GAClB,IAAIC,EAAO5M,KAAM6M,EAAQ,CAAC,GAAiBC,EAAS,CAAC,MAAOC,EAAS,GAAIrB,EAAQ1L,KAAK0L,MAAOd,EAAS,GAAIE,EAAW,EAAGD,EAAS,EAAGmC,EAAa,EAAGC,EAAS,EAAGC,EAAM,EAClKC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GACpCC,EAAQC,OAAOC,OAAOzN,KAAKuN,OAC3BG,EAAc,CAAEpE,GAAI,IACxB,IAAK,IAAIvC,KAAK/G,KAAKsJ,GACXkE,OAAOG,UAAUC,eAAeP,KAAKrN,KAAKsJ,GAAIvC,KAC9C2G,EAAYpE,GAAGvC,GAAK/G,KAAKsJ,GAAGvC,IAGpCwG,EAAMM,SAASlB,EAAOe,EAAYpE,IAClCoE,EAAYpE,GAAGiE,MAAQA,EACvBG,EAAYpE,GAAGF,OAASpJ,KACG,oBAAhBuN,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAOhK,KAAKgL,GACZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OACH,oBAA9BN,EAAYpE,GAAGgD,WACtBtM,KAAKsM,WAAaoB,EAAYpE,GAAGgD,WAEjCtM,KAAKsM,WAAakB,OAAOY,eAAepO,MAAMsM,WAiBlD,IATI,IAQA+B,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EARvEC,EAAM,WACN,IAAIC,EAKJ,MAHqB,kBADrBA,EAAQxB,EAAMuB,OAAS5B,KAEnB6B,EAAQnC,EAAKrD,SAASwF,IAAUA,GAE7BA,GAEkCC,EAAQ,KAC5C,CAUG,GATZT,EAAQ1B,EAAMA,EAAMxK,OAAS,GACzBrC,KAAKqM,eAAekC,GACpBC,EAASxO,KAAKqM,eAAekC,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAEbN,EAAS9C,EAAM6C,IAAU7C,EAAM6C,GAAOF,IAER,qBAAXG,IAA2BA,EAAOnM,SAAWmM,EAAO,GAAI,CACvE,IAAIa,EAAS,GAEb,IAAKX,KADLG,EAAW,GACDnD,EAAM6C,GACRvO,KAAKwJ,WAAWkF,IAAMA,EAAIzB,GAC1B4B,EAAS9L,KAAK,IAAO/C,KAAKwJ,WAAWkF,GAAK,KAI9CW,EADA9B,EAAM+B,aACG,wBAA0BxE,EAAW,GAAK,MAAQyC,EAAM+B,eAAiB,eAAiBT,EAASU,KAAK,MAAQ,WAAcvP,KAAKwJ,WAAW6E,IAAWA,GAAU,IAEnK,wBAA0BvD,EAAW,GAAK,iBAAmBuD,GAAUnB,EAAM,eAAiB,KAAQlN,KAAKwJ,WAAW6E,IAAWA,GAAU,KAExJrO,KAAKsM,WAAW+C,EAAQ,CACpBG,KAAMjC,EAAMkC,MACZV,MAAO/O,KAAKwJ,WAAW6E,IAAWA,EAClCnN,KAAMqM,EAAMzC,SACZ4E,IAAK3B,EACLc,SAAUA,IAGtB,GAAIL,EAAO,aAAchJ,OAASgJ,EAAOnM,OAAS,EAC9C,MAAM,IAAIJ,MAAM,oDAAsDsM,EAAQ,YAAcF,GAEhG,OAAQG,EAAO,IACf,KAAK,EACD3B,EAAM9J,KAAKsL,GACXvB,EAAO/J,KAAKwK,EAAM3C,QAClBmC,EAAOhK,KAAKwK,EAAMO,QAClBjB,EAAM9J,KAAKyL,EAAO,IAClBH,EAAS,KACJC,GASDD,EAASC,EACTA,EAAiB,OATjBzD,EAAS0C,EAAM1C,OACfD,EAAS2C,EAAM3C,OACfE,EAAWyC,EAAMzC,SACjBiD,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAMR,MACJ,KAAK,EAwBD,GAvBA2B,EAAM3O,KAAK0K,aAAa8D,EAAO,IAAI,GACnCQ,EAAMzD,EAAIuB,EAAOA,EAAOzK,OAASsM,GACjCK,EAAM/D,GAAK,CACPO,WAAYuB,EAAOA,EAAO1K,QAAUsM,GAAO,IAAInD,WAC/CmE,UAAW5C,EAAOA,EAAO1K,OAAS,GAAGsN,UACrClE,aAAcsB,EAAOA,EAAO1K,QAAUsM,GAAO,IAAIlD,aACjDmE,YAAa7C,EAAOA,EAAO1K,OAAS,GAAGuN,aAEvC5B,IACAgB,EAAM/D,GAAG4E,MAAQ,CACb9C,EAAOA,EAAO1K,QAAUsM,GAAO,IAAIkB,MAAM,GACzC9C,EAAOA,EAAO1K,OAAS,GAAGwN,MAAM,KAYvB,qBATjBpB,EAAIzO,KAAK2K,cAAcmF,MAAMd,EAAO,CAChCpE,EACAC,EACAC,EACA4C,EAAYpE,GACZkF,EAAO,GACP1B,EACAC,GACFgD,OAAO5C,KAEL,OAAOsB,EAEPE,IACA9B,EAAQA,EAAMO,MAAM,GAAI,EAAIuB,EAAM,GAClC7B,EAASA,EAAOM,MAAM,GAAI,EAAIuB,GAC9B5B,EAASA,EAAOK,MAAM,GAAI,EAAIuB,IAElC9B,EAAM9J,KAAK/C,KAAK0K,aAAa8D,EAAO,IAAI,IACxC1B,EAAO/J,KAAKiM,EAAMzD,GAClBwB,EAAOhK,KAAKiM,EAAM/D,IAClB2D,EAAWlD,EAAMmB,EAAMA,EAAMxK,OAAS,IAAIwK,EAAMA,EAAMxK,OAAS,IAC/DwK,EAAM9J,KAAK6L,GACX,MACJ,KAAK,EACD,OAAO,GAGf,OAAO,IAGAvI,EAAc2J,EAAQ,IAAtB3J,WACAI,EAAeuJ,EAAQ,IAAvBvJ,YACA0b,EAAsBnS,EAAQ,KAA9BmS,mBACHjgB,EAAQ,GACRsf,EAAW,GACXC,EAAQ,IAAIU,EACZR,EAAU,GAEdpU,EACS,CAEbL,IAAI,EAEJZ,WAAW,SAAoBC,EAAKC,GAC5B,IAAIxM,KAAKsJ,GAAGF,OAGR,MAAM,IAAInH,MAAMsK,GAFhBvM,KAAKsJ,GAAGF,OAAOkD,WAAWC,EAAKC,IAO3CqB,SAAS,SAAUlB,EAAOrD,GAiBlB,OAhBAtJ,KAAKsJ,GAAKA,GAAMtJ,KAAKsJ,IAAM,GAC3BtJ,KAAKiQ,OAAStD,EACd3M,KAAKkQ,MAAQlQ,KAAKmQ,WAAanQ,KAAKoQ,MAAO,EAC3CpQ,KAAK8K,SAAW9K,KAAK6K,OAAS,EAC9B7K,KAAK4K,OAAS5K,KAAKqQ,QAAUrQ,KAAKyP,MAAQ,GAC1CzP,KAAKsQ,eAAiB,CAAC,WACvBtQ,KAAK8N,OAAS,CACVtC,WAAY,EACZC,aAAc,EACdkE,UAAW,EACXC,YAAa,GAEb5P,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC,EAAE,IAE3B7P,KAAKuQ,OAAS,EACPvQ,MAIf2M,MAAM,WACE,IAAI6D,EAAKxQ,KAAKiQ,OAAO,GAkBrB,OAjBAjQ,KAAK4K,QAAU4F,EACfxQ,KAAK6K,SACL7K,KAAKuQ,SACLvQ,KAAKyP,OAASe,EACdxQ,KAAKqQ,SAAWG,EACJA,EAAGf,MAAM,oBAEjBzP,KAAK8K,WACL9K,KAAK8N,OAAO6B,aAEZ3P,KAAK8N,OAAO8B,cAEZ5P,KAAKiO,QAAQD,QACbhO,KAAK8N,OAAO+B,MAAM,KAGtB7P,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAM,GACzBoD,GAIfC,MAAM,SAAUD,GACR,IAAI7B,EAAM6B,EAAGnO,OACTqO,EAAQF,EAAGG,MAAM,iBAErB3Q,KAAKiQ,OAASO,EAAKxQ,KAAKiQ,OACxBjQ,KAAK4K,OAAS5K,KAAK4K,OAAOgG,OAAO,EAAG5Q,KAAK4K,OAAOvI,OAASsM,GAEzD3O,KAAKuQ,QAAU5B,EACf,IAAIkC,EAAW7Q,KAAKyP,MAAMkB,MAAM,iBAChC3Q,KAAKyP,MAAQzP,KAAKyP,MAAMmB,OAAO,EAAG5Q,KAAKyP,MAAMpN,OAAS,GACtDrC,KAAKqQ,QAAUrQ,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAAS,GAExDqO,EAAMrO,OAAS,IACfrC,KAAK8K,UAAY4F,EAAMrO,OAAS,GAEpC,IAAIoM,EAAIzO,KAAK8N,OAAO+B,MAgBpB,OAdA7P,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAac,GACRA,EAAMrO,SAAWwO,EAASxO,OAASrC,KAAK8N,OAAOrC,aAAe,GAC5DoF,EAASA,EAASxO,OAASqO,EAAMrO,QAAQA,OAASqO,EAAM,GAAGrO,OAChErC,KAAK8N,OAAOrC,aAAekD,GAG7B3O,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAACpB,EAAE,GAAIA,EAAE,GAAKzO,KAAK6K,OAAS8D,IAEpD3O,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACnBrC,MAIf8Q,KAAK,WAEG,OADA9Q,KAAKkQ,OAAQ,EACNlQ,MAIf+Q,OAAO,WACC,OAAI/Q,KAAKiO,QAAQ+C,iBACbhR,KAAKmQ,YAAa,EASfnQ,MAPIA,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,mIAAqI9K,KAAKsP,eAAgB,CAC9NE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAQ3BmG,KAAK,SAAU9C,GACPnO,KAAKyQ,MAAMzQ,KAAKyP,MAAMrC,MAAMe,KAIpC+C,UAAU,WACF,IAAIC,EAAOnR,KAAKqQ,QAAQO,OAAO,EAAG5Q,KAAKqQ,QAAQhO,OAASrC,KAAKyP,MAAMpN,QACnE,OAAQ8O,EAAK9O,OAAS,GAAK,MAAM,IAAM8O,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOtR,KAAKyP,MAIhB,OAHI6B,EAAKjP,OAAS,KACdiP,GAAQtR,KAAKiQ,OAAOW,OAAO,EAAG,GAAGU,EAAKjP,UAElCiP,EAAKV,OAAO,EAAE,KAAOU,EAAKjP,OAAS,GAAK,MAAQ,KAAK+O,QAAQ,MAAO,KAIpF9B,aAAa,WACL,IAAIiC,EAAMvR,KAAKkR,YACXM,EAAI,IAAIhM,MAAM+L,EAAIlP,OAAS,GAAGkN,KAAK,KACvC,OAAOgC,EAAMvR,KAAKqR,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAAShC,EAAOiC,GACnB,IAAI3C,EACA2B,EACAiB,EAwDJ,GAtDI3R,KAAKiO,QAAQ+C,kBAEbW,EAAS,CACL7G,SAAU9K,KAAK8K,SACfgD,OAAQ,CACJtC,WAAYxL,KAAK8N,OAAOtC,WACxBmE,UAAW3P,KAAK2P,UAChBlE,aAAczL,KAAK8N,OAAOrC,aAC1BmE,YAAa5P,KAAK8N,OAAO8B,aAE7BhF,OAAQ5K,KAAK4K,OACb6E,MAAOzP,KAAKyP,MACZmC,QAAS5R,KAAK4R,QACdvB,QAASrQ,KAAKqQ,QACdxF,OAAQ7K,KAAK6K,OACb0F,OAAQvQ,KAAKuQ,OACbL,MAAOlQ,KAAKkQ,MACZD,OAAQjQ,KAAKiQ,OACb3G,GAAItJ,KAAKsJ,GACTgH,eAAgBtQ,KAAKsQ,eAAelD,MAAM,GAC1CgD,KAAMpQ,KAAKoQ,MAEXpQ,KAAKiO,QAAQD,SACb2D,EAAO7D,OAAO+B,MAAQ7P,KAAK8N,OAAO+B,MAAMzC,MAAM,MAItDsD,EAAQjB,EAAM,GAAGA,MAAM,sBAEnBzP,KAAK8K,UAAY4F,EAAMrO,QAE3BrC,KAAK8N,OAAS,CACVtC,WAAYxL,KAAK8N,OAAO6B,UACxBA,UAAW3P,KAAK8K,SAAW,EAC3BW,aAAczL,KAAK8N,OAAO8B,YAC1BA,YAAac,EACAA,EAAMA,EAAMrO,OAAS,GAAGA,OAASqO,EAAMA,EAAMrO,OAAS,GAAGoN,MAAM,UAAU,GAAGpN,OAC5ErC,KAAK8N,OAAO8B,YAAcH,EAAM,GAAGpN,QAEpDrC,KAAK4K,QAAU6E,EAAM,GACrBzP,KAAKyP,OAASA,EAAM,GACpBzP,KAAK4R,QAAUnC,EACfzP,KAAK6K,OAAS7K,KAAK4K,OAAOvI,OACtBrC,KAAKiO,QAAQD,SACbhO,KAAK8N,OAAO+B,MAAQ,CAAC7P,KAAKuQ,OAAQvQ,KAAKuQ,QAAUvQ,KAAK6K,SAE1D7K,KAAKkQ,OAAQ,EACblQ,KAAKmQ,YAAa,EAClBnQ,KAAKiQ,OAASjQ,KAAKiQ,OAAO7C,MAAMqC,EAAM,GAAGpN,QACzCrC,KAAKqQ,SAAWZ,EAAM,GACtBV,EAAQ/O,KAAK2K,cAAc0C,KAAKrN,KAAMA,KAAKsJ,GAAItJ,KAAM0R,EAAc1R,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAChHrC,KAAKoQ,MAAQpQ,KAAKiQ,SAClBjQ,KAAKoQ,MAAO,GAEZrB,EACA,OAAOA,EACJ,GAAI/O,KAAKmQ,WAAY,CAExB,IAAK,IAAIpJ,KAAK4K,EACV3R,KAAK+G,GAAK4K,EAAO5K,GAErB,OAAO,EAEX,OAAO,GAIfuK,KAAK,WACG,GAAItR,KAAKoQ,KACL,OAAOpQ,KAAKkN,IAMhB,IAAI6B,EACAU,EACAoC,EACA3L,EAPClG,KAAKiQ,SACNjQ,KAAKoQ,MAAO,GAOXpQ,KAAKkQ,QACNlQ,KAAK4K,OAAS,GACd5K,KAAKyP,MAAQ,IAGjB,IADA,IAAIqC,EAAQ9R,KAAK+R,gBACR7R,EAAI,EAAGA,EAAI4R,EAAMzP,OAAQnC,IAE9B,IADA2R,EAAY7R,KAAKiQ,OAAOR,MAAMzP,KAAK8R,MAAMA,EAAM5R,SAC5BuP,GAASoC,EAAU,GAAGxP,OAASoN,EAAM,GAAGpN,QAAS,CAGhE,GAFAoN,EAAQoC,EACR3L,EAAQhG,EACJF,KAAKiO,QAAQ+C,gBAAiB,CAE9B,IAAc,KADdjC,EAAQ/O,KAAKyR,WAAWI,EAAWC,EAAM5R,KAErC,OAAO6O,EACJ,GAAI/O,KAAKmQ,WAAY,CACxBV,GAAQ,EACR,SAGA,OAAO,EAER,IAAKzP,KAAKiO,QAAQ+D,KACrB,MAIZ,OAAIvC,GAEc,KADdV,EAAQ/O,KAAKyR,WAAWhC,EAAOqC,EAAM5L,MAE1B6I,EAKK,KAAhB/O,KAAKiQ,OACEjQ,KAAKkN,IAELlN,KAAKsM,WAAW,0BAA4BtM,KAAK8K,SAAW,GAAK,yBAA2B9K,KAAKsP,eAAgB,CACpHE,KAAM,GACNT,MAAO,KACP7N,KAAMlB,KAAK8K,YAM3BgE,IAAI,WACI,IAAIL,EAAIzO,KAAKsR,OACb,OAAI7C,GAGOzO,KAAK8O,OAKxBmD,MAAM,SAAgBC,GACdlS,KAAKsQ,eAAevN,KAAKmP,IAIjCC,SAAS,WAED,OADQnS,KAAKsQ,eAAejO,OAAS,EAC7B,EACGrC,KAAKsQ,eAAe8B,MAEpBpS,KAAKsQ,eAAe,IAKvCyB,cAAc,WACN,OAAI/R,KAAKsQ,eAAejO,QAAUrC,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,GACxErC,KAAKqS,WAAWrS,KAAKsQ,eAAetQ,KAAKsQ,eAAejO,OAAS,IAAIyP,MAErE9R,KAAKqS,WAAL,QAA2BP,OAK9CQ,SAAS,SAAmBnE,GAEpB,OADAA,EAAInO,KAAKsQ,eAAejO,OAAS,EAAIkQ,KAAKC,IAAIrE,GAAK,KAC1C,EACEnO,KAAKsQ,eAAenC,GAEpB,WAKnBsE,UAAU,SAAoBP,GACtBlS,KAAKiS,MAAMC,IAInBQ,eAAe,WACP,OAAO1S,KAAKsQ,eAAejO,QAEnC4L,QAAS,CAAC,oBAAmB,GAC7BtD,cAAe,SAAmBrB,EAAGqJ,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,MAAO,IAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,MAAO,SAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAI/H,OAAS,kBAAoB+H,EAAI7E,OAAOtC,WAAa,oBAAsBmH,EAAI7E,OAAOrC,gBAK5KqG,MAAO,CAAC,qBAAqB,YAAY,4CAA4C,UAAU,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,iBAAiB,eAAe,iBAAiB,cAAc,aAAa,eAAe,iBAAiB,eAAe,uBAAuB,uBAAuB,mJAAiF,+CAA+C,gBAAgB,UAAU,WAC1mBO,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAKtJ,SAASW,IACPhT,KAAKsJ,GAAK,GAGZ,OALAF,EAAOmE,MAAQA,EAIfyF,EAAOrF,UAAYvE,EAAOA,EAAO4J,OAASA,EACnC,IAAIA,EArsBO,GA0sBlBC,EAAQ7J,OAASmY,EACjBtO,EAAQD,OAASuO,EAAWvO,OAC5BC,EAAQvG,MAAQ,WAAc,OAAO6U,EAAW7U,MAAMoD,MAAMyR,EAAYjU,YACxE2F,EAAQC,KAAO,SAAuB/F,GAC7BA,EAAK,KACN2F,QAAQC,IAAI,UAAU5F,EAAK,GAAG,SAC9BgG,EAAQC,KAAK,IAEjB,IAAIC,EAASrD,EAAQ,IAAMsD,aAAatD,EAAQ,IAAQuD,UAAUpG,EAAK,IAAK,QAC5E,OAAO8F,EAAQ7J,OAAOsD,MAAM2G,IAEKrD,WAAiBwD,GACpDP,EAAQC,KAAKC,EAAQM,KAAKrG,MAAM,M,2PC5xBrBgV,EAST,WAAYte,EAAaC,EAAeM,EAAcT,EAAYye,EAAcjhB,GAAc,yBAR9F0C,WAQ6F,OAP7FC,aAO6F,OAN7FM,YAM6F,OAL7FT,UAK6F,OAJ7Fye,YAI6F,OAH7FjhB,WAG6F,EACzFpB,KAAK8D,MAAMA,EACX9D,KAAK+D,QAAQA,EACb/D,KAAKqE,OAAOA,EACZrE,KAAK4D,KAAKA,EACV5D,KAAKqiB,OAAOA,EACZriB,KAAKoB,MAAMA,GAIfkhB,EAAK,OACLC,EAAM,MACNC,EAAM,MACNC,EAAS,GAEN,SAASC,EAAmB1O,EAAa2O,EAA8BC,GAK1E,IAAK,IAAM1e,KAFXue,GADAA,GADAA,EAASzO,EAAK9R,MAAMkP,QAAQkR,EAAI,eAChBlR,QAAQmR,EAAI,YACZnR,QAAQoR,EAAI,WAC5BG,EAAU5f,KAAK,IAAIqf,EAAapO,EAAKlQ,MAAMkQ,EAAKjQ,QAAQiQ,EAAK1Q,cAAc,UAAUsf,EAAQH,IAC3EzO,EAAK5Q,cAGnBqf,GADAA,GADAA,EAASzO,EAAK5Q,cAAcc,GAAK9C,MAAMgQ,QAAQkR,EAAI,eACnClR,QAAQmR,EAAI,YACZnR,QAAQoR,EAAI,WAC5BG,EAAU5f,KAAK,IAAIqf,EAAapO,EAAK5Q,cAAcc,GAAKJ,MAAMkQ,EAAK5Q,cAAcc,GAAKH,QAAQiQ,EAAK5Q,cAAcc,GAAKZ,cAAc,WAAW0Q,EAAK1Q,cAAcmf,IAEtK,IAAK,IAAMve,KAAO8P,EAAKxQ,cACnBmf,EAAYD,EAAmB1O,EAAKxQ,cAAcU,GAAKye,EAAU3O,EAAK1Q,eAE1E,OAAOqf,EAGJ,SAASE,EAAgCpe,EAA0BvC,GAEtE,IAAK,IAAMgC,KADXhC,GAAS,oCACSuC,EACdvC,GAAS,IAAMgC,EAGnB,IAAK,IAAMA,KADXhC,GAAS,WACSuC,EACdvC,GAAS,IAAMuC,EAAMP,GAAKJ,MAG9B,IAAK,IAAMI,KADXhC,GAAS,aACSuC,EACdvC,GAAS,IAAMuC,EAAMP,GAAKH,QAG9B,IAAK,IAAMG,KADXhC,GAAS,YACSuC,EACdvC,GAAS,IAAMuC,EAAMP,GAAKG,OAG9B,IAAK,IAAMH,KADXhC,GAAS,UACSuC,EACdvC,GAAS,IAAMuC,EAAMP,GAAKN,KAG9B,IAAK,IAAMM,KADXhC,GAAS,YACSuC,EACdvC,GAAS,IAAMuC,EAAMP,GAAKme,OAG9B,IAAK,IAAMne,KADXhC,GAAS,WACSuC,EACdvC,GAAS,IAAMuC,EAAMP,GAAK9C,MAG9B,OADAc,GAAS,O,WCtEN,SAAS4gB,EAAYzX,GACxB0X,EAAqB1X,EAAI,IAItB,SAAS0X,EAAqB/O,GACjClU,IAAWqC,aAAa,uCACxBrC,IAAWiB,eAEXiT,EAAKlO,MAAQhG,IAAWiB,aACxBjB,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAWqC,aAAa,IACxBrC,IAAWqC,aAAa,gCAAkC6R,EAAK1Q,cAAcnD,WAAa,oBAC1F,IAAK,IAAID,EAAI,EAAGA,EAAI8T,EAAK1Q,cAAcjB,OAAQnC,IAC3CJ,IAAWqC,aAAa,kBAAoB6R,EAAK1Q,cAAchB,WAAWpC,GAAlD,mBAAiF8T,EAAK1Q,cAAcpD,GAAGC,YAC/HL,IAAWqC,aAAa,cACpBjC,EAAI,IAAM8T,EAAK1Q,cAAcjB,SAC7BvC,IAAWqC,aAAa,yCACxBrC,IAAWqC,aAAa,eAGhC,GAAwB,IAApB6R,EAAK9R,MAAMG,OAAY,CACvBvC,IAAWiB,eACXiT,EAAKjO,OAASjG,IAAWiB,aACzBjB,IAAWqC,aAAa,MACxBrC,IAAWqC,aAAa,uCACxBrC,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAWqC,aAAa,IACxBrC,IAAWqC,aAAa,oBAAsB6R,EAAK1Q,cAAcnD,WAAa,oBAC9E,IAAK,IAAID,EAAI,EAAGA,EAAI8T,EAAK9R,MAAMG,OAAQnC,IACnCJ,IAAWqC,aAAa,kBAAoB6R,EAAK9R,MAAMI,WAAWpC,GAA1C,mBAAyE8T,EAAK9R,MAAMhC,GAAGC,YAC/GL,IAAWqC,aAAa,cACpBjC,EAAI,IAAM8T,EAAK9R,MAAMG,SACrBvC,IAAWqC,aAAa,yCACxBrC,IAAWqC,aAAa,eA7BY,oBAiC1B6R,EAAK5Q,eAjCqB,IAiChD,2BAA0C,CAAC,IAAhC4f,EAA+B,QACtCljB,IAAWqC,aAAa,IACxBrC,IAAWiB,eACXiiB,EAAQld,MAAQhG,IAAWiB,aAC3BjB,IAAWqC,aAAa,uCACxBrC,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAWqC,aAAa,IACxBrC,IAAWqC,aAAa,aAAe6gB,EAAQ1f,cAAcnD,WAAa,iBAAmB6T,EAAK1Q,cAAcnD,WAAa,oBAC7H,IAAK,IAAID,EAAI,EAAGA,EAAI8iB,EAAQ1f,cAAcjB,OAAQnC,IAC9CJ,IAAWqC,aAAa,kBAAoB6gB,EAAQ1f,cAAchB,WAAWpC,GAArD,mBAAqF8iB,EAAQ1f,cAAcpD,GAAGC,YACtIL,IAAWqC,aAAa,cACpBjC,EAAI,IAAM8iB,EAAQ1f,cAAcjB,SAChCvC,IAAWqC,aAAa,yCACxBrC,IAAWqC,aAAa,eAGhC6gB,EAAQ5hB,MAAM4hB,EAAQ5hB,MAAMmC,WAAW,IAAK,IAC5Cyf,EAAQ5hB,MAAM4hB,EAAQ5hB,MAAMmC,WAAW,IAAI,IAC3CzD,IAAWiB,eACXiiB,EAAQjd,OAASjG,IAAWiB,aAC5BjB,IAAWqC,aAAa,uCACxBrC,IAAWqC,aAAa,SAAWrC,IAAWiB,aAAaZ,WAAnC,UACxBL,IAAWqC,aAAa,IACxBrC,IAAWqC,aAAa,cAAgB6gB,EAAQ1f,cAAgB,oBAChE,IAAK,IAAIpD,EAAI,EAAGA,EAAI8iB,EAAQ5hB,MAAMiB,OAAQnC,IACtCJ,IAAWqC,aAAa,kBAAoB6gB,EAAQ5hB,MAAMkB,WAAWpC,GAA7C,mBAA4E8iB,EAAQ5hB,MAAMlB,GAAGC,YACrHL,IAAWqC,aAAa,cACpBjC,EAAI,IAAM8iB,EAAQ5hB,MAAMiB,SACxBvC,IAAWqC,aAAa,yCACxBrC,IAAWqC,aAAa,gBA9DY,8BAmEhD,IAAK,IAAM+B,KADXpE,IAAWqC,aAAa,MACN6R,EAAKxQ,cAEnBuf,EAAqB/O,EAAKxQ,cAAcU,I,2BClE1CkF,EAAS4G,EAAQ,KACjBiT,EAAejT,EAAQ,KACvBkT,EAAalT,EAAQ,KACrBmT,EAAcnT,EAAQ,KACtBoT,EAAWpT,EAAQ,KAMJqT,GAFRrT,EAAQ,K,4MAIjBzB,MAAQ,CACJ+U,cAAe,GACfnN,MAAO,GACPoN,IAAK,GACLC,OAAQ,GACRC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,cAAe,GACfC,iBAAkB,GAClBC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,I,EAGvBtX,MAAQ,WACJ,IAAIrB,EAUA4Y,EATA7Y,EAAe,GAOflJ,EAAQ,GACRoC,EAAS,EAIb,IACI,IAAMqU,EAASvP,EAAOsD,MAAM,EAAK6B,MAAMgV,KAOvC,GALAT,EADAzX,EAAMsN,EAAOtN,KAEFsN,EAAOrN,SAClBF,EAAeuN,EAAOvN,aACtB6Y,EAAgB,IAAIre,UAAQ,SAAU,GAAI,EAAG,EAAG,GAAIyF,GAExB,IAAxBD,EAAa/I,OAAc,CAC3B,IAAI6hB,EAAYjB,EAAavW,MAAM,EAAK6B,MAAMgV,KAC9C,EAAKY,SAAS,CACVT,WAAY,cAAgB9e,oCAA0Bsf,EAAU9P,kBAAkB,GAAI8P,EAAU9P,kBAAkB,GApB5G,IAoB+H,IACrIqP,UAAW,cAAgB/e,gCAAsBwf,EAAU7P,WAtBtD,IAsBgF,IACrFwP,iBAAkB,cAAgBhB,EAAgCH,EAAmBuB,EAxB7E,GAwB2G,UApBvG,IAoBuI,WAGvJ,EAAKE,SAAS,CACVR,YAAa,cAAgB3f,oCAA0BoH,EAzBhD,IAyB8E,MAG/F,MAAOvH,GACLiP,QAAQC,IAAIlP,GACZugB,MAAM,kCAGV,IACI,IAAMC,EAASnB,EAAWxW,MAAM,EAAK6B,MAAM4H,OACvCmO,EAAcD,EAAOlO,MACzBrD,QAAQC,IAAIuR,GACZ,IAAIC,EAAeF,EAAOjZ,aAE1B,GAA4B,IAAxBmZ,EAAaliB,OAAc,CAC3B,IAAK,IAAM6B,KAAOogB,EACdpiB,EAAQoiB,EAAYpgB,GAAK+T,YAAY/V,GACjCoC,EAASggB,EAAYjiB,SACrBH,GAAS,OAASgC,EAAI/D,WAAa,iBACnC+B,GAAS,OAASoiB,EAAYpgB,GAAKhD,KAAKf,WAAa,IAAMmkB,EAAYpgB,GAAK/C,OAAOhB,WAAa,SAAW+D,EAAI/D,WAAa,MAC5H+B,GAAS,OAASgC,EAAI/D,WAAa,SAAWmkB,EAAYhgB,GAAQpD,KAAKf,WAAa,IAAMmkB,EAAYhgB,GAAQnD,OAAOhB,WAAa,MAClImE,KAGR,EAAK6f,SAAS,CACVL,YAAa,cAAgB5hB,EAAQ,WAGzC4Q,QAAQC,IAAIwR,EAAaliB,QACzB,EAAK8hB,SAAS,CACVP,cAAe,cAAgB5f,oCAA0BugB,EArD9C,IAqDgF,MAInGzR,QAAQC,IAAI7Q,GAEZ,EAAKiiB,SAAS,CACVL,YAAa,cAAgB5hB,EAAQ,MAIzC,IAjCA,EAiCIsiB,EAA8B,GAC9BhiB,EAAS,GAlCb,cAmCoB8hB,GAnCpB,IAmCA,2BAAiC,CAAC,IAAvBG,EAAsB,QAC7B,IACIjiB,GAAUiiB,EAAMlM,QAAQlN,EAAI,IAAI5J,MAClC,MAAOoC,GACL2gB,EAAkBzhB,KAAKc,KAvC/B,8BA2CA,EAAKsgB,SAAS,CACVb,cAAe,sCAAwC9gB,EAAS,0CAA4C1C,IAAW4kB,iBAG7H,MAAO7gB,GACLiP,QAAQC,IAAIlP,K,EAKpB8gB,SAAW,WAEP,GAAuB,KAAnB,EAAKpW,MAAMgV,IAAf,CAIA,IAAM5K,EAASvP,EAAOsD,MAAM,EAAK6B,MAAMgV,KAEnCe,EADWpB,EAAWxW,MAAM,EAAK6B,MAAM4H,OAClBA,MACrB9K,EAAMsN,EAAOtN,IACbuZ,EAAY,GAChB9R,QAAQC,IAAIuR,GACZxB,EAAYzX,GAZC,oBAaOiZ,GAbP,IAab,2BAAiC,CAAC,IAAvBG,EAAsB,QAC7B,IACIG,GAAaH,EAAMlM,QAAQlN,EAAI,IAAI5J,MACrC,MAAOoC,GACLiP,QAAQC,IAAIlP,KAjBP,8BAoBb,EAAKsgB,SAAS,CACVb,cAAe,sCAAwCsB,EAAY,0CAA4C9kB,IAAW4kB,mB,EAKlI9E,cAAgB,WAEZ,IAFkB,EAGdvU,EADWjC,EAAOsD,MAAM,EAAK6B,MAAMgV,KACtBlY,IAEXwZ,EAAY1B,EAAYzW,MAAM,EAAK6B,MAAMiV,QAC3ChhB,EAAS,GAETsiB,EAAa,IAAI/f,IAAc,KAAM,UARvB,cAUG8f,GAVH,IAUlB,2BAAgC,CAAC,IAAtBrB,EAAqB,QAC5B,IACIhhB,GAAUghB,EAAO5D,cAAckF,EAAYzZ,EAAI,IAAI5J,MAAQ,KAC7D,MAAOoC,GACLiP,QAAQC,IAAIlP,KAdF,8BAiBlB,EAAKsgB,SAAS,CACVb,cAAe9gB,K,EAMvBuiB,UAAY,WAER,IAAMC,EAAa5B,EAAS1W,MAAM,EAAK6B,MAAM+U,eAC7C,EAAKa,SAAS,CACVb,cAAe,oCAAsC0B,EAAWlD,aAEpE,EAAKqC,SAAS,CACVH,kBAAmB,cAAgBgB,EAAWjD,aAAe,O,EAIrEkD,iBAAmB,SAAAC,GAEf,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,GAClBC,EAAOG,OAAS,SAACC,GACb,IACI,EAAKpB,SAAS,CACVZ,IAAKgC,EAAEC,OAAO7M,SAEpB,MAAO4M,GACLzS,QAAQC,IAAIwS,M,EAIxBE,sBAAwB,SAAAP,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,GAClBC,EAAOG,OAAS,SAACC,GAEb,IACI,EAAKpB,SAAS,CACVhO,MAAOoP,EAAEC,OAAO7M,SAEtB,MAAO4M,GACLzS,QAAQC,IAAIwS,M,EAIxBG,gBAAkB,SAAAH,GAES,YAAnBA,EAAEC,OAAO/jB,MACT,EAAK0iB,SAAS,CACVJ,gBAAiB,KAEK,YAAnBwB,EAAEC,OAAO/jB,MAChB,EAAK0iB,SAAS,CACVJ,gBAAiB,EAAKxV,MAAMkV,YAEN,2BAAnB8B,EAAEC,OAAO/jB,MAChB,EAAK0iB,SAAS,CACVJ,gBAAiB,EAAKxV,MAAMmV,aAEN,2BAAnB6B,EAAEC,OAAO/jB,MAChB,EAAK0iB,SAAS,CACVJ,gBAAiB,EAAKxV,MAAMoV,cAEN,0BAAnB4B,EAAEC,OAAO/jB,MAChB,EAAK0iB,SAAS,CACVJ,gBAAiB,EAAKxV,MAAMsV,mBAEN,cAAnB0B,EAAEC,OAAO/jB,MAChB,EAAK0iB,SAAS,CACVJ,gBAAiB,EAAKxV,MAAMuV,cAEN,6BAAnByB,EAAEC,OAAO/jB,MAChB,EAAK0iB,SAAS,CACVJ,gBAAiB,EAAKxV,MAAMqV,gBAEN,8BAAnB2B,EAAEC,OAAO/jB,OAChB,EAAK0iB,SAAS,CACVJ,gBAAiB,EAAKxV,MAAMyV,qB,4CAKxC,WAAU,IAAD,OACL,OACI,qCACI,eAAC2B,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,aAAnB,kBACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiB9gB,GAAG,mBAApB,SACI,eAAC+gB,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,eAACC,EAAA,EAAD,CAAaC,MAAM,YAAYlhB,GAAG,0BAAlC,UACI,cAAC,aAAD,CAAYmhB,QAAS,EAAGC,SAAUxmB,KAAKylB,sBAAuBgB,QAAS,SAAAC,GAAM,OAAI5T,QAAQC,IAAI2T,IAA7F,SACI,cAACL,EAAA,EAAYM,KAAb,2BAEJ,cAAC,aAAD,CAAYJ,QAAS,EAAGC,SAAUxmB,KAAKilB,iBAAkBwB,QAAS,SAAAC,GAAM,OAAI5T,QAAQC,IAAI2T,IAAxF,SACI,cAACL,EAAA,EAAYM,KAAb,4BAGR,eAACN,EAAA,EAAD,CAAaC,MAAM,QAAQlhB,GAAG,0BAA9B,UACI,cAACihB,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACvB,EAAKzC,SAAS,CACVhO,MAAO,MAFf,mBAKA,cAACkQ,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACvB,EAAKzC,SAAS,CACVZ,IAAK,MAFb,oBAMJ,eAAC8C,EAAA,EAAD,CAAaC,MAAM,OAAOlhB,GAAG,0BAA7B,UACI,cAACihB,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACJ5W,EAAQ,GAC3B6W,CAAa,EAAKtY,MAAM4H,MAAO,cAFnC,mBAIA,cAACkQ,EAAA,EAAYM,KAAb,CAAkBC,QAAS,WACJ5W,EAAQ,GAC3B6W,CAAa,EAAKtY,MAAMgV,IAAK,YAFjC,4BAShB,sBAAK6C,UAAU,YAAf,UAEI,cAACU,EAAA,EAAKC,QAAN,CACIplB,KAAK,OACLqlB,YAAY,aACZvlB,MAAOzB,KAAKuO,MAAM4H,MAClBqQ,SAAU,SAACjB,GACP,EAAKpB,SAAS,CACVhO,MAAOoP,EAAEC,OAAO/jB,WAI5B,uBAEA,eAACwlB,EAAA,EAAD,WAEI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUV,QAAS5mB,KAAK0M,MAAxC,gCAEJ,cAACwa,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUV,QAAS5mB,KAAK2kB,SAAxC,iCAEJ,cAACuC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUV,QAAS5mB,KAAK4f,cAAxC,8BAEJ,cAACsH,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUV,QAAS5mB,KAAK+kB,UAAxC,2BAKR,uBACA,eAACkC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAGjB,cAACF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACN,EAAA,EAAKC,QAAN,CAAcQ,GAAG,WAAWP,YAAY,WAAWQ,KAAM,GAAI/lB,MAAOzB,KAAKuO,MAAMgV,IAAKiD,SAAU,SAACjB,GAC3F,EAAKpB,SAAS,CACVZ,IAAKgC,EAAEC,OAAO/jB,aAI1B,cAACylB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACN,EAAA,EAAKC,QAAN,CAAcQ,GAAG,WAAWP,YAAY,cAAcQ,KAAM,GAAI/lB,MAAOzB,KAAKuO,MAAMiV,OAAQgD,SAAU,SAACjB,GACjG,EAAKpB,SAAS,CACVX,OAAQ+B,EAAEC,OAAO/jB,mBAQrC,qBAAK2kB,UAAU,YAAf,SACI,cAACU,EAAA,EAAKW,MAAN,UACI,eAACX,EAAA,EAAKC,QAAN,CAAcQ,GAAG,SAASG,KAAK,OAAOC,KAAK,KAAKnB,SAAUxmB,KAAK0lB,gBAA/D,UACI,6CACA,2DACA,4DACA,6CACA,4DACA,+CACA,8DACA,sEAOuB,KAA/B1lB,KAAKuO,MAAMwV,gBACP,qBAAKqC,UAAU,6BAAf,SACI,cAACwB,EAAA,EAAD,CAAUxB,UAAU,oCAAoCyB,IAAK7nB,KAAKuO,MAAMwV,gBAAiB9V,QAAS,CAAE6Z,OAAQ,IAAKC,MAAO,KAAMC,MAAM,OAExI,wBAGR,qBAAK5B,UAAU,YAAf,SACI,cAACU,EAAA,EAAKC,QAAN,CAAcQ,GAAG,WAAWC,KAAM,GAAI/lB,MAAOzB,KAAKuO,MAAM+U,cAAekD,SAAU,SAACjB,GAC9E,EAAKpB,SAAS,CACVb,cAAeiC,EAAEC,OAAO/jB,oB,GAtWlBwmB,c,iBCLnBC,MAVf,WACE,OACE,8BACE,cAAC,IAAD,CAAQC,SAAS,wBAAjB,SACE,cAAC,IAAD,CAAOnH,KAAK,IAAIoH,OAAK,EAACC,UAAWhF,SCI1BiF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K,2FCbIa,E,+BCJSrH,EAKT,WAAYsH,EAAaC,EAAgB9iB,GAAc,yBAJvD6iB,WAIsD,OAHtDC,cAGsD,OAFtDrE,gBAEsD,EAClDhlB,KAAKopB,MAAQA,EACbppB,KAAKqpB,SAAWA,EAChBrpB,KAAKglB,WAAaze,GDHtB+iB,EAAO,EACPC,EAAO,EAEEpH,EAAb,WAKI,aAAc,yBAJdP,kBAIa,OAHb4H,eAGa,OAFbC,mBAEa,OADbC,cACa,EACT1pB,KAAK4hB,aAAe,GACpB5hB,KAAKwpB,UAAY,GACjBxpB,KAAKypB,cAAgB,GACrBzpB,KAAK0pB,SAAW,GATxB,6CAYI,SAAUC,GAEN,OADAR,EAAUQ,EACPA,aAAkBtjB,aACZrG,KAAK4pB,gBAAmB5pB,KAAK6pB,oBAAuB7pB,KAAK8pB,WAAc9pB,KAAK+pB,WAAc/pB,KAAKgqB,UAGzFhqB,KAAK0pB,SAFLC,EAAOrlB,OAAS,MAAQqlB,EAAOrjB,UAAY,IAAMqjB,EAAOpjB,MAAQ,IAAMojB,EAAOnjB,UAAY,MAI3E,kBAAXmjB,GACd3pB,KAAKiqB,SACEjqB,KAAK0pB,UACLC,aAAkBljB,cACpBzG,KAAKkqB,SAGClqB,KAAK0pB,SAFL,MAAMP,EAAQziB,UAAUyiB,EAAQxiB,YAAYwiB,EAAQviB,UAAU,UAFtE,IAvBf,mBAgCI,WACIuiB,EAAU,GACVnpB,KAAK0pB,SAAW,GAChB1pB,KAAKypB,cAAgB,KAnC7B,oBAsCI,WAGI,OAFAzpB,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAIqH,EAAQ,8BACnDnpB,KAAK0pB,SAAW,IACT,IAzCf,oBA4CI,WACI,OAAO,IA7Cf,oBAgDI,WACI,IAGI,GAFAJ,EAAO5nB,OAAOynB,EAAQziB,WACtB6iB,EAAO7nB,OAAOynB,EAAQviB,YAClBlF,OAAOyoB,MAAMb,KAAU5nB,OAAOyoB,MAAMZ,GAAO,CAC3C,GAA2B,OAAxBJ,EAAQxiB,YACP,OAAI2iB,IAASC,IACTvpB,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAI,MAAMqH,EAAQziB,UAAUyiB,EAAQxiB,YAAYwiB,EAAQviB,UAAU,IAAI,8BAC7G5G,KAAK0pB,SAAW,IACT,GAGR,GAA4B,OAAxBP,EAAQxiB,YACf,OAAI2iB,IAASC,IACTvpB,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAI,MAAMqH,EAAQziB,UAAUyiB,EAAQxiB,YAAYwiB,EAAQviB,UAAU,IAAI,8BAC7G5G,KAAK0pB,SAAW,IACT,GAGR,GAA4B,OAAxBP,EAAQxiB,YACf,OAAI2iB,GAAQC,IACRvpB,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAI,MAAMqH,EAAQziB,UAAUyiB,EAAQxiB,YAAYwiB,EAAQviB,UAAU,IAAI,8BAC7G5G,KAAK0pB,SAAW,IACT,GAGR,GAA4B,OAAxBP,EAAQxiB,YACf,OAAI2iB,GAAQC,IACRvpB,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAI,MAAMqH,EAAQziB,UAAUyiB,EAAQxiB,YAAYwiB,EAAQviB,UAAU,IAAI,8BAC7G5G,KAAK0pB,SAAW,IACT,GAGR,GAA4B,MAAxBP,EAAQxiB,YACf,OAAI2iB,EAAOC,IACPvpB,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAI,MAAMqH,EAAQziB,UAAUyiB,EAAQxiB,YAAYwiB,EAAQviB,UAAU,IAAI,8BAC7G5G,KAAK0pB,SAAW,IACT,GAGR,GAA4B,MAAxBP,EAAQxiB,YACf,OAAI2iB,EAAOC,IACPvpB,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAI,MAAMqH,EAAQziB,UAAUyiB,EAAQxiB,YAAYwiB,EAAQviB,UAAU,IAAI,8BAC7G5G,KAAK0pB,SAAW,IACT,GAMnB,OAAO,EACT,MAAO7lB,GACL,OAAO,KApGnB,oBAwGI,WACI,OAAO,IAzGf,oBA4GI,WACI,OAAO,IA7Gf,0BAgHI,WACI,OAAIslB,EAAQ7kB,SAAW6kB,EAAQ7iB,UACD,MAAtB6iB,EAAQ3iB,WAAuC,MAAlB2iB,EAAQ5iB,OACrCvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAIqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU,8BACxHxG,KAAK0pB,SAAW,IACT,GACkB,MAAlBP,EAAQ5iB,OAAuC,MAAtB4iB,EAAQ3iB,WACxCxG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAIqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU,8BACxHxG,KAAK0pB,SAAW,IACT,GACkB,MAAlBP,EAAQ5iB,OAAuC,MAAtB4iB,EAAQ3iB,WACxCxG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAIqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU,8BACxHxG,KAAK0pB,SAAW,IACT,GACkB,MAAlBP,EAAQ5iB,OAAuC,MAAtB4iB,EAAQ3iB,YACxCxG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAIqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU,8BACxHxG,KAAK0pB,SAAW,IACT,GAGJP,EAAQ7kB,SAAW6kB,EAAQ3iB,YACR,MAAtB2iB,EAAQ7iB,WAAuC,MAAlB6iB,EAAQ5iB,OACrCvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAIqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU,8BACxHxG,KAAK0pB,SAAW,IACT,GACkB,MAAlBP,EAAQ5iB,OAAuC,MAAtB4iB,EAAQ7iB,YACxCtG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,IAAIqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU,8BACxHxG,KAAK0pB,SAAW,IACT,MA5IvB,8BAmJI,WACI,GAA0B,MAAtBP,EAAQ3iB,WAAqB2iB,EAAQ7iB,YAAc6iB,EAAQ7kB,OAC3D,MAAsB,MAAlB6kB,EAAQ5iB,OACRvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY,MACpKtG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ7iB,UAAY,OACtD,GACkB,MAAlB6iB,EAAQ5iB,QACfvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY,MACpKtG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ7iB,UAAY,OACtD,GAGR,GAA0B,MAAtB6iB,EAAQ7iB,WAAqB6iB,EAAQ3iB,YAAc2iB,EAAQ7kB,OAClE,MAAsB,MAAlB6kB,EAAQ5iB,QACRvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ3iB,UAAY,MACpKxG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ3iB,UAAY,OACtD,GAGR,GAA0B,MAAtB2iB,EAAQ3iB,WAAqB2iB,EAAQ7iB,YAAc6iB,EAAQ7kB,OAAQ,CAC1E,GAAsB,MAAlB6kB,EAAQ5iB,MAGR,OAFAvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY,MACpKtG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ7iB,UAAY,OACtD,EACJ,GAAsB,MAAlB6iB,EAAQ5iB,MAGf,OAFAvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY,MACpKtG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ7iB,UAAY,OACtD,OAER,GAA0B,MAAtB6iB,EAAQ7iB,WAAqB6iB,EAAQ3iB,YAAc2iB,EAAQ7kB,OAClE,MAAsB,MAAlB6kB,EAAQ5iB,QACRvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ3iB,UAAY,MACpKxG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ3iB,UAAY,OACtD,GAIf,OAAO,IAxLf,qBA2LI,WACI,MAA0B,MAAtB2iB,EAAQ3iB,WAAuC,MAAlB2iB,EAAQ5iB,OACrCvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY,IAAM6iB,EAAQ7iB,UAAY,MAC9LtG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ7iB,UAAY,IAAM6iB,EAAQ5iB,MAAQ,IAAM4iB,EAAQ7iB,UAAY,OACtG,GACsB,MAAtB6iB,EAAQ7iB,WAAuC,MAAlB6iB,EAAQ5iB,QAC5CvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,IAAM6kB,EAAQ3iB,UAAY,IAAM2iB,EAAQ3iB,UAAY,MAC9LxG,KAAK0pB,SAAWP,EAAQ7kB,OAAS,MAAQ6kB,EAAQ3iB,UAAY,IAAM2iB,EAAQ5iB,MAAQ,IAAM4iB,EAAQ3iB,UAAY,OACtG,KAnMnB,qBAwMI,WACI,OAA0B,MAAtB2iB,EAAQ3iB,WAAuC,MAAlB2iB,EAAQ5iB,OAIR,MAAtB4iB,EAAQ7iB,WAAuC,MAAlB6iB,EAAQ5iB,SAH5CvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,QAC1ItE,KAAK0pB,SAAWP,EAAQ7kB,OAAS,WAC1B,KA5MnB,qBAqNI,WACI,MAA0B,MAAtB6kB,EAAQ7iB,WAAuC,MAAlB6iB,EAAQ5iB,QACrCvG,KAAKypB,cAAc1mB,KAAK,IAAI+e,EAAW,KAAKqH,EAAQ7kB,OAAS,IAAM6kB,EAAQ7iB,UAAY6iB,EAAQ5iB,MAAQ4iB,EAAQ3iB,UAAU2iB,EAAQ7kB,OAAS,QAC1ItE,KAAK0pB,SAAWP,EAAQ7kB,OAAS,WAC1B,KAzNnB,6BA8NI,WAII,IAAK,IAAMJ,KAHX4O,QAAQC,IAAI/S,KAAKypB,eACjBzpB,KAAK4hB,aAAe,GACpB5hB,KAAK4hB,cAAgB,oCACH5hB,KAAKypB,cACnBzpB,KAAK4hB,cAAgB,IAAM1d,EAG/B,IAAK,IAAMA,KADXlE,KAAK4hB,cAAgB,WACH5hB,KAAKypB,cACnBzpB,KAAK4hB,cAAgB,IAAM5hB,KAAKypB,cAAcvlB,GAAKklB,MAGvD,IAAK,IAAMllB,KADXlE,KAAK4hB,cAAgB,cACH5hB,KAAKypB,cACnBzpB,KAAK4hB,cAAgB,IAAM5hB,KAAKypB,cAAcvlB,GAAKmlB,SAGvD,IAAK,IAAMnlB,KADXlE,KAAK4hB,cAAgB,gBACH5hB,KAAKypB,cACnBzpB,KAAK4hB,cAAgB,IAAM5hB,KAAKypB,cAAcvlB,GAAK8gB,WAEvDhlB,KAAK4hB,cAAgB,WAjP7B,O","file":"static/js/main.8bd578b9.chunk.js","sourcesContent":["export class traduccion {\r\n    static t: number = -1;\r\n    static stackCounter: number = -1;\r\n    static etiquetaCounter: number = 0;\r\n    static tranlate: string = \"\";\r\n    //static printString: boolean = false;\r\n    //static metodostring:string = \"\";\r\n    static metodoConsultaXPATH:string = \"\";\r\n    static compararCadenas3d:string=\"\";\r\n    static etiquetaTexto:string=\"\";\r\n    static etiquetaApertura:string=\"\";\r\n    static etiquetaCierre:string=\"\";\r\n    static etiquetaUnitaria:string=\"\";\r\n    static etiquetaAtributo:string=\"\";\r\n    static verificarAtributo:string=\"\";\r\n    static printString:string=\"\";\r\n\r\n    public static getTranslate(): string {\r\n        var content: string = \"\";\r\n        content += \"//Header\\t--------------\\n\";\r\n        content += \"#include <stdio.h>\\n\\n\";\r\n        content += \"double heap[30101999];\\n\";\r\n        content += \"double stack[30101999];\\n\\n\";\r\n        content += \"double S;\\n\";\r\n        content += \"double H;\\n\\n\";\r\n        if (this.t > 0) {\r\n            content += \"double \";\r\n            for (let i = 0; i < this.t+1; i++) {\r\n                content += \"t\" + i.toString();\r\n                if (i < this.t) {\r\n                    content += \", \";\r\n                }\r\n            }\r\n            content += \";\\n\\n\";\r\n        }\r\n        //content += this.metodostring;\r\n        content += this.printString;\r\n        content += this.metodoConsultaXPATH;\r\n        content += this.compararCadenas3d;\r\n        content += this.etiquetaTexto;\r\n        content += this.etiquetaApertura;\r\n        content += this.etiquetaCierre;\r\n        content += this.etiquetaUnitaria;\r\n        content += this.verificarAtributo;\r\n        content += this.etiquetaAtributo;\r\n        content += \"//Metodo Main\\t--------------\\n\";\r\n        content += \"void main(){\\n\";\r\n        content += \"S = 0; H = 0;\\n\\n\";\r\n        content += this.tranlate;\r\n        content += \"\\nL0:\\n\";\r\n        content += \"\\nreturn;\\n\";\r\n        content += \"}\";\r\n        return content;\r\n    }\r\n\r\n    public static setTranslate(content: string) {\r\n        this.tranlate += content + \"\\n\";\r\n    }\r\n\r\n    /*public static setPrintString(content:string) {\r\n        this.metodostring += content + \"\\n\";\r\n    }*/\r\n\r\n    public static setConsultaXPATH(content:string) {\r\n        this.metodoConsultaXPATH += content + \"\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO comparar cadenas****************************\r\n    public static metodoCompararCadenas() {\r\n        this.compararCadenas3d += \"//Metodo Comparar cadenas\\t--------------\\n\\n\";\r\n        this.compararCadenas3d += \"void compararCadenas() {\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.compararCadenas3d += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.t++;\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-2)+\"!=t\"+(traduccion.t-1)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-5)+\" = t\"+(traduccion.t-5)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        this.compararCadenas3d += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"if(t\"+(traduccion.t-1)+\"==t\"+(traduccion.t-2)+\") goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-2)+\":\\n\";\r\n        this.compararCadenas3d += \"stack[(int)t\"+(traduccion.t-6)+\"] = 1;\\n\";\r\n        this.compararCadenas3d += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.compararCadenas3d += \"return;\\n\";\r\n        this.compararCadenas3d += \"}\\n\\n\";\r\n        //traduccion.t++;\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir nodo Texto**********\r\n    public static crearEtiquetaTexto() {\r\n        this.etiquetaTexto += \"//Metodo etiqueta texto\\t--------------\\n\\n\";\r\n        this.etiquetaTexto += \"void crearEtiquetaTexto() {\\n\";\r\n        //Obtiene posiciones\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir NODOTEXTO\r\n        this.etiquetaTexto += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaTexto += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimirt </\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)60);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)47);\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-5)+\" = S + 1;\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4) + \" = stack[(int)t\"+(traduccion.t-5)+\"];\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-1) + \" = heap[(int)t\"+(traduccion.t-4)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaTexto += \"if(t\"+(traduccion.t-1)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t-1)+\");\\n\";\r\n        this.etiquetaTexto += \"t\"+(traduccion.t-4)+\" = t\"+(traduccion.t-4)+\" + 1;\\n\";\r\n        this.etiquetaTexto += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imrprimir >\r\n        this.etiquetaTexto += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)62);\\n\";\r\n        this.etiquetaTexto += \"printf(\\\"%c\\\", (char)10);\\n\";\r\n        this.etiquetaTexto += \"return;\\n\";\r\n        this.etiquetaTexto += \"}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta apertura*********************\r\n    public static crearEtiquetaApertura() {\r\n        this.etiquetaApertura += \"//Metodo Etiqueta apertura\\t--------------\\n\\n\";\r\n        this.etiquetaApertura += \"void crearEtiquetaApertura() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaApertura += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaApertura += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaApertura += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaApertura += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaApertura += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaApertura += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaApertura += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    //CREACION DEL METODO imprimir etiqueta cierre*********************\r\n    public static crearEtiquetaCierre() {\r\n        this.etiquetaCierre += \"//Metodo Etiqueta Cierre\\t--------------\\n\\n\";\r\n        this.etiquetaCierre += \"void crearEtiquetaCierre() {\\n\"\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\"\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)60);\\t\\t// <\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\"; \r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaCierre += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        this.etiquetaCounter++;\r\n        this.etiquetaCierre += \"if(t\"+traduccion.t+\"==-1) goto L\"+this.etiquetaCounter+\";\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)t\"+(traduccion.t)+\");\\n\";\r\n        this.etiquetaCierre += \"t\"+(traduccion.t-1)+\" = t\" + (traduccion.t-1) + \" + 1;\\n\";\r\n        this.etiquetaCierre += \"goto L\"+(this.etiquetaCounter-1)+\";\\n\";\r\n        this.etiquetaCierre += \"L\"+this.etiquetaCounter+\":\\n\";\r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\";   \r\n        this.etiquetaCierre += \"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\";  \r\n        this.etiquetaCierre += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static crearAtributoEtiqueta() {\r\n        this.etiquetaAtributo += \"//Metodo Obtener Atributo\\t--------------\\n\";\r\n        this.etiquetaAtributo += \"void crearAtributoEtiqueta() {\\n\";\r\n        //Obetener posiciones----------\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo+= \"t\"+traduccion.t+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        //Imprimir espacio en blanco-----------\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)32);\\t\\t// \\' \\'\\n\";\r\n        //Obtener ID1\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        //this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\"= t\"+ (traduccion.t-3)+\" + 1;\\n\"\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-3)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-3)+\" = t\"+(traduccion.t-3)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir =\"\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)61);\\t\\t// =\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        //Obtener ID2\r\n        this.etiquetaAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.etiquetaAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-2)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.etiquetaAtributo += \"if(t\"+(traduccion.t)+\"==-1) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        this.etiquetaAtributo += \"t\"+(traduccion.t-2)+\" = t\"+(traduccion.t-2)+\" + 1;\\n\";\r\n        this.etiquetaAtributo += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        //Imprimir \" y fin\r\n        this.etiquetaAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.etiquetaAtributo += \"printf(\\\"%c\\\", (char)34);\\t\\t// \\\"\\n\";\r\n        this.etiquetaAtributo += \"return;\\n}\\n\\n\";\r\n    }\r\n\r\n    public static metodoVerificarAtributo() {\r\n        this.verificarAtributo += \"//Metodo verificar atributo\\t--------------\\n\\n\";\r\n        this.verificarAtributo += \"void verificarAtributo() {\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t+\" = S + 1;\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = stack[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.t++;\r\n        this.verificarAtributo += \"t\"+traduccion.t + \" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";        \r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"if(t\"+(traduccion.t)+\"==64) goto L\"+traduccion.etiquetaCounter+\";\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 0;\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        this.verificarAtributo += \"goto L\"+(traduccion.etiquetaCounter)+\";\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter-1)+\":\\n\";\r\n        this.verificarAtributo += \"stack[(int)t\"+(traduccion.t-2)+\"] = 1;\\n\";\r\n        this.verificarAtributo += \"L\"+(traduccion.etiquetaCounter)+\":\\n\";\r\n        this.verificarAtributo += \"return;\\n\";\r\n        this.verificarAtributo += \"}\\n\\n\";\r\n    }\r\n\r\n    public static crearPrintString() {\r\n        traduccion.printString += \"//Metodo printString\\t--------------\\n\\n\";\r\n        traduccion.printString += \"void printString() {\\n\";\r\n        traduccion.t++;\r\n        traduccion.printString += \"t\"+traduccion.t+\" = S+1;\\n\";\r\n        traduccion.t++;\r\n        traduccion.printString += \"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        traduccion.t++;\r\n        traduccion.printString += \"L\"+traduccion.etiquetaCounter+\":\\n\"; //L0\r\n        traduccion.printString += \"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\\n\";\r\n        traduccion.etiquetaCounter++;\r\n        traduccion.printString += \"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\\n\"; //L1\r\n        traduccion.printString += \"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\\n\";\r\n        traduccion.printString += \"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\\n\";\r\n        traduccion.printString += \"goto L\"+(traduccion.etiquetaCounter-1)+\";\\n\";\r\n        traduccion.printString += \"L\"+traduccion.etiquetaCounter+\":\\n\";\r\n        traduccion.printString += \"return;\\n\";\r\n        traduccion.printString += \"}\\n\\n\";\r\n    }\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements ExpressionXquery{\r\n    \r\n    constructor (\r\n    public line : Number, \r\n    public column : Number, \r\n    public valor : any, \r\n    public tipoPrimitivo? : tipoPrimitivo) {}\r\n    \r\n    \r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo) : Retorno {\r\n        \r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING };\r\n        }else if (this.valor === \"position\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.pos, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.pos, type: tipoPrimitivo.NUMBER}\r\n            }\r\n\r\n        }else if (this.valor === \"last\"){\r\n\r\n            if (simboloPadre !== undefined){\r\n                return {value: simboloPadre.last, type: tipoPrimitivo.NUMBER}\r\n            }else {\r\n                return {value: ent.last, type: tipoPrimitivo.NUMBER}\r\n            }\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    ATRI,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public valor: any,\r\n        public tipoPrimitivo?: tipoPrimitivo) { }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo numero\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(this.valor) + \";\");\r\n            //###############################################################################################################\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n        } else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo Cadena\\t--------------\\n\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n\r\n            for (let i = 0; i < String(this.valor).length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + String(this.valor).charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + String(this.valor)[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === String(this.valor).length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n            //###############################################################################################################\r\n\r\n\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING, SP: traduccion.stackCounter };\r\n        } else if (this.valor === \"position\") {\r\n\r\n            if (simboloPadre !== undefined) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo posicion\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(simboloPadre.pos) + \";\");\r\n                //###############################################################################################################\r\n                return { value: simboloPadre.pos, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            } else {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo posicion\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(ent.pos) + \";\");\r\n                //###############################################################################################################\r\n                return { value: ent.pos, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            }\r\n\r\n        } else if (this.valor === \"last\") {\r\n\r\n            if (simboloPadre !== undefined) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo last\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(simboloPadre.last) + \";\");\r\n                //###############################################################################################################\r\n                return { value: simboloPadre.last, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            } else {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//Ingresando primitivo last\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + Number(ent.last) + \";\");\r\n                //###############################################################################################################\r\n                return { value: ent.last, type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter }\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.valor.toString() + \"\\\"];\\n\";\r\n        return texto;\r\n    }\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\n\r\nexport class ManejadorXquery {\r\n\r\n    static unirSalida (salida : string[]) : string{\r\n\r\n        let salidaTexto : string = \"\"\r\n        for (const element of salida) {\r\n            salidaTexto += element\r\n        }\r\n        return salidaTexto;\r\n    }\r\n\r\n    static buildXquery (listNodes: Retorno[]) : string{\r\n\r\n        var content : string [] = []\r\n        for (const element of listNodes) {\r\n            \r\n            if (element.type === tipoPrimitivo.NODO){\r\n                ManejadorXquery.concatenar(content, this.construirNodos(element.value, \"\"));\r\n            }else {\r\n                content.push(element.value+ \"\\n\");\r\n            }\r\n        }\r\n        return this.unirSalida(content);\r\n    }\r\n\r\n    static construirNodos(entPadre: Entorno, tab : string): string [] {\r\n\r\n        var atributos = \"\";\r\n        var content : string[] = [];\r\n\r\n        for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n            atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n        }\r\n\r\n        //construyo Nodos\r\n        if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n            content.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n        }\r\n        else if(entPadre.listaEntornos.length > 0){\r\n\r\n            content.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                ManejadorXquery.concatenar(content, this.construirNodos(entActual, tab + \"   \"));              \r\n            }\r\n            content.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n        \r\n        } else{\r\n            content.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n        }\r\n        return content;\r\n    }\r\n\r\n    static concatenar (content : any[], resp: any[]) {\r\n\r\n        for (const element of resp) {\r\n            content.push(element);\r\n        }\r\n    }\r\n\r\n}","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\n\r\nexport class EntornoXQuery {\r\n\r\n    private variables: Map<string, Retorno>;\r\n    //public funciones: Map<string, InsFuncion>;\r\n\r\n    constructor (\r\n        public anterior: EntornoXQuery | null,\r\n        public nombreEntXquery: string){\r\n        this.variables = new Map();\r\n    }\r\n\r\n    public guaradarVar(id: string, valor: Retorno){\r\n        this.variables.set(id, valor);\r\n    }\r\n\r\n    public existeVar (id : string): boolean{\r\n        return this.variables.has(id);\r\n    }\r\n\r\n    public actualizarVar(id : string, nvoValor : Retorno){\r\n\r\n        for (let entry of Array.from(this.variables.entries())) {\r\n            let key = entry[0];\r\n            if (key === id) {\r\n                entry[1] = nvoValor;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getVar(id : string) : Retorno | null{\r\n\r\n        for (let entry of Array.from(this.variables.entries())) {\r\n            let key = entry[0];\r\n            if (key === id) {\r\n                return entry[1];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getAllVars() : String{\r\n\r\n        let salida : string = \"\"\r\n    \r\n        salida += \"Anbiente: \" + this.nombreEntXquery+ \"\\n\";\r\n\r\n        for (let entry of Array.from(this.variables.entries())) {\r\n            salida += \"identificador: \"+ entry[1] + \"valor: \"+ entry[0]+ \"\\n\";\r\n        }\r\n        return salida;\r\n\r\n    }\r\n\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last : number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n        this.asignarPosEnts();\r\n        this.asignarPosSimb();\r\n    }\r\n    \r\n    private asignarPosEnts(){\r\n        for (let index = 0; index < this.listaEntornos.length; index++) {\r\n            this.listaEntornos[index].last = this.listaEntornos.length\r\n            this.listaEntornos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    private asignarPosSimb(){\r\n        for (let index = 0; index < this.listaSimbolos.length; index++) {\r\n            this.listaSimbolos[index].last = this.listaSimbolos.length;\r\n            this.listaSimbolos[index].pos = index;\r\n        }\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n\r\n}","export class Asignacion{\r\n    indice:string;\r\n    operador1:string;\r\n    signo:string;\r\n    operador2:string;\r\n\r\n    constructor(indice:string,operador1:string,signo:string,operador2:string){\r\n        this.indice = indice;\r\n        this.operador1 = operador1;\r\n        this.signo = signo;\r\n        this.operador2 = operador2;\r\n    }\r\n\r\n}","export class Condicional{\r\n    operando1:string;\r\n    comparacion:string;\r\n    operando2:string;\r\n\r\n    constructor(operando1:string,comparacion:string,operando2:string){\r\n        this.operando1 = operando1;\r\n        this.comparacion = comparacion;\r\n        this.operando2 = operando2;\r\n    }\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\nthis.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n            if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n            this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],true);\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n            this.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],true);\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4],true);\r\n        \r\nbreak;\r\ncase 11:\r\n\r\n            if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n            this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 12:\r\n\r\n            this.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[],true);\r\n        \r\nbreak;\r\ncase 13:\r\n\r\n            listaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\n        \r\nbreak;\r\ncase 15: case 17:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column,true);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n    last: number;\r\n    SP_ID:number;\r\n    SP_VAL:number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n        this.last = -1;\r\n        this.SP_ID = -1;\r\n        this.SP_VAL = -1;\r\n    }\r\n\r\n\r\n\r\n\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReport = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\r\ndefaultActions: {24:[2,14],44:[2,13]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReport;\r\nexports.Parser = xmlReport.Parser;\r\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[5,6],$V3=[1,20],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,23],$Vf=[1,24],$Vg=[5,6,8,10,13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vh=[1,27],$Vi=[5,6,8,10,13,18,27,29,30,31,32,33,34,35,36,37,38,39,40,41],$Vj=[1,48],$Vk=[1,41],$Vl=[1,42],$Vm=[1,43],$Vn=[1,44],$Vo=[1,45],$Vp=[1,46],$Vq=[1,62],$Vr=[1,60],$Vs=[1,61],$Vt=[1,63],$Vu=[1,64],$Vv=[1,65],$Vw=[1,66],$Vx=[1,67],$Vy=[1,68],$Vz=[1,69],$VA=[1,70],$VB=[1,71],$VC=[1,72],$VD=[13,18,29,30,31,32,33,34,35,36,37,38,39,40,41],$VE=[18,29,30,31,34,35,36,37,38,39,40,41],$VF=[13,18,29,30,31,32,34,35,36,37,38,39,40,41],$VG=[18,29,34,35,40,41],$VH=[18,29,34,35,36,37,38,39,40,41];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"MULTIPATH\":4,\"EOF\":5,\"|\":6,\"PATH\":7,\"/\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"..\":15,\"text\":16,\"(\":17,\")\":18,\"node\":19,\"child\":20,\"::\":21,\"descendant\":22,\"PREDICADOS\":23,\"@\":24,\"attribute\":25,\"PREDI\":26,\"[\":27,\"EXP\":28,\"]\":29,\"+\":30,\"-\":31,\"div\":32,\"mod\":33,\"=\":34,\"!=\":35,\"<\":36,\"<=\":37,\">\":38,\">=\":39,\"and\":40,\"or\":41,\"VALOR\":42,\"cadena\":43,\"scadena\":44,\"number\":45,\"position\":46,\"last\":47,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"|\",8:\"/\",10:\"//\",12:\"id\",13:\"*\",14:\".\",15:\"..\",16:\"text\",17:\"(\",18:\")\",19:\"node\",20:\"child\",21:\"::\",22:\"descendant\",24:\"@\",25:\"attribute\",27:\"[\",29:\"]\",30:\"+\",31:\"-\",32:\"div\",33:\"mod\",34:\"=\",35:\"!=\",36:\"<\",37:\"<=\",38:\">\",39:\">=\",40:\"and\",41:\"or\",43:\"cadena\",44:\"scadena\",45:\"number\",46:\"position\",47:\"last\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,1],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,2],[11,4],[11,4],[11,4],[11,4],[11,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,4],[11,4],[11,1],[23,2],[23,1],[26,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[42,3],[42,1],[42,1],[42,1],[42,3],[42,3],[42,1],[42,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n                                                    var listaErroresTemp = listaErrores;\r\n                                                    listaErrores = [];\r\n                                                    return {xpath: $$[$0-1],listaErrores:listaErroresTemp}\r\n                                                    \r\nbreak;\r\ncase 2:\r\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 3: case 8: case 35:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 4:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 5:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 6:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 7:\r\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 9:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 10:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 20:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\r\nbreak;\r\ncase 24:\r\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\r\nbreak;\r\ncase 25:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 33:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\r\nbreak;\r\ncase 34:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 36: case 51:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 37:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 38:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 39:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 41:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 42:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 43:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 44:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 45:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 46:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 47:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 48:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 49:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 50:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 52: case 53:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 54:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 55: case 56:\r\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\r\nbreak;\r\ncase 57:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                 this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 58:\r\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                 this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:$V0,10:$V1},{1:[3]},{5:[1,6],6:[1,7]},o($V2,[2,3]),{2:$V3,9:8,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,9:21,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{1:[2,1]},{7:22,8:$V0,10:$V1},o($V2,[2,4],{8:$Ve,10:$Vf}),o($Vg,[2,8]),o($Vg,[2,9],{23:25,26:26,27:$Vh}),o($Vg,[2,10],{26:26,23:28,27:$Vh}),o($Vg,[2,11]),o($Vg,[2,12]),{17:[1,29]},{17:[1,30]},{21:[1,31]},{21:[1,32]},{12:[1,33],13:[1,34]},{21:[1,35]},o($Vg,[2,33]),o($V2,[2,5],{8:$Ve,10:$Vf}),o($V2,[2,2]),{2:$V3,11:36,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},{2:$V3,11:37,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,19],{26:38,27:$Vh}),o($Vi,[2,35]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:39,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($Vg,[2,20],{26:38,27:$Vh}),{18:[1,49]},{18:[1,50]},{12:[1,51],13:[1,52]},{12:[1,53],13:[1,54]},o($Vg,[2,25],{26:26,23:55,27:$Vh}),o($Vg,[2,26],{26:26,23:56,27:$Vh}),{12:[1,57],13:[1,58]},o($Vg,[2,6]),o($Vg,[2,7]),o($Vi,[2,34]),{13:$Vq,29:[1,59],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},o($VD,[2,50]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:73,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},o($VD,[2,52]),o($VD,[2,53]),o($VD,[2,54]),{17:[1,74]},{17:[1,75]},o($VD,[2,57],{8:$Ve,10:$Vf}),{2:$V3,9:76,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd},o($Vg,[2,13]),o($Vg,[2,14]),o($Vg,[2,15],{26:26,23:77,27:$Vh}),o($Vg,[2,16],{26:26,23:78,27:$Vh}),o($Vg,[2,17],{26:26,23:79,27:$Vh}),o($Vg,[2,18],{26:26,23:80,27:$Vh}),o($Vg,[2,29],{26:38,27:$Vh}),o($Vg,[2,30],{26:38,27:$Vh}),o($Vg,[2,27],{26:26,23:81,27:$Vh}),o($Vg,[2,28],{26:26,23:82,27:$Vh}),o($Vi,[2,36]),{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:83,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:84,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:85,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:86,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:87,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:88,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:89,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:90,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:91,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:92,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:93,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:94,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{2:$V3,9:47,10:$Vj,11:9,12:$V4,13:$V5,14:$V6,15:$V7,16:$V8,17:$Vk,19:$V9,20:$Va,22:$Vb,24:$Vc,25:$Vd,28:95,42:40,43:$Vl,44:$Vm,45:$Vn,46:$Vo,47:$Vp},{13:$Vq,18:[1,96],30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB,41:$VC},{18:[1,97]},{18:[1,98]},o($VD,[2,58],{8:$Ve,10:$Vf}),o($Vg,[2,21],{26:38,27:$Vh}),o($Vg,[2,22],{26:38,27:$Vh}),o($Vg,[2,23],{26:38,27:$Vh}),o($Vg,[2,24],{26:38,27:$Vh}),o($Vg,[2,31],{26:38,27:$Vh}),o($Vg,[2,32],{26:38,27:$Vh}),o($VE,[2,37],{13:$Vq,32:$Vt,33:$Vu}),o($VE,[2,38],{13:$Vq,32:$Vt,33:$Vu}),o($VF,[2,39],{33:$Vu}),o($VF,[2,40],{33:$Vu}),o($VD,[2,41]),o($VG,[2,42],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VG,[2,43],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o($VH,[2,44],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,45],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,46],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o($VH,[2,47],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu}),o([18,29,40,41],[2,48],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA}),o([18,29,41],[2,49],{13:$Vq,30:$Vr,31:$Vs,32:$Vt,33:$Vu,34:$Vv,35:$Vw,36:$Vx,37:$Vy,38:$Vz,39:$VA,40:$VB}),o($VD,[2,51]),o($VD,[2,55]),o($VD,[2,56])],\r\ndefaultActions: {6:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 43;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 44;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 8\r\nbreak;\r\ncase 18:return 15\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 24\r\nbreak;\r\ncase 21:return 27\r\nbreak;\r\ncase 22:return 29\r\nbreak;\r\ncase 23:return 17\r\nbreak;\r\ncase 24:return 18\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 6\r\nbreak;\r\ncase 27:return 30\r\nbreak;\r\ncase 28:return 31\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 32\r\nbreak;\r\ncase 31:return 34\r\nbreak;\r\ncase 32:return 35\r\nbreak;\r\ncase 33:return 37\r\nbreak;\r\ncase 34:return 39\r\nbreak;\r\ncase 35:return 36\r\nbreak;\r\ncase 36:return 38\r\nbreak;\r\ncase 37:return 41\r\nbreak;\r\ncase 38:return 40\r\nbreak;\r\ncase 39:return 33\r\nbreak;\r\ncase 40:return 21\r\nbreak;\r\ncase 41:return 20\r\nbreak;\r\ncase 42:return 25\r\nbreak;\r\ncase 43:return 22\r\nbreak;\r\ncase 44:return 16\r\nbreak;\r\ncase 45:return 47 \r\nbreak;\r\ncase 46:return 46\r\nbreak;\r\ncase 47:return 45\r\nbreak;\r\ncase 48:return 12\r\nbreak;\r\ncase 49:return 5\r\nbreak;\r\ncase 50:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:[\" \"]+)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparser;\r\nexports.Parser = XPATHparser.Parser;\r\nexports.parse = function () { return XPATHparser.parse.apply(XPATHparser, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    SP_id:number;\r\n    SP_tipoAcceso:number;\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[],\r\n    public tipoQuery ?: string ){\r\n        this.SP_id = -1;\r\n        this.SP_tipoAcceso = -1\r\n    } \r\n\r\n    public setipoQuery(tipo: string){\r\n        this.tipoQuery = tipo;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public hijoIzq: Expression,\r\n        public hijoDer: Expression,\r\n        public tipoOperacion: operacionAritmetica,\r\n        public sym: string) { }\r\n\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP || valorDer.type === tipoPrimitivo.RESP) {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorDer.type + \", tipo valor2 \" + valorDer.type + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n        } else if ((valorIzq.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.STRING) && this.tipoOperacion === operacionAritmetica.SUMA) {\r\n            return { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.STRING, SP: -1 };\r\n        } else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n\r\n            if (this.tipoOperacion === operacionAritmetica.SUMA) {\r\n\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//SUMA ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" + t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n\r\n                return { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n            } else if (this.tipoOperacion === operacionAritmetica.RESTA) {\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//RESTA ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" - t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n\r\n                return { value: (valorIzq.value - valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n            } else if (this.tipoOperacion === operacionAritmetica.MULT) {\r\n\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//MULTIPLICACION ARITMETICA\\t--------------\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" * t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                //###############################################################################################################\r\n\r\n                return { value: (valorIzq.value * valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };;\r\n            } else if (this.tipoOperacion === operacionAritmetica.DIV) {\r\n\r\n                if (Number(valorDer.value) >= 0) {\r\n\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//DIVISION ARITMETICA\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorIzq.SP + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + valorDer.SP + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" / t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n\r\n\r\n                    return { value: (valorIzq.value / valorDer.value), type: tipoPrimitivo.NUMBER, SP: traduccion.stackCounter };\r\n                } else {\r\n                    throw new Error(\"Error Semantico: El valor \" + valorDer + \", debe ser mayor o igual que cero,  Linea: \" + this.line + \"Column: \" + this.column);\r\n                }\r\n\r\n            } else if (this.tipoOperacion === operacionAritmetica.MOD) {\r\n                return { value: (valorIzq.value % valorDer.value), type: tipoPrimitivo.NUMBER, SP: -1 };\r\n            } else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorDer.type + \", tipo valor2 \" + valorDer.type + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public hijoIzq: Expression,\r\n        public hijoDer: Expression,\r\n        public tipoOperacion: operacionLogica,\r\n        public sym: string) { }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.BOOL) {\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//INGRESANDO VALOR LOGICO\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 0;\");\r\n                //###############################################################################################################\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //TRADUCCION 3D#################################################################################################\r\n                traduccion.setTranslate(\"\\n//INGRESANDO VALOR LOGICO\\t--------------\");\r\n                traduccion.stackCounter++;\r\n                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                //###############################################################################################################\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return { value: valorIzq.value, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n            }\r\n\r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL) {\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//OPREACION LOGICA AND\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorIzq.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorDer.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" && t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n                } else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    //TRADUCCION 3D#################################################################################################\r\n                    traduccion.setTranslate(\"\\n//OPREACION LOGICA AND\\t--------------\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorIzq.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + (valorDer.value ? \"1\" : \"0\") + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + (traduccion.t - 2) + \" || t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.stackCounter++;\r\n                    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = t\" + traduccion.t + \";\");\r\n                    //###############################################################################################################\r\n                    return { value: result, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \" + this.line + \"Column: \" + this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \" + valorDer.type + \"Linea: \" + this.line + \"Column: \" + this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \" + valorIzq.type + \"Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso } from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n//import { traducirXmlRecursive } from '../../Traduccion/xml3d';\r\n\r\nexport class Path implements Expression {\r\n\r\n    salida: any[];\r\n    nuevaL_Accesos: Acceso[];\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public L_Accesos: Acceso[],\r\n        public tipoPath?: string\r\n    ) {\r\n        this.salida = [];\r\n        this.nuevaL_Accesos = [];\r\n    }\r\n\r\n    private validarAntecesores(): Acceso[] {\r\n\r\n        let newL_Acc: Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n\r\n            if (acceso.tipoAcceso === 'padre') {\r\n\r\n                if (newL_Acc.length > 0) {\r\n                    newL_Acc.pop()\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \" + acceso.line + \"column: \" + acceso.column);\r\n                }\r\n            } else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    private unirSalida(): string {\r\n\r\n        let salida: string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno { //      /biblio\r\n        this.insertarConsulta();\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\") {\r\n\r\n            if (this.L_Accesos.length > 0 && ent.listaEntornos.length > 0) {\r\n\r\n                if (ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\") {//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n                    //TRADUCCION3D######################################################################################\r\n                    if (traduccion.compararCadenas3d === \"\") {\r\n                        traduccion.metodoCompararCadenas();\r\n                    }\r\n                    traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + ent.SP_ID + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[0].SP_id + \"];\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                    traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                    traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                    traduccion.setTranslate(\"compararCadenas();\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                    traduccion.t++;\r\n                    traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                    traduccion.t++;\r\n                    //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                    traduccion.setTranslate(\"if(t\" + (traduccion.t - 1) + \"!=1) goto L0;\");\r\n                    traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                    //#####################################################################################################\r\n\r\n                    if (this.validarPredicadosRaiz(ent, 0)) {\r\n\r\n                        if (this.L_Accesos.length > 1) { //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(ent, 1);\r\n                        } else {\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                } else if (this.L_Accesos[0].tipoQuery === 'absoluta') {\r\n                    this.getQuery(ent, 0);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            this.salida = [];\r\n            this.getQuery(ent, 0, simboloPadre);\r\n            return { value: this.salida, type: tipoPrimitivo.RESP , SP: -1};\r\n        }\r\n        return { value: this.unirSalida(), type: tipoPrimitivo.STRING , SP: -1};\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number, simboloPadre?: Simbolo) {\r\n\r\n        if (simboloPadre !== undefined) { // si la consulta es una sub consulta y el padre es un atributo --> /id[subconsulta]\r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" || this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n\r\n                if (this.L_Accesos.length < posActAcceso + 1) {\r\n                    this.getQuery(entPadre, posActAcceso + 1, simboloPadre);\r\n                } else {\r\n\r\n                    if (this.tipoPath === \"sub\") {\r\n                        this.salida.push({ value: simboloPadre.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                    } else {\r\n\r\n                        if (this.L_Accesos[posActAcceso].tipoQuery === 'text') {\r\n                            this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\n\");\r\n                        } else {\r\n                            this.salida.push(simboloPadre.identificador + \" = \\\"\" + simboloPadre.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }\r\n\r\n        } else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n\r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\") {\r\n\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.verificarAtributo === \"\") {\r\n                    traduccion.metodoVerificarAtributo();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Validando que sea atributo\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[posActAcceso].SP_id + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"verificarAtributo();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n                //#######################################################################################################\r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if (atri != null) {\r\n\r\n                    if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                        if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                        } else {\r\n\r\n                            if (this.tipoPath === \"sub\") {\r\n                                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                            } else {\r\n                                if (traduccion.etiquetaAtributo === \"\") {\r\n                                    traduccion.crearAtributoEtiqueta();\r\n                                }\r\n                                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                                traduccion.t++;\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n                                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    for (const entChiild of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entChiild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\") {\r\n\r\n                if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta' && this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    this.construirTodosAtributos(entPadre);\r\n\r\n                } else {\r\n\r\n                    if (entPadre.listaSimbolos.length > 0) {\r\n\r\n                        for (const atri of entPadre.listaSimbolos) {\r\n\r\n                            if (this.validarPredicadosAtri(entPadre, atri, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entPadre, posActAcceso + 1, atri);\r\n                                } else {\r\n\r\n                                    if (this.tipoPath === \"sub\") {\r\n                                        this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n                                    } else {\r\n                                        this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === 'texto') {\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1) {\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'relativa') {\r\n\r\n                        if (entPadre.texto !== '') {\r\n                            //TRADUCCION3D##########################################################################################\r\n                            if (traduccion.printString === \"\") {\r\n                                traduccion.crearPrintString();\r\n                            }\r\n                            traduccion.setTranslate(\"\\n\\n//Imprimiendo solo contenido de nodo\\t--------------\\n\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"printString();\");\r\n                            traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                            //#######################################################################################################\r\n                            this.salida.push(entPadre.texto + '\\n');\r\n                        }\r\n\r\n                    } else {\r\n                        this.construirTodosTextos(entPadre);\r\n                    }\r\n\r\n                } else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto del nodo ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\") {\r\n\r\n                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entPadre, posActAcceso + 1);\r\n                } else {\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                            if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entActual, posActAcceso + 1);\r\n                            } else {\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            } else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\") {\r\n\r\n                if (entPadre.listaEntornos.length > 0) {\r\n\r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                        if (entActual.identificador === this.L_Accesos[posActAcceso].id) {//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n\r\n                            //TRADUCCION3D######################################################################################\r\n                            if (traduccion.compararCadenas3d === \"\") {\r\n                                traduccion.metodoCompararCadenas();\r\n                            }\r\n                            traduccion.setTranslate(\"\\n\\n//Comparando accesos\\t--------------\\n\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entActual.SP_ID + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + this.L_Accesos[posActAcceso].SP_id + \"];\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                            traduccion.setTranslate(\"compararCadenas();\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + 1;\");\r\n                            traduccion.t++;\r\n                            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)t\" + (traduccion.t - 1) + \"];\\n\");\r\n                            traduccion.t++;\r\n                            //traduccion.setTranslate(\"printf(\\\"%d\\\", (int)t\" + (traduccion.t - 1) + \");\");\r\n                            traduccion.setTranslate(\"if(t\" + (traduccion.t - 1) + \"!=1) goto L0;\");\r\n                            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                            //####################################################################################################\r\n\r\n                            if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)) {\r\n\r\n                                if (this.L_Accesos.length > posActAcceso + 1) { //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entActual, posActAcceso + 1);\r\n                                } else {\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        } else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta') {\r\n                            this.getQuery(entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \" + this.L_Accesos[posActAcceso].tipoAcceso + \" del acceso: \" + this.L_Accesos[posActAcceso].tipoAcceso + \" no se reconoce como valido, \" +\r\n                    \"linea: \" + this.L_Accesos[posActAcceso].line + \" comlumna: \" + this.L_Accesos[posActAcceso].column);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre: Entorno) {\r\n\r\n        if (entPadre.texto !== '') {\r\n            //TRADUCCION3D##########################################################################################\r\n            if (traduccion.printString === \"\") {\r\n                traduccion.crearPrintString();\r\n            }\r\n            traduccion.setTranslate(\"\\n\\n//Imprimiendo solo contenido de nodo\\t--------------\\n\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n            traduccion.setTranslate(\"stack[(int)t\" + (traduccion.t) + \"] = t\" + (traduccion.t - 1) + \";\");\r\n            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"printString();\");\r\n            traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n            //#######################################################################################################\r\n            this.salida.push(entPadre.texto + '\\n');\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos(entPadre: Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos) {\r\n\r\n            if (this.tipoPath === \"sub\") {\r\n                this.salida.push({ value: atri.valor.replaceAll(\"\\\"\", \"\"), type: tipoPrimitivo.STRING });\r\n            } else {\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaAtributo === \"\") {\r\n                    traduccion.crearAtributoEtiqueta();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //######################################################################################################\r\n                this.salida.push(atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"\\n\");\r\n            }\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0) {\r\n\r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre: Entorno, tab: string) {\r\n\r\n        if (this.tipoPath === \"sub\") {\r\n\r\n            /*if (entPadre.listaEntornos.length > 0 || (entPadre.listaEntornos.length === 0 && entPadre.texto === '')) {\r\n                this.salida.push({ value: entPadre.identificador, type: tipoPrimitivo.NODO })\r\n            } else {\r\n                this.salida.push({ value: entPadre.texto, type: tipoPrimitivo.STRING });\r\n            }*/\r\n            this.salida.push({ value: entPadre, type: tipoPrimitivo.NODO })\r\n\r\n        } else {\r\n\r\n            if (traduccion.etiquetaApertura === \"\") {\r\n                traduccion.crearEtiquetaApertura();\r\n            }\r\n            traduccion.setTranslate(\"\\n//Inicia Etiqueta apertura\\t--------------\\n\\n\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n            traduccion.t++;\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n            traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n            traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n            traduccion.setTranslate(\"crearEtiquetaApertura();\");\r\n            traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos += atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\", \"\") + \"\\\"  \";\r\n                if (traduccion.etiquetaAtributo === \"\") {\r\n                    traduccion.crearAtributoEtiqueta();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Atributo Etiqueta\\t\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + atri.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearAtributoEtiqueta();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n\r\n            }\r\n\r\n            //construyo Nodos\r\n            if (entPadre.listaEntornos.length === 0 && entPadre.texto === '') {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)47);\\t\\t// /\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if (entPadre.listaEntornos.length > 0) {\r\n                //TRADUCCION3D##########################################################################################\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\\t\\t// Salto de linea\\n\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab + \"</\" + entPadre.identificador + \">\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaCierre === \"\") {\r\n                    traduccion.crearEtiquetaCierre();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo etiqueta cierre\\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearEtiquetaCierre();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //#######################################################################################################\r\n            } else {\r\n                traduccion.setTranslate(\"printf(\\\"%c\\\", (char)62);\\t\\t// >\\n\");\r\n                //TRADUCCION3D##########################################################################################\r\n                if (traduccion.etiquetaTexto === \"\") {\r\n                    traduccion.crearEtiquetaTexto();\r\n                }\r\n                traduccion.setTranslate(\"\\n\\n//Imprimiendo nodo Texto\t--------------\\n\\n\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_ID + \"];\");\r\n                traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = stack[(int)\" + entPadre.SP_VAL + \"];\");\r\n                traduccion.t++;\r\n                //traduccion.t++;\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 2) + \";\");\r\n                traduccion.setTranslate(\"t\" + traduccion.t + \" = t\" + traduccion.t + \" + 1;\");\r\n                traduccion.setTranslate(\"stack[(int)t\" + traduccion.t + \"] = t\" + (traduccion.t - 1) + \";\");\r\n                traduccion.setTranslate(\"S = S + \" + traduccion.stackCounter + \";\");\r\n                traduccion.setTranslate(\"crearEtiquetaTexto();\");\r\n                traduccion.setTranslate(\"S = S - \" + traduccion.stackCounter + \";\");\r\n                //#######################################################################################################\r\n                this.salida.push(tab + \"<\" + entPadre.identificador + \" \" + atributos + \">\" + entPadre.texto + \"</\" + entPadre.identificador + \">\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private validarPredicadosAtri(entPadre: Entorno, simboloPadre: Simbolo, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length) {\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entActual: Entorno, posActAcceso: number): boolean {\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n\r\n            var result: Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER) {\r\n\r\n                if (result.value !== 1) {\r\n                    return false;\r\n                }\r\n            } else if (result.type === tipoPrimitivo.RESP) {\r\n\r\n                if (result.value.length === 0) {\r\n                    return false;\r\n                }\r\n            } else if (result.value === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->\" + \"nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n\r\n    public insertarConsulta() {\r\n        traduccion.setTranslate(\"//Ingresando consulta Xpath\\t--------------\");\r\n\r\n        for (const key of this.L_Accesos) {\r\n            traduccion.stackCounter++;\r\n            key.SP_id = traduccion.stackCounter;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n            traduccion.setTranslate(\"\\n//Ingresando acceso\\t--------------\");\r\n            if (key.tipoAcceso === \"atributo\") {\r\n                traduccion.setTranslate(\"heap[(int)H] = 64;\\t\\t//Caracter @\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n            for (let i = 0; i < key.id.length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + key.id.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + key.id[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === key.id.length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n\r\n\r\n            traduccion.setTranslate(\"\\n//Ingresando tipo de acceso\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            key.SP_tipoAcceso = traduccion.stackCounter;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n            for (let i = 0; i < key.tipoAcceso.length; i++) {\r\n                traduccion.setTranslate(\"heap[(int)H] = \" + key.tipoAcceso.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + key.tipoAcceso[i].toString());\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n                if (i + 1 === key.tipoAcceso.length) {\r\n                    traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                    traduccion.setTranslate(\"H = H + 1;\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { traduccion } from '../../Traduccion/traduccion';\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression {\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number,\r\n        public hijoIzq: Expression,\r\n        public hijoDer: Expression,\r\n        public tipoOperacion: operacionRelacional,\r\n        public sym: string) { }\r\n\r\n    public execute(ent: Entorno, simboloPadre?: Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                for (const valDer of valorDer.value) {\r\n\r\n                    if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO) {\r\n\r\n                        if (this.validar(valIzq.value.identificador, valDer.value.identificador)) {\r\n                            //TRADUCCION 3D#################################################################################################\r\n                            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                            traduccion.stackCounter++;\r\n                            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                            //###############################################################################################################\r\n                            return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                        }\r\n                    } else if (valIzq.type === tipoPrimitivo.NODO) {\r\n\r\n                        if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== '') {\r\n\r\n                            if (this.validar(valIzq.value.texto, valDer.value)) {\r\n                                //TRADUCCION 3D#################################################################################################\r\n                                traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                                traduccion.stackCounter++;\r\n                                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                                //###############################################################################################################\r\n                                return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (valDer.type === tipoPrimitivo.NODO) {\r\n\r\n                        if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== '') {\r\n\r\n                            if (this.validar(valDer.value.texto, valIzq.value)) {\r\n                                //TRADUCCION 3D#################################################################################################\r\n                                traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                                traduccion.stackCounter++;\r\n                                traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                                //###############################################################################################################\r\n                                return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (this.validar(valIzq.value, valDer.value)) {\r\n                            //TRADUCCION 3D#################################################################################################\r\n                            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                            traduccion.stackCounter++;\r\n                            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                            //###############################################################################################################\r\n                            return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n            //###############################################################################################################\r\n            \r\n            return { value: false, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n\r\n        } else if (valorIzq.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type === tipoPrimitivo.NODO) {\r\n\r\n                    if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== '') {\r\n\r\n                        if (this.validar(valIzq.value.texto, valorDer.value)) {\r\n                            //TRADUCCION 3D#################################################################################################\r\n                            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                            traduccion.stackCounter++;\r\n                            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                            //###############################################################################################################\r\n                            return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                        }\r\n                    }\r\n                } else {\r\n\r\n                    if (this.validar(valIzq.value, valorDer.value)) {\r\n                        //TRADUCCION 3D#################################################################################################\r\n                        traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                        traduccion.stackCounter++;\r\n                        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                        //###############################################################################################################\r\n                        return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                    }\r\n                }\r\n            }\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 0;\");\r\n            //###############################################################################################################\r\n            return { value: false, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n\r\n        } else if (valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if (valDer.type === tipoPrimitivo.NODO) {\r\n\r\n                    if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== '') {\r\n\r\n                        if (this.validar(valDer.value.texto, valorIzq.value)) {\r\n                            //TRADUCCION 3D#################################################################################################\r\n                            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                            traduccion.stackCounter++;\r\n                            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                            //###############################################################################################################\r\n                            return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                        }\r\n                    }\r\n                } else {\r\n\r\n                    if (this.validar(valorIzq.value, valDer.value)) {\r\n                        //TRADUCCION 3D#################################################################################################\r\n                        traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n                        traduccion.stackCounter++;\r\n                        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 1;\");\r\n                        //###############################################################################################################\r\n                        return { value: true, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n                    }\r\n                }\r\n            }\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = 0;\");\r\n            //###############################################################################################################\r\n            return { value: false, type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter };\r\n\r\n        } else {\r\n            //TRADUCCION 3D#################################################################################################\r\n            traduccion.setTranslate(\"\\n//Ingresando primitivo bool\\t--------------\");\r\n            traduccion.stackCounter++;\r\n            traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \"+(this.validar(valorIzq.value, valorDer.value) ? \"1\" : \"0\")+\";\");\r\n            //###############################################################################################################\r\n            return { value: this.validar(valorIzq.value, valorDer.value), type: tipoPrimitivo.BOOL, SP: traduccion.stackCounter }\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq: String, valorDer: String): boolean {\r\n\r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq == valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq != valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MENOR) {\r\n            const result = valorIzq < valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq <= valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq > valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq >= valorDer;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \" + this.line + \"Column: \" + this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto: string): string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xQueryGrammar = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,15],$V3=[1,16],$V4=[1,17],$V5=[1,13],$V6=[1,14],$V7=[5,6],$V8=[5,6,65],$V9=[5,6,36],$Va=[1,33],$Vb=[1,23],$Vc=[1,24],$Vd=[1,31],$Ve=[1,25],$Vf=[1,26],$Vg=[1,27],$Vh=[1,28],$Vi=[1,29],$Vj=[1,30],$Vk=[1,32],$Vl=[1,46],$Vm=[1,47],$Vn=[1,50],$Vo=[1,44],$Vp=[1,45],$Vq=[1,48],$Vr=[5,6,27,29,33,36,65],$Vs=[1,53],$Vt=[1,54],$Vu=[5,6,27,29,33,36,41,45,46,47,48,49,50,51,52,53,54,55,56,57,60,62,65,80],$Vv=[1,57],$Vw=[1,70],$Vx=[1,71],$Vy=[1,72],$Vz=[1,73],$VA=[1,74],$VB=[1,75],$VC=[1,76],$VD=[1,77],$VE=[1,78],$VF=[1,79],$VG=[1,80],$VH=[1,81],$VI=[1,82],$VJ=[5,6,29,33,36,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57],$VK=[5,6,27,29,33,36,41,45,46,47,48,49,50,51,52,53,54,55,56,57,60,62,65,78,80],$VL=[1,92],$VM=[1,93],$VN=[1,91],$VO=[1,94],$VP=[1,98],$VQ=[1,95],$VR=[1,96],$VS=[6,36],$VT=[5,6,21,22,27,29,33,36,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57],$VU=[1,132],$VV=[1,133],$VW=[1,134],$VX=[1,135],$VY=[1,136],$VZ=[1,137],$V_=[1,138],$V$=[1,139],$V01=[1,140],$V11=[1,141],$V21=[1,142],$V31=[1,143],$V41=[1,144],$V51=[41,45,46,47,48,49,50,51,52,53,54,55,56,57,80],$V61=[5,6,29,33,36,41,44,45,46,50,51,52,53,54,55,56,57],$V71=[5,6,29,33,36,41,44,45,46,47,48,50,51,52,53,54,55,56,57],$V81=[5,6,29,33,36,41,44,50,51,56,57],$V91=[5,6,29,33,36,41,44,50,51,52,53,54,55,56,57],$Va1=[1,165],$Vb1=[1,166],$Vc1=[1,167],$Vd1=[1,189],$Ve1=[1,188],$Vf1=[27,29,33],$Vg1=[1,194],$Vh1=[1,195],$Vi1=[5,6,21,22,27,29,33,36,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,62],$Vj1=[41,45,46,50,51,52,53,54,55,56,57,80],$Vk1=[41,45,46,47,48,50,51,52,53,54,55,56,57,80],$Vl1=[41,50,51,56,57,80],$Vm1=[41,50,51,52,53,54,55,56,57,80];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"LQUERYS\":4,\"EOF\":5,\",\":6,\"QUERY\":7,\"cadena\":8,\"scadena\":9,\"MULTIPATH\":10,\"XQUERY\":11,\"FOR\":12,\"LET\":13,\"RETURN\":14,\"for\":15,\"$\":16,\"id\":17,\"in\":18,\"TIPOPATH\":19,\"ORDERBY\":20,\"ascending\":21,\"descending\":22,\"WHERE\":23,\"at\":24,\"XQUERYPATH\":25,\"PATH\":26,\"where\":27,\"EXPXQUERY\":28,\"order\":29,\"by\":30,\"let\":31,\":=\":32,\"return\":33,\"{\":34,\"LEXPSRET\":35,\"}\":36,\"EXPRET\":37,\"IF\":38,\"if\":39,\"(\":40,\")\":41,\"then\":42,\"ElSEst\":43,\"else\":44,\"+\":45,\"-\":46,\"*\":47,\"div\":48,\"mod\":49,\"=\":50,\"!=\":51,\"<\":52,\"<=\":53,\">\":54,\">=\":55,\"and\":56,\"or\":57,\"VALOREXPXQUERY\":58,\"number\":59,\"/\":60,\"LACCESOSXQUERY\":61,\"//\":62,\"ACCESOXQUERY\":63,\"@\":64,\"|\":65,\"LACCESOS\":66,\"ACCESO\":67,\".\":68,\"..\":69,\"text\":70,\"node\":71,\"child\":72,\"::\":73,\"descendant\":74,\"PREDICADOS\":75,\"attribute\":76,\"PREDI\":77,\"[\":78,\"EXP\":79,\"]\":80,\"VALOR\":81,\"position\":82,\"last\":83,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",6:\",\",8:\"cadena\",9:\"scadena\",15:\"for\",16:\"$\",17:\"id\",18:\"in\",21:\"ascending\",22:\"descending\",24:\"at\",27:\"where\",29:\"order\",30:\"by\",31:\"let\",32:\":=\",33:\"return\",34:\"{\",36:\"}\",39:\"if\",40:\"(\",41:\")\",42:\"then\",44:\"else\",45:\"+\",46:\"-\",47:\"*\",48:\"div\",49:\"mod\",50:\"=\",51:\"!=\",52:\"<\",53:\"<=\",54:\">\",55:\">=\",56:\"and\",57:\"or\",59:\"number\",60:\"/\",62:\"//\",64:\"@\",65:\"|\",68:\".\",69:\"..\",70:\"text\",71:\"node\",72:\"child\",73:\"::\",74:\"descendant\",76:\"attribute\",78:\"[\",80:\"]\",82:\"position\",83:\"last\"},\nproductions_: [0,[3,2],[3,1],[4,3],[4,1],[7,1],[7,1],[7,1],[7,1],[11,1],[11,1],[11,1],[12,6],[12,7],[12,8],[12,8],[12,7],[12,8],[12,9],[12,9],[12,9],[12,10],[12,11],[12,11],[12,10],[12,11],[12,12],[12,12],[19,1],[19,1],[23,2],[20,3],[13,5],[13,5],[13,6],[13,6],[14,4],[14,2],[35,3],[35,1],[37,1],[37,1],[37,1],[37,1],[38,7],[43,2],[43,2],[43,0],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,3],[28,1],[58,3],[58,1],[58,1],[58,1],[58,1],[25,4],[25,4],[25,2],[61,3],[61,3],[61,1],[63,1],[63,1],[63,2],[63,2],[10,3],[10,1],[26,2],[26,2],[66,3],[66,3],[66,1],[67,1],[67,1],[67,1],[67,1],[67,3],[67,3],[67,3],[67,3],[67,3],[67,3],[67,2],[67,2],[67,4],[67,4],[67,4],[67,4],[67,2],[67,2],[67,3],[67,3],[67,3],[67,3],[67,4],[67,4],[67,1],[75,2],[75,1],[77,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,3],[79,1],[81,3],[81,1],[81,1],[81,1],[81,3],[81,3],[81,1],[81,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1];\nbreak;\ncase 2:\nreturn $$[$0];\nbreak;\ncase 3: case 38: case 77:\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\nbreak;\ncase 4: case 39: case 72: case 78: case 83: case 110:\nthis.$ = [$$[$0]];\nbreak;\ncase 5: case 6: case 63: case 64: case 127: case 128:\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\nbreak;\ncase 7:\nthis.$ = new MultiXpaths(_$[$0].first_line, _$[$0].first_column, $$[$0]);\nbreak;\ncase 8: case 9: case 10: case 11: case 28: case 29: case 30: case 31: case 40: case 41: case 42: case 43: case 45: case 46: case 61: case 125:\nthis.$ = $$[$0];\nbreak;\ncase 12:\nthis.$ = new For(_$[$0-5].first_line, _$[$0-5].first_column, $$[$0-3], \"\", $$[$0-1], null, null, \"\", $$[$0]);\nbreak;\ncase 13:\nthis.$ = new For(_$[$0-6].first_line, _$[$0-6].first_column, $$[$0-4], \"\", $$[$0-2], null, $$[$0-1], \"\", $$[$0]);\nbreak;\ncase 14: case 15:\nthis.$ = new For(_$[$0-7].first_line, _$[$0-7].first_column, $$[$0-5], \"\", $$[$0-3], null, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 16:\nthis.$ = new For(_$[$0-6].first_line, _$[$0-6].first_column, $$[$0-4], \"\", $$[$0-2], $$[$0-1], null, \"\", $$[$0]);\nbreak;\ncase 17:\nthis.$ = new For(_$[$0-7].first_line, _$[$0-7].first_column, $$[$0-5], \"\", $$[$0-3], $$[$0-2], $$[$0-1], \"\", $$[$0]);\nbreak;\ncase 18: case 19:\nthis.$ = new For(_$[$0-8].first_line, _$[$0-8].first_column, $$[$0-6], \"\", $$[$0-4], $$[$0-3], $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 20:\nthis.$ = new For(_$[$0-8].first_line, _$[$0-8].first_column, $$[$0-6], $$[$0-3], $$[$0-1], null, null, \"\", $$[$0]);\nbreak;\ncase 21:\nthis.$ = new For(_$[$0-9].first_line, _$[$0-9].first_column, $$[$0-7], $$[$0-4], $$[$0-2], null, $$[$0-1], \"\", $$[$0]);\nbreak;\ncase 22: case 23:\nthis.$ = new For(_$[$0-10].first_line, _$[$0-10].first_column, $$[$0-8], $$[$0-5], $$[$0-3], null, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 24:\nthis.$ = new For(_$[$0-9].first_line, _$[$0-9].first_column, $$[$0-7], $$[$0-4], $$[$0-2], $$[$0-1], null, \"\", $$[$0]);\nbreak;\ncase 25:\nthis.$ = new For(_$[$0-10].first_line, _$[$0-10].first_column, $$[$0-8], $$[$0-5], $$[$0-3], $$[$0-2], $$[$0-1], \"\", $$[$0]);\nbreak;\ncase 26: case 27:\nthis.$ = new For(_$[$0-11].first_line, _$[$0-11].first_column, $$[$0-9], $$[$0-6], $$[$0-4], $$[$0-3], $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 32: case 33:\nthis.$ = new Let(_$[$0-4].first_line, _$[$0-4].first_column, $$[$0-2], $$[$0], new Return (_$[$0-4].first_line, _$[$0-4].first_column, []));\nbreak;\ncase 34: case 35:\nthis.$ = new Let(_$[$0-5].first_line, _$[$0-5].first_column, $$[$0-3], $$[$0-1], $$[$0]);\nbreak;\ncase 36:\nthis.$ = new Return (_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1]);\nbreak;\ncase 37:\nthis.$ = new Return (_$[$0-1].first_line, _$[$0-1].first_column, [$$[$0]]);\nbreak;\ncase 44:\nthis.$ = new If(_$[$0-6].first_line, _$[$0-6].first_column, $$[$0-4], $$[$0-1], $$[$0]);\nbreak;\ncase 47:\nthis.$ = null;\nbreak;\ncase 48: case 112:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\nbreak;\ncase 49: case 113:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\nbreak;\ncase 50: case 114:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\nbreak;\ncase 51: case 115:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\nbreak;\ncase 52: case 116:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\nbreak;\ncase 53: case 117:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\nbreak;\ncase 54: case 118:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\nbreak;\ncase 55: case 119:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\nbreak;\ncase 56: case 120:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\nbreak;\ncase 57: case 121:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\nbreak;\ncase 58: case 122:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\nbreak;\ncase 59: case 123:\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\nbreak;\ncase 60: case 124:\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\nbreak;\ncase 62: case 111: case 126:\nthis.$ = $$[$0-1];\nbreak;\ncase 65: case 129:\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\nbreak;\ncase 66:\nthis.$ = $$[$0]\nbreak;\ncase 67:\n$$[$0][0].tipoQuery = 'relativa';\r\n                                                             this.$ = new XqueryPath(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], new Path(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'sub'));\nbreak;\ncase 68:\n$$[$0][0].tipoQuery = 'absoluta';\r\n                                                             this.$ = new XqueryPath(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], new Path(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'sub'));\nbreak;\ncase 69:\nthis.$ = new XqueryPath(_$[$0].first_line, _$[$0].first_column, $$[$0], new Path(_$[$0].first_line, _$[$0].first_column, [], 'sub'));\nbreak;\ncase 70: case 71:\n$$[$0].tipoQuery = 'relativa'; $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\nbreak;\ncase 73: case 84:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\nbreak;\ncase 74: case 85:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\nbreak;\ncase 75: case 100:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\nbreak;\ncase 76: case 101:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\nbreak;\ncase 79:\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\nbreak;\ncase 80:\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'absoluta';}  \r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0]);\nbreak;\ncase 81:\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'relativa'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\nbreak;\ncase 82:\nif($$[$0].tipoQuery === undefined){$$[$0].tipoQuery = 'absoluta'} $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\nbreak;\ncase 86:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\nbreak;\ncase 87:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'padre', []);\nbreak;\ncase 88:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'texto', []);\nbreak;\ncase 89:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2], 'todosNodos', []);\nbreak;\ncase 90:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', []);\nbreak;\ncase 91:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', []);\nbreak;\ncase 92:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'nodo', [], 'absoluta');\nbreak;\ncase 93:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0], 'todosNodos', [], 'absoluta');\nbreak;\ncase 94:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\nbreak;\ncase 95:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\nbreak;\ncase 96:\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0]);\nbreak;\ncase 97:\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0]);\nbreak;\ncase 98:\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'nodo', $$[$0], 'absoluta');\nbreak;\ncase 99:\nthis.$ = new Acceso(_$[$0-3].first_line, _$[$0-3].first_column, $$[$0-1], 'todosNodos', $$[$0], 'absoluta');\nbreak;\ncase 102:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'atributo', []);\nbreak;\ncase 103:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'todosAtributos', []);\nbreak;\ncase 104:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\nbreak;\ncase 105:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\nbreak;\ncase 106:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'atributo', $$[$0]);\nbreak;\ncase 107:\nthis.$ = new Acceso(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\nbreak;\ncase 108:\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0].first_line, _$[$0].first_column))\nbreak;\ncase 109:\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\nbreak;\ncase 130: case 131:\nthis.$ = new Primitivo(_$[$0-2].first_line, _$[$0-2].first_column, $$[$0-2]);\nbreak;\ncase 132:\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery = 'relativa';}\r\n                                                     this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\nbreak;\ncase 133:\nif($$[$0][0].tipoQuery === undefined){$$[$0][0].tipoQuery ='relativa';}\r\n                                                     this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],7:4,8:$V0,9:$V1,10:7,11:8,12:10,13:11,14:12,15:$V2,26:9,31:$V3,33:$V4,60:$V5,62:$V6},{1:[3]},{5:[1,18],6:[1,19]},{1:[2,2]},o($V7,[2,4]),o($V7,[2,5]),o($V7,[2,6]),o($V7,[2,7],{65:[1,20]}),o($V7,[2,8]),o($V8,[2,78]),o($V9,[2,9]),o($V9,[2,10]),o($V9,[2,11]),{2:$Va,17:$Vb,47:$Vc,64:$Vd,66:21,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk},{2:$Va,17:$Vb,47:$Vc,64:$Vd,66:34,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk},{16:[1,35]},{16:[1,36]},{8:$Vl,9:$Vm,11:39,12:10,13:11,14:12,15:$V2,16:$Vn,25:49,26:41,28:40,31:$V3,33:$V4,34:[1,37],37:38,38:42,39:$Vo,40:$Vp,58:43,59:$Vq,60:$V5,62:$V6},{1:[2,1]},{7:51,8:$V0,9:$V1,10:7,11:8,12:10,13:11,14:12,15:$V2,26:9,31:$V3,33:$V4,60:$V5,62:$V6},{26:52,60:$V5,62:$V6},o($Vr,[2,79],{60:$Vs,62:$Vt}),o($Vu,[2,83]),o($Vu,[2,84],{75:55,77:56,78:$Vv}),o($Vu,[2,85],{77:56,75:58,78:$Vv}),o($Vu,[2,86]),o($Vu,[2,87]),{40:[1,59]},{40:[1,60]},{73:[1,61]},{73:[1,62]},{17:[1,63],47:[1,64]},{73:[1,65]},o($Vu,[2,108]),o($Vr,[2,80],{60:$Vs,62:$Vt}),{17:[1,66]},{17:[1,67]},{8:$Vl,9:$Vm,11:39,12:10,13:11,14:12,15:$V2,16:$Vn,25:49,26:41,28:40,31:$V3,33:$V4,35:68,37:69,38:42,39:$Vo,40:$Vp,58:43,59:$Vq,60:$V5,62:$V6},o($V9,[2,37]),o($V9,[2,40]),o($V9,[2,41],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH,57:$VI}),o($V9,[2,42]),o($V9,[2,43]),o($VJ,[2,61]),{40:[1,83]},{8:$Vl,9:$Vm,16:$Vn,25:49,28:84,40:$Vp,58:43,59:$Vq},o($VJ,[2,63]),o($VJ,[2,64]),o($VJ,[2,65]),o($VJ,[2,66]),{17:[1,85]},o($V7,[2,3]),o($V8,[2,77]),{2:$Va,17:$Vb,47:$Vc,64:$Vd,67:86,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk},{2:$Va,17:$Vb,47:$Vc,64:$Vd,67:87,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk},o($Vu,[2,94],{77:88,78:$Vv}),o($VK,[2,110]),{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:89,81:90,82:$VQ,83:$VR},o($Vu,[2,95],{77:88,78:$Vv}),{41:[1,99]},{41:[1,100]},{17:[1,101],47:[1,102]},{17:[1,103],47:[1,104]},o($Vu,[2,100],{77:56,75:105,78:$Vv}),o($Vu,[2,101],{77:56,75:106,78:$Vv}),{17:[1,107],47:[1,108]},{18:[1,109],24:[1,110]},{32:[1,111]},{6:[1,113],36:[1,112]},o($VS,[2,39]),{8:$Vl,9:$Vm,16:$Vn,25:49,28:114,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:115,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:116,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:117,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:118,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:119,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:120,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:121,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:122,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:123,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:124,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:125,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:126,40:$Vp,58:43,59:$Vq},{8:$Vl,9:$Vm,16:$Vn,25:49,28:127,40:$Vp,58:43,59:$Vq},{41:[1,128],45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH,57:$VI},o($VT,[2,69],{60:[1,129],62:[1,130]}),o($Vu,[2,81]),o($Vu,[2,82]),o($VK,[2,109]),{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY,50:$VZ,51:$V_,52:$V$,53:$V01,54:$V11,55:$V21,56:$V31,57:$V41,80:[1,131]},o($V51,[2,125]),{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:145,81:90,82:$VQ,83:$VR},o($V51,[2,127]),o($V51,[2,128]),o($V51,[2,129]),{40:[1,146]},{40:[1,147]},o($V51,[2,132],{60:$Vs,62:$Vt}),{2:$Va,17:$Vb,47:$Vc,64:$Vd,66:148,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk},o($Vu,[2,88]),o($Vu,[2,89]),o($Vu,[2,90],{77:56,75:149,78:$Vv}),o($Vu,[2,91],{77:56,75:150,78:$Vv}),o($Vu,[2,92],{77:56,75:151,78:$Vv}),o($Vu,[2,93],{77:56,75:152,78:$Vv}),o($Vu,[2,104],{77:88,78:$Vv}),o($Vu,[2,105],{77:88,78:$Vv}),o($Vu,[2,102],{77:56,75:153,78:$Vv}),o($Vu,[2,103],{77:56,75:154,78:$Vv}),{16:$Vn,19:155,25:156,26:157,60:$V5,62:$V6},{16:[1,158]},{8:$Vl,9:$Vm,16:$Vn,25:49,26:160,28:159,40:$Vp,58:43,59:$Vq,60:$V5,62:$V6},o($V9,[2,36]),{8:$Vl,9:$Vm,11:39,12:10,13:11,14:12,15:$V2,16:$Vn,25:49,26:41,28:40,31:$V3,33:$V4,37:161,38:42,39:$Vo,40:$Vp,58:43,59:$Vq,60:$V5,62:$V6},o($V61,[2,48],{47:$Vy,48:$Vz,49:$VA}),o($V61,[2,49],{47:$Vy,48:$Vz,49:$VA}),o($V71,[2,50],{49:$VA}),o($V71,[2,51],{49:$VA}),o($VJ,[2,52]),o($V81,[2,53],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,52:$VD,53:$VE,54:$VF,55:$VG}),o($V81,[2,54],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,52:$VD,53:$VE,54:$VF,55:$VG}),o($V91,[2,55],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA}),o($V91,[2,56],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA}),o($V91,[2,57],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA}),o($V91,[2,58],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA}),o([5,6,29,33,36,41,44,56,57],[2,59],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG}),o([5,6,29,33,36,41,44,57],[2,60],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH}),{41:[1,162],45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH,57:$VI},o($VJ,[2,62]),{17:$Va1,47:$Vb1,61:163,63:164,64:$Vc1},{17:$Va1,47:$Vb1,61:168,63:164,64:$Vc1},o($VK,[2,111]),{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:169,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:170,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:171,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:172,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:173,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:174,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:175,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:176,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:177,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:178,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:179,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:180,81:90,82:$VQ,83:$VR},{2:$Va,8:$VL,9:$VM,17:$Vb,40:$VN,47:$Vc,59:$VO,62:$VP,64:$Vd,66:97,67:22,68:$Ve,69:$Vf,70:$Vg,71:$Vh,72:$Vi,74:$Vj,76:$Vk,79:181,81:90,82:$VQ,83:$VR},{41:[1,182],45:$VU,46:$VV,47:$VW,48:$VX,49:$VY,50:$VZ,51:$V_,52:$V$,53:$V01,54:$V11,55:$V21,56:$V31,57:$V41},{41:[1,183]},{41:[1,184]},o($V51,[2,133],{60:$Vs,62:$Vt}),o($Vu,[2,96],{77:88,78:$Vv}),o($Vu,[2,97],{77:88,78:$Vv}),o($Vu,[2,98],{77:88,78:$Vv}),o($Vu,[2,99],{77:88,78:$Vv}),o($Vu,[2,106],{77:88,78:$Vv}),o($Vu,[2,107],{77:88,78:$Vv}),{14:185,20:186,23:187,27:$Vd1,29:$Ve1,33:$V4},o($Vf1,[2,28]),o($Vf1,[2,29]),{17:[1,190]},o($V9,[2,32],{14:191,33:$V4,45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH,57:$VI}),o($V9,[2,33],{14:192,33:$V4}),o($VS,[2,38]),{42:[1,193]},o($VT,[2,67],{60:$Vg1,62:$Vh1}),o($Vi1,[2,72]),o($Vi1,[2,73]),o($Vi1,[2,74]),{17:[1,196],47:[1,197]},o($VT,[2,68],{60:$Vg1,62:$Vh1}),o($Vj1,[2,112],{47:$VW,48:$VX,49:$VY}),o($Vj1,[2,113],{47:$VW,48:$VX,49:$VY}),o($Vk1,[2,114],{49:$VY}),o($Vk1,[2,115],{49:$VY}),o($V51,[2,116]),o($Vl1,[2,117],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY,52:$V$,53:$V01,54:$V11,55:$V21}),o($Vl1,[2,118],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY,52:$V$,53:$V01,54:$V11,55:$V21}),o($Vm1,[2,119],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY}),o($Vm1,[2,120],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY}),o($Vm1,[2,121],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY}),o($Vm1,[2,122],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY}),o([41,56,57,80],[2,123],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY,50:$VZ,51:$V_,52:$V$,53:$V01,54:$V11,55:$V21}),o([41,57,80],[2,124],{45:$VU,46:$VV,47:$VW,48:$VX,49:$VY,50:$VZ,51:$V_,52:$V$,53:$V01,54:$V11,55:$V21,56:$V31}),o($V51,[2,126]),o($V51,[2,130]),o($V51,[2,131]),o($V9,[2,12]),{14:198,21:[1,199],22:[1,200],33:$V4},{14:201,20:202,29:$Ve1,33:$V4},{30:[1,203]},{8:$Vl,9:$Vm,16:$Vn,25:49,28:204,40:$Vp,58:43,59:$Vq},{18:[1,205]},o($V9,[2,34]),o($V9,[2,35]),{8:$Vl,9:$Vm,16:$Vn,25:49,28:206,40:$Vp,58:43,59:$Vq},{17:$Va1,47:$Vb1,63:207,64:$Vc1},{17:$Va1,47:$Vb1,63:208,64:$Vc1},o($Vi1,[2,75]),o($Vi1,[2,76]),o($V9,[2,13]),{14:209,33:$V4},{14:210,33:$V4},o($V9,[2,16]),{14:211,21:[1,212],22:[1,213],33:$V4},{16:$Vn,25:214},o([29,33],[2,30],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH,57:$VI}),{16:$Vn,19:215,25:156,26:157,60:$V5,62:$V6},o($V9,[2,47],{43:216,44:[1,217],45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH,57:$VI}),o($Vi1,[2,70]),o($Vi1,[2,71]),o($V9,[2,14]),o($V9,[2,15]),o($V9,[2,17]),{14:218,33:$V4},{14:219,33:$V4},o([21,22,33],[2,31]),{14:220,20:221,23:222,27:$Vd1,29:$Ve1,33:$V4},o($V9,[2,44]),{8:$Vl,9:$Vm,16:$Vn,25:49,28:223,38:224,39:$Vo,40:$Vp,58:43,59:$Vq},o($V9,[2,18]),o($V9,[2,19]),o($V9,[2,20]),{14:225,21:[1,226],22:[1,227],33:$V4},{14:228,20:229,29:$Ve1,33:$V4},o($V9,[2,45],{45:$Vw,46:$Vx,47:$Vy,48:$Vz,49:$VA,50:$VB,51:$VC,52:$VD,53:$VE,54:$VF,55:$VG,56:$VH,57:$VI}),o($V9,[2,46]),o($V9,[2,21]),{14:230,33:$V4},{14:231,33:$V4},o($V9,[2,24]),{14:232,21:[1,233],22:[1,234],33:$V4},o($V9,[2,22]),o($V9,[2,23]),o($V9,[2,25]),{14:235,33:$V4},{14:236,33:$V4},o($V9,[2,26]),o($V9,[2,27])],\ndefaultActions: {3:[2,2],18:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\r\n    const {Acceso} = require(\"../xqueryAST/ExpresionesXpath/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xqueryAST/ExpresionesXpath/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xqueryAST/ExpresionesXpath/Logica\");\r\n    const {Path} = require(\"../xqueryAST/ExpresionesXpath/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xqueryAST/ExpresionesXpath/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xqueryAST/ExpresionesXpath/Relacional\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n\r\n    const {For} = require(\"../xqueryAST/ExpresionesXquery/For\");\r\n    const {If} = require(\"../xqueryAST/ExpresionesXquery/If\");\r\n    const {Let} = require(\"../xqueryAST/ExpresionesXquery/Let\");\r\n    const {MultiXpaths} = require(\"../xqueryAST/ExpresionesXquery/MultiXpaths\");\r\n    const {Return} = require(\"../xqueryAST/ExpresionesXquery/Return\");\r\n    const {XqueryPath} = require(\"../xqueryAST/ExpresionesXquery/XqueryPath\");\r\n    \r\n    \r\n    var listaErrores = [];\r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 59\nbreak;\ncase 1:this.begin('string'); tmp=\"\"; \nbreak;\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 6:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 7: tmp= tmp+yy_.yytext;   this.begin('string');\nbreak;\ncase 8:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 8;\r\n                  \nbreak;\ncase 9:this.begin('string'); tmp=\"\"; \nbreak;\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 14:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 15: tmp= tmp+yy_.yytext;   this.begin('string');\nbreak;\ncase 16:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 9;\r\n                  \nbreak;\ncase 17:return 62\nbreak;\ncase 18:return 60\nbreak;\ncase 19:return 69\nbreak;\ncase 20:return 68\nbreak;\ncase 21:return 6\nbreak;\ncase 22:return 64\nbreak;\ncase 23:return 78\nbreak;\ncase 24:return 80\nbreak;\ncase 25:return 40\nbreak;\ncase 26:return 41\nbreak;\ncase 27:return 65\nbreak;\ncase 28:return 45\nbreak;\ncase 29:return 46\nbreak;\ncase 30:return 47\nbreak;\ncase 31:return 48\nbreak;\ncase 32:return 50\nbreak;\ncase 33:return 51\nbreak;\ncase 34:return 53\nbreak;\ncase 35:return 55\nbreak;\ncase 36:return 52\nbreak;\ncase 37:return 54\nbreak;\ncase 38:return 57\nbreak;\ncase 39:return 56\nbreak;\ncase 40:return 49\nbreak;\ncase 41:\nbreak;\ncase 42:\nbreak;\ncase 43:return 73\nbreak;\ncase 44:return 72\nbreak;\ncase 45:return 76\nbreak;\ncase 46:return 74\nbreak;\ncase 47:return 70\nbreak;\ncase 48:return 83 \nbreak;\ncase 49:return 82\nbreak;\ncase 50:return 44;\nbreak;\ncase 51:return 42;\nbreak;\ncase 52:return 39;\nbreak;\ncase 53:return 21;\nbreak;\ncase 54:return 22;\nbreak;\ncase 55:return 30;\nbreak;\ncase 56:return 29;\nbreak;\ncase 57:return 27;\nbreak;\ncase 58:return 24;\nbreak;\ncase 59:return 18;\nbreak;\ncase 60:return 15;\nbreak;\ncase 61:return 33;\nbreak;\ncase 62:return 16;\nbreak;\ncase 63:return 31;\nbreak;\ncase 64:return 32;\nbreak;\ncase 65:return 17\nbreak;\ncase 66:return 5\nbreak;\ncase 67:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\nbreak;\n}\n},\nrules: [/^(?:[0-9]+)/i,/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:,)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?: )/i,/^(?:\\n)/i,/^(?:::)/i,/^(?:child\\b)/i,/^(?:attribute\\b)/i,/^(?:descendant\\b)/i,/^(?:text\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:else\\b)/i,/^(?:then\\b)/i,/^(?:if\\b)/i,/^(?:ascending\\b)/i,/^(?:descending\\b)/i,/^(?:by\\b)/i,/^(?:order\\b)/i,/^(?:where\\b)/i,/^(?:at\\b)/i,/^(?:in\\b)/i,/^(?:for\\b)/i,/^(?:return\\b)/i,/^(?:\\$)/i,/^(?:let\\b)/i,/^(?::=)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"string\":{\"rules\":[0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,9,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xQueryGrammar;\nexports.Parser = xQueryGrammar.Parser;\nexports.parse = function () { return xQueryGrammar.parse.apply(xQueryGrammar, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\n\r\nexport class Acceso {\r\n\r\n    SP_id:number;\r\n    SP_tipoAcceso:number;\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: ExpressionXquery[],\r\n    public tipoQuery ?: string ){\r\n        this.SP_id = -1;\r\n        this.SP_tipoAcceso = -1\r\n    } \r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.id.toString() + \"\\\"];\\n\";\r\n        for (const key in this.predicados) {\r\n            texto = this.predicados[key].GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"-> nodo\" + this.predicados[key].line.toString() + \"_\" + this.predicados[key].column.toString() + \";\\n\";\r\n        }\r\n        return texto;\r\n    }\r\n\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\"\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\nimport { Entorno } from '../../xmlAST/Entorno';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { tipoPrimitivo } from './Primitivo';\r\n\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements ExpressionXquery{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: ExpressionXquery,\r\n    public hijoDer: ExpressionXquery,\r\n    public tipoOperacion: operacionAritmetica,\r\n    public sym: string){}\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.executeXquery(entXquery, ent, simboloPadre);\r\n        let valorDer = this.hijoDer.executeXquery(entXquery, ent, simboloPadre);\r\n\r\n        if(valorIzq.type === tipoPrimitivo.RESP || valorDer.type === tipoPrimitivo.RESP){\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }else if((valorIzq.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.STRING) && this.tipoOperacion === operacionAritmetica.SUMA) {\r\n            return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.STRING };\r\n        }else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n           \r\n            if (this.tipoOperacion === operacionAritmetica.SUMA){\r\n                return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.RESTA){\r\n                return { value: (valorIzq.value - valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.MULT){\r\n                return { value: (valorIzq.value * valorDer.value) , type: tipoPrimitivo.NUMBER };;\r\n            }else if(this.tipoOperacion === operacionAritmetica.DIV){\r\n\r\n                if(Number(valorDer.value) >= 0){\r\n                    return { value: (valorIzq.value / valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: El valor \"+valorDer+\", debe ser mayor o igual que cero,  Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }else if (this.tipoOperacion === operacionAritmetica.MOD){\r\n                return  { value: (valorIzq.value % valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\nimport { Entorno } from '../../xmlAST/Entorno';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { tipoPrimitivo } from './Primitivo';\r\n\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements ExpressionXquery{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: ExpressionXquery,\r\n    public hijoDer: ExpressionXquery,\r\n    public tipoOperacion: operacionLogica,\r\n    public sym: string){}\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        if (this.hijoIzq != null && this.hijoDer != null){\r\n\r\n            let valorIzq = this.hijoIzq.executeXquery(entXquery, ent, simboloPadre);\r\n        \r\n            if (valorIzq.type === tipoPrimitivo.BOOL){\r\n\r\n                if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                    //console.log(\"pase por el corto circuito del and\")\r\n                    return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n                } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                    //console.log(\"pase por el corto circuito del or\")\r\n                    return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n                }\r\n                \r\n                let valorDer = this.hijoDer.executeXquery(entXquery, ent, simboloPadre);\r\n\r\n                if (valorDer.type === tipoPrimitivo.BOOL){\r\n\r\n                    if (this.tipoOperacion === operacionLogica.AND) {\r\n                        const result = valorIzq.value && valorDer.value;\r\n                        return { value: result, type: tipoPrimitivo.BOOL };\r\n                    }else if (this.tipoOperacion === operacionLogica.OR) {\r\n                        const result = valorIzq.value || valorDer.value;\r\n                        return { value: result, type: tipoPrimitivo.BOOL };\r\n                    }else {\r\n                        throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);;\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \"+valorDer.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorIzq.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"ERROR FATAL: no se pudo recuperar la consulta, linea: \"+this.line+\" column: \"+ this.column);\r\n        }\r\n\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        if (this.hijoIzq != null && this.hijoDer != null){\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n            texto = this.hijoIzq.GraficarAST(texto);\r\n            texto = this.hijoDer.GraficarAST(texto);\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n            return texto;\r\n        }else {\r\n            throw new Error(\"ERROR FATAL: no se pudo recuperar la consulta, linea: \"+this.line+\" column: \"+ this.column);\r\n        }\r\n    }\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso} from './Acceso';\r\nimport { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\n\r\nexport class Path implements ExpressionXquery{\r\n\r\n    salida: any[];\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public L_Accesos : Acceso [],\r\n    public tipoPath ?: string\r\n    ){\r\n        this.salida=[];\r\n    }   \r\n\r\n    \r\n    private validarAntecesores(): Acceso []{\r\n\r\n        let newL_Acc : Acceso[] = []\r\n        for (const acceso of this.L_Accesos) {\r\n            \r\n            if (acceso.tipoAcceso === 'padre'){\r\n                \r\n                if (newL_Acc.length >0){\r\n                    newL_Acc.pop()\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede Acceder a la raiz del arbol, lina: \"+acceso.line+\"column: \"+acceso.column);\r\n                }\r\n            }else {\r\n                newL_Acc.push(acceso)\r\n            }\r\n        }\r\n        return newL_Acc\r\n    }\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent : Entorno, simboloPadre?:Simbolo) :Retorno {\r\n        \r\n        this.salida = [];\r\n        this.L_Accesos = this.validarAntecesores();\r\n\r\n        if (this.tipoPath !== \"sub\"){\r\n\r\n            if (ent.listaEntornos.length > 0 && this.L_Accesos.length > 0){\r\n\r\n                if (ent.identificador === this.L_Accesos[0].id && this.L_Accesos[0].tipoAcceso === \"nodo\") {//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n        \r\n                    if (this.validarPredicadosRaiz(entXquery, ent, 0)) {\r\n\r\n                        if(this.L_Accesos.length >  1){ //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(entXquery, ent, 1); \r\n                        }else{\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                }else if (this.L_Accesos[0].tipoQuery === 'absoluta'){\r\n                    this.getQuery(entXquery, ent, 0);\r\n                }\r\n            }\r\n        }else {\r\n\r\n            if (this.L_Accesos.length > 0){\r\n                this.getQuery(entXquery, ent, 0, simboloPadre);\r\n            }else {\r\n                this.construirNodos(ent, \"\")\r\n            }\r\n        } \r\n        return {value: this.salida, type: tipoPrimitivo.RESP};\r\n    }\r\n\r\n    private getQuery(entXquery: EntornoXQuery, entPadre: Entorno, posActAcceso: number, simboloPadre?:Simbolo) {\r\n        \r\n        if(simboloPadre !== undefined ){ // si la consulta es una sub consulta y el padre es un atributo --> /@id[subconsulta]\r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\"){\r\n\r\n                if(this.L_Accesos.length < posActAcceso + 1){\r\n                    this.getQuery(entXquery, entPadre, posActAcceso + 1, simboloPadre);\r\n                }else{\r\n\r\n                    //if (this.tipoPath === \"sub\"){\r\n                        this.salida.push({value : simboloPadre.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING}) ;\r\n                    /*}else {\r\n                        this.salida.push(simboloPadre.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                    }*/\r\n                } \r\n            }else {\r\n                throw new Error(\"Nose puede acceder a un atributo: \" + this.L_Accesos[posActAcceso].id);\r\n            }  \r\n\r\n        }else { // si la consuta es una sub o una normal y el padre es un nodo  -----> /id/id || /id/@id || /id/. || /id/*               \r\n           \r\n            if (this.L_Accesos[posActAcceso].tipoAcceso === \"atributo\"){\r\n               \r\n                const atri = entPadre.getAtributo(this.L_Accesos[posActAcceso].id)\r\n                if(atri != null){\r\n\r\n                    if (this.validarPredicadosAtri(entXquery, entPadre, atri, posActAcceso)){\r\n                    \r\n                        if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entXquery, entPadre, posActAcceso + 1, atri); \r\n                        }else{\r\n\r\n                            //if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n                            /*}else{\r\n                                this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                            }*/\r\n                        }\r\n                    }\r\n                }else if(entPadre.listaEntornos.length > 0 && this.L_Accesos[posActAcceso].tipoQuery === 'absoluta') {\r\n                    \r\n                    for (const entChild of entPadre.listaEntornos ) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        this.getQuery(entXquery, entChild, posActAcceso);\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosAtributos\"){\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1){\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n                    \r\n                        this.construirTodosAtributos(entPadre);\r\n                        \r\n                    }else {\r\n    \r\n                        if (entPadre.listaSimbolos.length > 0){\r\n    \r\n                            for (const atri of entPadre.listaSimbolos){\r\n        \r\n                                if (this.validarPredicadosAtri(entXquery, entPadre, atri, posActAcceso)){\r\n                                   \r\n                                    //if (this.tipoPath === \"sub\"){\r\n                                    this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n                                    /*}else{\r\n                                        this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n                                    }*/\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    throw new Error(\"Error Semantico: no se puede mostrar todos los atributos del nodos descendientes ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso ==='texto'){\r\n\r\n                if (this.L_Accesos.length === posActAcceso + 1){\r\n\r\n                    if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n\r\n                        this.construirTodosTextos(entPadre);\r\n\r\n                    }else {\r\n                        \r\n                        if (entPadre.texto !== ''){\r\n                            //if (this.tipoPath === \"sub\"){\r\n                                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n                            /*}else {\r\n                                this.salida.push(entPadre.texto + '\\n');\r\n                            }*/\r\n                        }\r\n                    }\r\n                    \r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se puede mostrar el texto de los nodo descendientes ya que no se ah terminado la lista de accesos\");\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"actual\" ){\r\n\r\n                if(this.L_Accesos.length >  posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                    this.getQuery(entXquery, entPadre, posActAcceso + 1); \r\n                }else{\r\n                    this.construirNodos(entPadre, \"\")\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"todosNodos\"){\r\n\r\n                if(entPadre.listaEntornos.length > 0){\r\n                    \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n                        \r\n                        if (this.validarPredicadosNodos(entXquery, entPadre, entActual, posActAcceso)){\r\n                    \r\n                            if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                this.getQuery(entXquery, entActual, posActAcceso + 1); \r\n                            }else{\r\n                                this.construirNodos(entActual, \"\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else if (this.L_Accesos[posActAcceso].tipoAcceso === \"nodo\"){\r\n                \r\n                if(entPadre.listaEntornos.length > 0){\r\n                      \r\n                    for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n    \r\n                        if(entActual.identificador === this.L_Accesos[posActAcceso].id){//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n                    \r\n                            if (this.validarPredicadosNodos(entXquery, entPadre, entActual, posActAcceso)){\r\n        \r\n                                if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                                    this.getQuery(entXquery, entActual, posActAcceso + 1);\r\n                                }else{\r\n                                    this.construirNodos(entActual, \"\");\r\n                                }\r\n                            }\r\n                        }else if (this.L_Accesos[posActAcceso].tipoQuery === 'absoluta'){\r\n                            this.getQuery(entXquery, entActual, posActAcceso);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }else {\r\n                throw new Error(\"ERROR FATAL Semantico: El tipo; \"+this.L_Accesos[posActAcceso].tipoAcceso+\" del acceso: \"+this.L_Accesos[posActAcceso].tipoAcceso+\" no se reconoce como valido, \" + \r\n                \"linea: \"+this.L_Accesos[posActAcceso].line+\" comlumna: \"+this.L_Accesos[posActAcceso].column);\r\n            }   \r\n        }\r\n    }\r\n\r\n    private construirTodosTextos(entPadre:Entorno){\r\n        \r\n        if (entPadre.texto !== ''){\r\n            //if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n            /*}else {\r\n                this.salida.push(entPadre.texto + '\\n');\r\n            }*/\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosTextos(entActual);\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirTodosAtributos(entPadre:Entorno) {\r\n\r\n        for (const atri of entPadre.listaSimbolos){\r\n\r\n            //if (this.tipoPath === \"sub\"){\r\n                this.salida.push({value : atri.valor.replaceAll(\"\\\"\",\"\"), type: tipoPrimitivo.STRING});\r\n            /*}else{\r\n                this.salida.push(atri.valor.replaceAll(\"\\\"\",\"\") + \"\\n\");\r\n            }*/\r\n        }\r\n\r\n        if (entPadre.listaEntornos.length > 0){\r\n            \r\n            for (const entActual of entPadre.listaEntornos) {\r\n                this.construirTodosAtributos(entActual);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private construirNodos(entPadre:Entorno, tab : string){\r\n\r\n        //if (this.tipoPath === \"sub\"){\r\n            this.salida.push({value : entPadre , type: tipoPrimitivo.NODO})\r\n        /*}else {\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n            }\r\n\r\n            //construyo Nodos\r\n            if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if(entPadre.listaEntornos.length > 0){\r\n\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n            \r\n            } else{\r\n                this.salida.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n            }\r\n\r\n        }*/\r\n    }\r\n\r\n    private validarPredicadosAtri(entXquery: EntornoXQuery, entPadre: Entorno, simboloPadre:Simbolo, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].executeXquery(entXquery ,entPadre, simboloPadre);\r\n            if (result.value === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaSimbolos[result.value - 1] !== simboloPadre){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n            \r\n        }\r\n        return true;\r\n    } \r\n\r\n    private validarPredicadosNodos(entXquery: EntornoXQuery, entPadre: Entorno, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].executeXquery(entXquery ,entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validarPredicadosRaiz(entXquery: EntornoXQuery, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].executeXquery(entXquery ,entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if ( result.value !== 1){\r\n                    return false;\r\n                }\r\n            }else if (result.type === tipoPrimitivo.RESP){\r\n                \r\n                if (result.value.length === 0){\r\n                    return false;\r\n                } \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        if (this.tipoPath === \"relativa\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"/\\\"];\\n\";\r\n        } else if (this.tipoPath === \"absoluta\") {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"//\\\"];\\n\";\r\n        } else {\r\n            texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"sub\\\"];\\n\";\r\n        }\r\n        for (const key in this.L_Accesos) {\r\n            texto = this.L_Accesos[key].GraficarAST(texto);\r\n            if (this.line.toString() !== this.L_Accesos[key].line.toString() || this.column.toString() !== this.L_Accesos[key].column.toString()) {\r\n                texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"-> nodo\" + this.L_Accesos[key].line.toString() + \"_\" + this.L_Accesos[key].column.toString() + \";\\n\";\r\n            }\r\n        }\r\n        return texto;\r\n    }\r\n    /*private unirSalida () : string{\r\n\r\n        let salida : string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n    return {value: this.unirSalida(), type: tipoPrimitivo.STRING};*/\r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\nimport { EntornoXQuery } from '../AmbientesXquery/EntornoXQuery';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements ExpressionXquery{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: ExpressionXquery,\r\n    public hijoDer: ExpressionXquery,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public executeXquery(entXquery: EntornoXQuery, ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.executeXquery(entXquery, ent, simboloPadre);\r\n        let valorDer = this.hijoDer.executeXquery(entXquery, ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type === tipoPrimitivo.NODO && valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq.value.identificador, valDer.value.identificador)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }else if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                        if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valIzq.value.texto, valDer.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL}    \r\n                            }\r\n                        }\r\n                    }\r\n                    else if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                        if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                            \r\n                            if (this.validar(valDer.value.texto, valIzq.value)){\r\n                                return {value: true, type: tipoPrimitivo.BOOL}    \r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (this.validar(valIzq.value, valDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type === tipoPrimitivo.NODO){\r\n                        \r\n                    if (valIzq.value.listaEntornos.length === 0 && valIzq.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valIzq.value.texto, valorDer.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}    \r\n                        }\r\n                    }\r\n                }else {\r\n                   \r\n                    if (this.validar(valIzq.value, valorDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if ( valDer.type === tipoPrimitivo.NODO){\r\n\r\n                    if (valDer.value.listaEntornos.length === 0 && valDer.value.texto !== ''){\r\n                        \r\n                        if (this.validar(valDer.value.texto, valorIzq.value)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}    \r\n                        }\r\n                    }\r\n                }else {\r\n                    \r\n                    if (this.validar(valorIzq.value, valDer.value)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n            \r\n        } else {\r\n            return { value: this.validar(valorIzq.value, valorDer.value), type: tipoPrimitivo.BOOL}\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : String, valorDer: String): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq == valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq != valorDer;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq < valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq <= valorDer;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq > valorDer;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq >= valorDer;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n    public GraficarAST(texto:string):string {\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"[label=\\\"\" + this.sym.toString() + \"\\\"];\\n\";\r\n        texto = this.hijoIzq.GraficarAST(texto);\r\n        texto = this.hijoDer.GraficarAST(texto);\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoIzq.line + \"_\" + this.hijoIzq.column.toString() + \";\\n\";\r\n        texto += \"nodo\" + this.line.toString() + \"_\" + this.column.toString() + \"->nodo\" + this.hijoDer.line + \"_\" + this.hijoDer.column.toString() + \";\\n\";\r\n        return texto;\r\n    }\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { Return } from \"./Return\";\r\n\r\nexport class For implements ExpressionXquery{\r\n\r\n    constructor(\r\n        public line: Number,\r\n        public column: Number, \r\n        public idIn: string,\r\n        public idAt: string, \r\n        public select: ExpressionXquery,\r\n        public where: ExpressionXquery | null,\r\n        public orderBy: ExpressionXquery | null,   \r\n        public orden: string,\r\n        public ret: Return){}\r\n    \r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n        \r\n        var result : string= \"\";\r\n\r\n        var content: Retorno = this.select.executeXquery(entAct, RaizXML);\r\n        if (content.type === tipoPrimitivo.RESP){\r\n  \r\n            var nvoEnt: EntornoXQuery = new EntornoXQuery(entAct, \"sentencia for\");\r\n            for (const element of content.value) {\r\n                \r\n                nvoEnt.guaradarVar(this.idIn , element);\r\n                if (this.validarWhere(nvoEnt, RaizXML)){\r\n                    result += this.ret.executeXquery(nvoEnt, RaizXML).value;\r\n                }\r\n            }\r\n            return {value: result, type : tipoPrimitivo.STRING}\r\n            \r\n        }else {\r\n            throw new Error(\"Error semantico: la variable \"+ this.idIn + \" no es una variable iterable prveniente de una consulta, linea: \" +this.line + \"columna: \"+ this.column);\r\n        }\r\n    }\r\n\r\n    private validarWhere(entAct: EntornoXQuery, RaizXML: Entorno) : boolean{\r\n\r\n        var result  = this.where?.executeXquery(entAct, RaizXML)\r\n        if (result !== undefined){\r\n            \r\n            if (result.type === tipoPrimitivo.BOOL){\r\n                return result.value; \r\n            }else {\r\n                throw new Error(\"Error Semntico: la expresion del where es de tipo : \"+result.type.toString()+\" y debe ser de tipo boolean, linea: \" +this.line + \"columna: \"+ this.column);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../../xmlAST/Simbolo\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class If implements ExpressionXquery{\r\n\r\n    constructor(\r\n    public line:Number,\r\n    public column:Number,\r\n    public condicion: ExpressionXquery,\r\n    public exp : ExpressionXquery,\r\n    public elseif: ExpressionXquery | null){}\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno, simboloPadre?: Simbolo): Retorno {\r\n        \r\n        const condicion = this.condicion.executeXquery(entAct, RaizXML)\r\n        if (condicion.type !== tipoPrimitivo.BOOL){ \r\n            throw new Error(\"Error Semantico: la expresion del if es de tipo: \"+condicion.type+\" y debe ser tipo boolean, linea: \"+this.line+ \"column: \"+this.column);\r\n        }\r\n\r\n        if (condicion.value === true){\r\n            \r\n            const resultExp = this.exp.executeXquery(entAct, RaizXML);\r\n            return resultExp\r\n\r\n        }else {\r\n        \r\n            const elseif = this.elseif?.executeXquery(entAct, RaizXML); \r\n            if (elseif === undefined){\r\n                return {value : [], type: tipoPrimitivo.RESP}\r\n            }\r\n            return elseif;\r\n\r\n        }\r\n        \r\n    }\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { Return } from \"./Return\";\r\n\r\nexport class Let implements ExpressionXquery{\r\n\r\n    constructor (\r\n        public line: Number,\r\n        public column: Number,\r\n        public idVar: string,\r\n        public exp : ExpressionXquery, \r\n        public ret : Return){\r\n    }\r\n    \r\n    public executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n\r\n        if (!entAct.existeVar(this.idVar)){\r\n            \r\n            var content : Retorno =  this.exp.executeXquery(entAct, RaizXML); \r\n            entAct.guaradarVar(this.idVar, content);\r\n            \r\n        }else {\r\n            throw new Error(\"Error Semantico: Se encuentra en uso el id: \"+this.idVar+\", Linea: \"+this.line +\" Columna: \"+this.column );\r\n        }\r\n        return {value : this.ret.executeXquery(entAct, RaizXML).value, type: tipoPrimitivo.STRING}\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { Path } from \"../ExpresionesXpath/Path\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class MultiXpaths implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: number,\r\n        public column: number,\r\n        public paths : Path[]){}\r\n    \r\n\r\n    public executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n       \r\n        var content : Retorno[] = [];\r\n        for (const path of this.paths) {\r\n            ManejadorXquery.concatenar(content, path.executeXquery(entAct, RaizXML).value);\r\n        }\r\n        return {value: ManejadorXquery.buildXquery(content), type : tipoPrimitivo.STRING}\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import { ExpressionXquery, Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class Return implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: Number,\r\n        public column: Number, \r\n        public L_Exps: ExpressionXquery[]){}\r\n    \r\n\r\n    executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n       \r\n        var content : Retorno[] = [];\r\n        \r\n        for (const Xquery of this.L_Exps) {\r\n\r\n            const resultExp = Xquery.executeXquery(entAct, RaizXML)\r\n\r\n            if (resultExp.type === tipoPrimitivo.RESP){\r\n                ManejadorXquery.concatenar(content, resultExp.value);\r\n            }else {\r\n                content.push(resultExp);\r\n            }\r\n        }\r\n        return {value: ManejadorXquery.buildXquery(content), type : tipoPrimitivo.STRING}\r\n    }\r\n\r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { Retorno } from \"../../Interfaces/ExpressionXquery\";\r\nimport { ExpressionXquery } from \"../../Interfaces/ExpressionXquery\";\r\nimport { Entorno } from \"../../xmlAST/Entorno\";\r\nimport { EntornoXQuery } from \"../AmbientesXquery/EntornoXQuery\";\r\nimport { tipoPrimitivo } from \"../ExpresionesXpath/Primitivo\";\r\nimport { Path } from \"../ExpresionesXpath/Path\";\r\nimport { ManejadorXquery } from \"../manejadores/ManejadorXquery\";\r\n\r\nexport class XqueryPath implements ExpressionXquery{\r\n    \r\n    constructor(\r\n        public line: number,\r\n        public column: number,\r\n        public idVar: string,\r\n        public accesos: Path){}\r\n   \r\n    public executeXquery(entAct: EntornoXQuery, RaizXML: Entorno): Retorno {\r\n        \r\n        var content : Retorno[] = [];\r\n        \r\n        var varFind = entAct.getVar(this.idVar);  \r\n        if (varFind != null){\r\n\r\n            if (varFind.type === tipoPrimitivo.RESP){\r\n\r\n                for (const element of varFind.value) {\r\n\r\n                    if (element.type === tipoPrimitivo.NODO){\r\n                        ManejadorXquery.concatenar(content, this.accesos.executeXquery(entAct, element.value).value) ;\r\n                    }else {\r\n                        content.push(element);\r\n                    }\r\n                }\r\n                return {value : content, type: tipoPrimitivo.RESP}\r\n\r\n            }else if (varFind.type === tipoPrimitivo.NODO){\r\n                ManejadorXquery.concatenar(content, this.accesos.executeXquery(entAct, varFind.value).value);\r\n                return {value : content, type: tipoPrimitivo.RESP};\r\n            }else {\r\n                return varFind;\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: No se encuentra el id: \"+this.idVar+\", Linea: \"+this.line +\" Columna: \"+this.column );\r\n        }\r\n    }\r\n    \r\n    GraficarAST(texto: string): string {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n//return {value: ManejadorXquery.buildXquery(content), type : tipoPrimitivo.STRING}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar c3dgrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[25,35],$V2=[1,19],$V3=[1,25],$V4=[32,33],$V5=[30,35],$V6=[28,30],$V7=[1,52],$V8=[1,50],$V9=[1,51],$Va=[9,38,43,46,50,51],$Vb=[1,67],$Vc=[2,18],$Vd=[1,66],$Ve=[1,81],$Vf=[1,79],$Vg=[1,80],$Vh=[4,5,6,7,14,15,17,18,19,20,32],$Vi=[1,95],$Vj=[1,96],$Vk=[1,97],$Vl=[1,98],$Vm=[1,114],$Vn=[5,9,10],$Vo=[9,43,46,50,51];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"SIGNO\":3,\"+\":4,\"-\":5,\"*\":6,\"/\":7,\"VALOR\":8,\"id\":9,\"number\":10,\"[\":11,\"(\":12,\"int\":13,\")\":14,\"]\":15,\"COMPARACION\":16,\"=\":17,\"!\":18,\">\":19,\"<\":20,\"ASIGNACION\":21,\"INIT\":22,\"HEADER\":23,\"CONTENIDO\":24,\"EOF\":25,\"IMPORTS\":26,\"VARDEC\":27,\"#\":28,\".\":29,\"double\":30,\"TEMPDEC\":31,\";\":32,\",\":33,\"FUNCION\":34,\"void\":35,\"{\":36,\"CONTFUNC\":37,\"}\":38,\"ETIQUETA\":39,\"ETIQUETA2\":40,\"TEMPORAL\":41,\"IF\":42,\"return\":43,\"PRINTF\":44,\":\":45,\"goto\":46,\"CODMUERTO\":47,\"ETIQUETA3\":48,\"TEMPORAL2\":49,\"if\":50,\"printf\":51,\"dstring\":52,\"char\":53,\"sstring\":54,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"+\",5:\"-\",6:\"*\",7:\"/\",9:\"id\",10:\"number\",11:\"[\",12:\"(\",13:\"int\",14:\")\",15:\"]\",17:\"=\",18:\"!\",19:\">\",20:\"<\",25:\"EOF\",28:\"#\",29:\".\",30:\"double\",32:\";\",33:\",\",35:\"void\",36:\"{\",38:\"}\",43:\"return\",45:\":\",46:\"goto\",50:\"if\",51:\"printf\",52:\"dstring\",53:\"char\",54:\"sstring\"},\r\nproductions_: [0,[3,1],[3,1],[3,1],[3,1],[8,1],[8,1],[8,2],[8,7],[8,4],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[21,7],[21,4],[21,1],[22,3],[22,1],[23,2],[26,6],[26,8],[26,5],[26,7],[27,4],[27,3],[31,3],[31,6],[31,1],[31,4],[24,2],[24,1],[34,7],[37,2],[37,2],[37,2],[37,2],[37,3],[37,2],[37,5],[37,1],[37,1],[37,1],[37,2],[37,1],[37,4],[37,1],[41,6],[41,4],[39,2],[40,6],[40,5],[47,2],[47,2],[47,2],[47,3],[47,2],[47,5],[47,1],[47,1],[47,2],[47,1],[47,4],[47,1],[48,3],[49,6],[49,4],[42,9],[44,10],[44,10]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1: case 2: case 3: case 4: case 5: case 6: case 14: case 15: case 18:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 7: case 10: case 11: case 12: case 13:\r\nthis.$ = $$[$0-1]+$$[$0]\r\nbreak;\r\ncase 8: case 16:\r\nthis.$ = $$[$0-6]+$$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\r\nbreak;\r\ncase 9: case 17:\r\nthis.$ = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\r\nbreak;\r\ncase 19:\r\n\r\n        textoaux = texto;\r\n        texto = \"\";\r\n        Optim.GenerarGraphviz();\r\n        textrep = Optim.textGraphviz;\r\n        Optim.Reset();\r\n        return {Optimizado: textoaux, TextGraphviz: textrep};\r\n    \r\nbreak;\r\ncase 22: case 24:\r\ntexto += \"#\" + $$[$0-3] + \" <\" + $$[$0-1] + \">\\n\";\r\nbreak;\r\ncase 23: case 25:\r\ntexto += \"#\" + $$[$0-5] + \" <\" + $$[$0-3] + \".\" + $$[$0-1] + \">\\n\";\r\nbreak;\r\ncase 26:\r\n\r\n        texto += \"double \";\r\n        for(const key in $$[$0-1]) {\r\n            texto += $$[$0-1][key];\r\n        }\r\n        texto += \";\\n\";\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        texto += \"\\ndouble \";\r\n        for(const key in $$[$0-1]) {\r\n            texto += $$[$0-1][key];\r\n        }\r\n        texto += \";\\n\";\r\n    \r\nbreak;\r\ncase 28:\r\n$$[$0-2].push(\", \"+$$[$0]);this.$=$$[$0-2];\r\nbreak;\r\ncase 29:\r\n$$[$0-5].push(\", \"+$$[$0-3]+\"[\"+$$[$0-1]+\"]\");this.$=$$[$0-5];\r\nbreak;\r\ncase 30:\r\nthis.$=[$$[$0]]\r\nbreak;\r\ncase 31:\r\nthis.$=[$$[$0-3]+\"[\"+$$[$0-1]+\"]\"];\r\nbreak;\r\ncase 34:\r\n\r\n        texto += \"\\n\"+$$[$0-6]+\" \"+$$[$0-5]+$$[$0-4]+$$[$0-3]+\" \"+$$[$0-2]+\"\\n\";\r\n        for (const key in $$[$0-1]) {\r\n            texto += $$[$0-1][key];\r\n        }\r\n        texto += $$[$0]+\"\\n\";\r\n    \r\nbreak;\r\ncase 35: case 36: case 37: case 38: case 40: case 54: case 55: case 56: case 58:\r\n$$[$0-1].push($$[$0]);this.$=$$[$0-1];\r\nbreak;\r\ncase 39: case 57:\r\n$$[$0-2].push($$[$0-1]+$$[$0]+\"\\n\");this.$=$$[$0-2];\r\nbreak;\r\ncase 41: case 59:\r\n$$[$0-4].push($$[$0-3]+\"();\\n\");this.$=$$[$0-4];\r\nbreak;\r\ncase 42: case 43: case 44: case 46: case 48: case 60: case 61: case 63: case 65:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 45: case 62:\r\nthis.$=[$$[$0-1]+$$[$0]+\"\\n\"];\r\nbreak;\r\ncase 47: case 64:\r\nthis.$=[$$[$0-3]+\"();\\n\"];\r\nbreak;\r\ncase 49:\r\n\r\n        this.$ = Optim.Optimizar(new Asignacion($$[$0-5],$$[$0-3],$$[$0-2],$$[$0-1]));\r\n    \r\nbreak;\r\ncase 50: case 68:\r\nthis.$=$$[$0-3]+\" \"+$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 51:\r\nthis.$=$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 52:\r\n\r\n        this.$=$$[$0-5]+\" \"+$$[$0-4]+$$[$0-3]+\"\\n\"+$$[$0-1]+$$[$0]+\"\\n\";\r\n        for (const key in $$[$0-2]) {\r\n            texto += Optim.Optimizar($$[$0-2][key]);\r\n        }\r\n    \r\nbreak;\r\ncase 53:\r\nthis.$=$$[$0-4]+\" \"+$$[$0-3]+$$[$0-2]+\"\\n\"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 66:\r\nthis.$=$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 67:\r\nthis.$=$$[$0-5]+\" \"+$$[$0-4]+\" \"+$$[$0-3]+\" \"+$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\ncase 69:\r\n\r\n        this.$= Optim.Optimizar(new Condicional($$[$0-6],$$[$0-5],$$[$0-4])) +$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\"\\n\";\r\n    \r\nbreak;\r\ncase 70: case 71:\r\nthis.$=$$[$0-9]+$$[$0-8]+$$[$0-7]+$$[$0-6]+\" \"+$$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+\"\\n\";\r\nbreak;\r\n}\r\n},\r\ntable: [{22:1,23:2,25:[1,3],26:4,28:[1,5]},{1:[3]},{24:6,34:7,35:$V0},{1:[2,20]},{27:9,28:[1,10],30:[1,11]},{9:[1,12]},{25:[1,13],34:14,35:$V0},o($V1,[2,33]),{9:[1,15]},{30:[1,16],35:[2,21]},{9:[1,17]},{9:$V2,31:18},{20:[1,20]},{1:[2,19]},o($V1,[2,32]),{12:[1,21]},{9:$V2,31:22},{20:[1,23]},{32:[1,24],33:$V3},o($V4,[2,30],{11:[1,26]}),{9:[1,27]},{14:[1,28]},{32:[1,29],33:$V3},{9:[1,30]},o($V5,[2,27]),{9:[1,31]},{10:[1,32]},{19:[1,33],29:[1,34]},{36:[1,35]},o($V5,[2,26]),{19:[1,36],29:[1,37]},o($V4,[2,28],{11:[1,38]}),{15:[1,39]},o($V6,[2,24]),{9:[1,40]},{9:[1,47],21:49,37:41,39:42,40:48,41:43,42:44,43:[1,45],44:46,46:$V7,50:$V8,51:$V9},o($V6,[2,22]),{9:[1,53]},{10:[1,54]},o($V4,[2,31]),{19:[1,55]},{9:[1,63],21:49,38:[1,56],39:57,40:58,41:59,42:60,43:[1,61],44:62,46:$V7,50:$V8,51:$V9},o($Va,[2,42]),o($Va,[2,43]),o($Va,[2,44]),{32:[1,64]},o($Va,[2,46]),{11:$Vb,12:[1,65],17:$Vc,45:$Vd},o($Va,[2,48]),{17:[1,68]},{12:[1,69]},{12:[1,70]},{9:[1,71]},{19:[1,72]},{15:[1,73]},o($V6,[2,25]),o($V1,[2,34]),o($Va,[2,35]),o($Va,[2,36]),o($Va,[2,37]),o($Va,[2,38]),{32:[1,74]},o($Va,[2,40]),{11:$Vb,12:[1,75],17:$Vc,45:$Vd},o($Va,[2,45]),{14:[1,76]},o($Va,[2,51]),{5:$Ve,8:78,9:$Vf,10:$Vg,12:[1,77]},{5:$Ve,8:82,9:$Vf,10:$Vg},{5:$Ve,8:83,9:$Vf,10:$Vg},{52:[1,84],54:[1,85]},{32:[1,86]},o($V6,[2,23]),o($V4,[2,29]),o($Va,[2,39]),{14:[1,87]},{32:[1,88]},{13:[1,89]},{15:[1,90]},o($Vh,[2,5],{11:[1,91]}),o($Vh,[2,6]),{10:[1,92]},{3:93,4:$Vi,5:$Vj,6:$Vk,7:$Vl,32:[1,94]},{16:99,17:[1,100],18:[1,101],19:[1,102],20:[1,103]},{33:[1,104]},{33:[1,105]},{9:[1,107],21:113,42:109,43:[1,110],44:111,46:$Vm,47:106,48:112,49:108,50:$V8,51:$V9},{32:[1,115]},o($Va,[2,47]),{14:[1,116]},{17:[2,17]},{5:$Ve,8:118,9:$Vf,10:$Vg,12:[1,117]},o($Vh,[2,7]),{5:$Ve,8:119,9:$Vf,10:$Vg},o($Va,[2,50]),o($Vn,[2,1]),o($Vn,[2,2]),o($Vn,[2,3]),o($Vn,[2,4]),{5:$Ve,8:120,9:$Vf,10:$Vg},{17:[1,121]},{17:[1,122]},o($Vn,[2,15],{17:[1,123]}),o($Vn,[2,14],{17:[1,124]}),{12:[1,125]},{12:[1,126]},{9:[1,127],21:113,42:130,43:[1,131],44:132,46:$Vm,48:128,49:129,50:$V8,51:$V9},{11:$Vb,12:[1,134],17:$Vc,45:[1,133]},o($Vo,[2,60]),o($Vo,[2,61]),{32:[1,135]},o($Vo,[2,63]),o($Vo,[2,65]),{17:[1,136]},{9:[1,137]},o($Va,[2,41]),{5:$Ve,8:138,9:$Vf,10:$Vg},{13:[1,139]},{15:[1,140]},{32:[1,141]},{14:[1,142]},o($Vn,[2,10]),o($Vn,[2,11]),o($Vn,[2,12]),o($Vn,[2,13]),{53:[1,143]},{53:[1,144]},{11:$Vb,12:[1,146],17:$Vc,45:[1,145]},o($Vo,[2,54]),o($Vo,[2,55]),o($Vo,[2,56]),{32:[1,147]},o($Vo,[2,58]),o($Va,[2,53]),{14:[1,148]},o($Vo,[2,62]),{5:$Ve,8:149,9:$Vf,10:$Vg},{32:[1,150]},{15:[1,151]},{14:[1,152]},o($Vh,[2,9]),o($Va,[2,49]),{46:[1,153]},{14:[1,154]},{14:[1,155]},o($Va,[2,52]),{14:[1,156]},o($Vo,[2,57]),{32:[1,157]},{3:158,4:$Vi,5:$Vj,6:$Vk,7:$Vl,32:[1,159]},o($Vo,[2,66]),{17:[2,16]},{5:$Ve,8:160,9:$Vf,10:$Vg},{9:[1,161]},{5:$Ve,8:162,9:$Vf,10:$Vg},{5:$Ve,8:163,9:$Vf,10:$Vg},{32:[1,164]},o($Vo,[2,64]),{5:$Ve,8:165,9:$Vf,10:$Vg},o($Vo,[2,68]),{15:[1,166]},{32:[1,167]},{14:[1,168]},{14:[1,169]},o($Vo,[2,59]),{32:[1,170]},o($Vh,[2,8]),o($Va,[2,69]),{32:[1,171]},{32:[1,172]},o($Vo,[2,67]),o($Va,[2,70]),o($Va,[2,71])],\r\ndefaultActions: {3:[2,20],13:[2,19],90:[2,17],151:[2,16]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {Asignacion} = require(\"../Optimizador/Asignacion\");\r\n    const {Condicional} = require(\"../Optimizador/Condicional\");\r\n    const {OptimizadorMirilla} = require(\"../Optimizador/OptimizadorMirilla\");\r\n    var texto = \"\";\r\n    var textoaux = \"\";\r\n    var Optim = new OptimizadorMirilla();\r\n    var textrep = \"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/*skip single line comments*/\r\nbreak;\r\ncase 1:/*skip whitespace*/\r\nbreak;\r\ncase 2:/*skip multi line comments*/\r\nbreak;\r\ncase 3:return 45;\r\nbreak;\r\ncase 4:return 17;\r\nbreak;\r\ncase 5:return 4;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 6;\r\nbreak;\r\ncase 8:return 7;\r\nbreak;\r\ncase 9:return 32;\r\nbreak;\r\ncase 10:return 28;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 19;\r\nbreak;\r\ncase 13:return 29;\r\nbreak;\r\ncase 14:return 11;\r\nbreak;\r\ncase 15:return 15;\r\nbreak;\r\ncase 16:return 33;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:return 14;\r\nbreak;\r\ncase 19:return 36;\r\nbreak;\r\ncase 20:return 38;\r\nbreak;\r\ncase 21:return 18;\r\nbreak;\r\ncase 22:return '%';\r\nbreak;\r\ncase 23:return 30;\r\nbreak;\r\ncase 24:return 35;\r\nbreak;\r\ncase 25:return 43;\r\nbreak;\r\ncase 26:return 13;\r\nbreak;\r\ncase 27:return 50;\r\nbreak;\r\ncase 28:return 46;\r\nbreak;\r\ncase 29:return 51;\r\nbreak;\r\ncase 30:return 53;\r\nbreak;\r\ncase 31:return 52;\r\nbreak;\r\ncase 32:return 54;\r\nbreak;\r\ncase 33:return 9;\r\nbreak;\r\ncase 34:return 10;\r\nbreak;\r\ncase 35:return 'random';\r\nbreak;\r\ncase 36:return 25;\r\nbreak;\r\ncase 37:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[/][/][^\\n]*)/i,/^(?:\\s+)/i,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i,/^(?::)/i,/^(?:=)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:;)/i,/^(?:#)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\.)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:,)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:!)/i,/^(?:%)/i,/^(?:double\\b)/i,/^(?:void\\b)/i,/^(?:return\\b)/i,/^(?:int\\b)/i,/^(?:if\\b)/i,/^(?:goto\\b)/i,/^(?:printf\\b)/i,/^(?:char\\b)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = c3dgrammar;\r\nexports.Parser = c3dgrammar.Parser;\r\nexports.parse = function () { return c3dgrammar.parse.apply(c3dgrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Entorno } from \"../xmlAST/Entorno\";\r\nimport { traduccion } from './traduccion';\r\n\r\nexport function traducirXml(ast) {\r\n    traducirXmlRecursive(ast[0]);\r\n    //printText(ast[0]);\r\n}\r\n//TRADUCCION DE XML********************************************\r\nexport function traducirXmlRecursive(raiz: Entorno) {\r\n    traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n    traduccion.stackCounter++;\r\n    //traduccion.t++;\r\n    raiz.SP_ID = traduccion.stackCounter;\r\n    traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n    traduccion.setTranslate(\"\");\r\n    traduccion.setTranslate(\"//Identificador de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n    for (let i = 0; i < raiz.identificador.length; i++) {\r\n        traduccion.setTranslate(\"heap[(int)H] = \" + raiz.identificador.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.identificador[i].toString());\r\n        traduccion.setTranslate(\"H = H + 1;\");\r\n        if (i + 1 === raiz.identificador.length) {\r\n            traduccion.setTranslate(\"heap[(int)H] = -1;\"  + \"\\t\\t//FIN DE CADENA\");\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n        }\r\n    }\r\n    if (raiz.texto.length!==0) {\r\n        traduccion.stackCounter++;\r\n        raiz.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"\\n\");\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Texto de nodo: \" + raiz.identificador.toString() + \"\\t--------------\");\r\n        for (let i = 0; i < raiz.texto.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + raiz.texto.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + raiz.texto[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === raiz.texto.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    for (const simbolo of raiz.listaSimbolos) {\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_ID = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Simbolo \" + simbolo.identificador.toString() + \" de etiqueta: \" + raiz.identificador.toString() + \"\\t--------------\")\r\n        for (let i = 0; i < simbolo.identificador.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.identificador.charCodeAt(i) + \";\"  + \"\\t\\t//Caracter \" + simbolo.identificador[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.identificador.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n        simbolo.valor=simbolo.valor.replaceAll(\"\\\"\",\"\");\r\n        simbolo.valor=simbolo.valor.replaceAll(\"'\",\"\");\r\n        traduccion.stackCounter++;\r\n        simbolo.SP_VAL = traduccion.stackCounter;\r\n        traduccion.setTranslate(\"//Posicion en stack\\t--------------\");\r\n        traduccion.setTranslate(\"stack[\" + traduccion.stackCounter.toString() + \"] = \" + \"H;\");\r\n        traduccion.setTranslate(\"\");\r\n        traduccion.setTranslate(\"//Valor de \" + simbolo.identificador + \"\\t--------------\");\r\n        for (let i = 0; i < simbolo.valor.length; i++) {\r\n            traduccion.setTranslate(\"heap[(int)H] = \" + simbolo.valor.charCodeAt(i) + \";\" + \"\\t\\t//Caracter \" + simbolo.valor[i].toString());\r\n            traduccion.setTranslate(\"H = H + 1;\");\r\n            if (i + 1 === simbolo.valor.length) {\r\n                traduccion.setTranslate(\"heap[(int)H] = -1;\" + \"\\t\\t//FIN DE CADENA\");\r\n                traduccion.setTranslate(\"H = H + 1;\");\r\n            }\r\n        }\r\n    }\r\n    traduccion.setTranslate(\"\\n\");\r\n    for (const key in raiz.listaEntornos) {\r\n        //traduccion.stackCounter++;\r\n        traducirXmlRecursive(raiz.listaEntornos[key]);\r\n    }\r\n}\r\n//CREACION DEL METODO printString******************************\r\n/*export function createPrintText() {\r\n    traduccion.setPrintString(\"//Metodo printString\\t--------------\");\r\n    traduccion.setPrintString(\"void printString() {\");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = S+1; \");\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = stack[(int)t\"+(traduccion.t-1).toString()+\"];\");\r\n    \r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\"); //L0\r\n    traduccion.etiquetaCounter++;\r\n    traduccion.t++;\r\n    traduccion.setPrintString(\"t\"+traduccion.t+\" = heap[(int)t\"+(traduccion.t-1)+\"];\");\r\n    traduccion.setPrintString(\"if(t\"+traduccion.t+\" == -1) goto L\"+traduccion.etiquetaCounter+\";\"); //L1\r\n    traduccion.setPrintString(\"printf(\\\"%c\\\", (char)t\"+traduccion.t+\");\");\r\n    traduccion.setPrintString(\"t\"+(traduccion.t-1)+\" = t\"+(traduccion.t-1)+\"+1;\");\r\n    traduccion.setPrintString(\"goto L\"+(traduccion.etiquetaCounter-1)+\";\");\r\n    traduccion.setPrintString(\"L\"+traduccion.etiquetaCounter+\":\");\r\n    traduccion.setPrintString(\"return;\");\r\n    traduccion.setPrintString(\"}\");\r\n    traduccion.setPrintString(\"\");\r\n    //traduccion.printString = true;\r\n}*/\r\n//LLAMADA AL METODO printString********************************\r\nexport function printText(raiz: Entorno) {\r\n    //if (traduccion.printString===false) {createPrintText();}\r\n    if (raiz.texto!==\"\") {\r\n        traduccion.setTranslate(\"//Imrpimir texto de: \" + raiz.identificador + \"\\t--------------\")\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = stack[(int)\"+raiz.SP_VAL+\"];\");\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t+\" = t\"+traduccion.t+\" + 1;\");\r\n        traduccion.setTranslate(\"stack[(int)t\"+traduccion.t+\"] = t\"+(traduccion.t-1)+\";\");\r\n        traduccion.t++;\r\n        traduccion.t++;\r\n        traduccion.setTranslate(\"S = S + \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printString();\");\r\n        traduccion.setTranslate(\"t\"+traduccion.t +\" = stack[(int)S];\");\r\n        traduccion.setTranslate(\"S = S - \"+traduccion.stackCounter+\";\");\r\n        traduccion.setTranslate(\"printf(\\\"%c\\\", (char)10);\");\r\n        traduccion.setTranslate(\"\");\r\n        \r\n    }\r\n    /*for (const r of raiz.listaEntornos) {\r\n        printText(r);\r\n    }*/\r\n}\r\n//TRADUCCION DE CONSULTA XPATH*********************************\r\nexport function TraducirXPATH(query) {\r\n    createConsultaXPATH();\r\n    \r\n}\r\n//CREACION DEL METODO ConsultaXPATH****************************\r\nexport function createConsultaXPATH() {\r\n    traduccion.setConsultaXPATH(\"//Metodo ConsultaXPATH\\t--------------\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"void ConsultaXPATH() {\");\r\n    traduccion.setConsultaXPATH(\"}\");\r\n    traduccion.setConsultaXPATH(\"\");\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { traducirXml, TraducirXPATH } from \"../Traduccion/xml3d\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\nimport { traduccion } from '../Traduccion/traduccion';\r\nimport { EntornoXQuery } from '../xqueryAST/AmbientesXquery/EntornoXQuery';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\nconst parseXQuery = require('../Grammar/xQueryGrammar');\r\nconst parseC3D = require('../Grammar/C3DGrammar');\r\n\r\n\r\n\r\nconst utf8 = require('utf8');\r\n\r\nexport default class Main extends Component {\r\n\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        xquery: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repErrorXPATH: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: '',\r\n        repOptimizaciones: ''\r\n    }\r\n\r\n    parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let RepErrorXPATHASC = '';\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n        //XML------------------------------------------------------------------------\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            traducirXml(ast);\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n\r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        //XPATH---------------------------------------------------------------------------\r\n        try {\r\n            const querys = parseXPATH.parse(this.state.xpath)\r\n            var querysXpath = querys.xpath;\r\n            console.log(querysXpath);\r\n            var erroresXpath = querys.listaErrores;\r\n            //REPORTE AST y ERRORES PARA XPATH************************************************************\r\n            if (erroresXpath.length === 0) {\r\n                for (const key in querysXpath) {\r\n                    texto = querysXpath[key].GraficarAST(texto);\r\n                    if (indice < querysXpath.length) {\r\n                        texto += \"nodo\" + key.toString() + \"[label=\\\"|\\\"];\\n\"\r\n                        texto += \"nodo\" + querysXpath[key].line.toString() + \"_\" + querysXpath[key].column.toString() + \"->nodo\" + key.toString() + \";\\n\";\r\n                        texto += \"nodo\" + key.toString() + \"->nodo\" + querysXpath[indice].line.toString() + \"_\" + querysXpath[indice].column.toString() + \";\\n\";\r\n                        indice++;\r\n                    }\r\n                }\r\n                this.setState({\r\n                    repAstXpath: \"digraph G {\" + texto + \"}\",\r\n                });\r\n            } else {\r\n                console.log(erroresXpath.length)\r\n                this.setState({\r\n                    repErrorXPATH: \"digraph G {\" + crearTextoReporteErrorXML(erroresXpath, RepErrorXPATHASC) + \"}\"\r\n                })\r\n            }\r\n\r\n            console.log(texto);\r\n\r\n            this.setState({\r\n                repAstXpath: \"digraph G {\" + texto + \"}\",\r\n            });\r\n\r\n            //EJECUCION DE XPATH----------------------------------------------------------------------------------------------------------------------------------------------\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querysXpath) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                consoleResult: \"//CONSULTA-----------------\\n\\n/*\\n\" + salida + \"*/\\n\\n//TRADUCCION-----------------\\n\\n\" + traduccion.getTranslate(),\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //TRADUCCION DE XPATH----------------------------------------------------------------------------------------------------------------------------------------------\r\n    traducir = () => {\r\n\r\n        if (this.state.xml === \"\") {\r\n            return;\r\n        }\r\n\r\n        const result = parser.parse(this.state.xml);\r\n        const querys = parseXPATH.parse(this.state.xpath);\r\n        var querysXpath = querys.xpath;\r\n        var ast = result.ast;\r\n        var respuesta = \"\";\r\n        console.log(querysXpath);\r\n        traducirXml(ast);\r\n        for (const query of querysXpath) {\r\n            try {\r\n                respuesta += query.execute(ast[0]).value;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        this.setState({\r\n            consoleResult: \"//CONSULTA-----------------\\n\\n/*\\n\" + respuesta + \"*/\\n\\n//TRADUCCION-----------------\\n\\n\" + traduccion.getTranslate(),\r\n        });\r\n    }\r\n\r\n    //METODO PARA QUE DEIVID EJECUTE XQUERY################################################################\r\n    executeXquery = () => {\r\n\r\n        const result = parser.parse(this.state.xml)\r\n        var ast = result.ast;\r\n\r\n        const astXquery = parseXQuery.parse(this.state.xquery);\r\n        var salida = \"\";\r\n\r\n        var nvoEntorno = new EntornoXQuery(null, \"global\");\r\n\r\n        for (const xquery of astXquery) {\r\n            try {\r\n                salida += xquery.executeXquery(nvoEntorno, ast[0]).value + \"\\n\";\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        this.setState({\r\n            consoleResult: salida,\r\n        });\r\n\r\n    }\r\n    //######################################################################################################\r\n\r\n    optimizar = () => {\r\n        //const optimizado = parseC3D.parse(this.state.xml);\r\n        const optimizado = parseC3D.parse(this.state.consoleResult);\r\n        this.setState({\r\n            consoleResult: \"//OPTIMIZACION-----------------\\n\" + optimizado.Optimizado,\r\n        });\r\n        this.setState({\r\n            repOptimizaciones: \"digraph G {\" + optimizado.TextGraphviz + \"}\",\r\n        });\r\n    }\r\n\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    handleFileChangeXpath = file => {\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XPath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXPATH\r\n            })\r\n        } else if (e.target.value === \"Reporte de Optimizaciones\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repOptimizaciones\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"XPATH AREA\"\r\n                        value={this.state.xpath}\r\n                        onChange={(e: any) => {\r\n                            this.setState({\r\n                                xpath: e.target.value\r\n                            })\r\n                        }} />\r\n\r\n                    <br />\r\n\r\n                    <Row>\r\n\r\n                        <Col xs={6} md={3}>\r\n                            <Button variant=\"primary\" onClick={this.parse}>TRANSALATE XPATH</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={3}>\r\n                            <Button variant=\"primary\" onClick={this.traducir}>TRANSALATE XQUERY</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={3}>\r\n                            <Button variant=\"primary\" onClick={this.executeXquery}>EXECUTE XQUERY</Button>\r\n                        </Col>\r\n                        <Col xs={12} md={3}>\r\n                            <Button variant=\"primary\" onClick={this.optimizar}>OPTIMIZE</Button>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                    <br />\r\n                    <Row>\r\n                        <Col xs={12} md={0}>\r\n\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                                this.setState({\r\n                                    xml: e.target.value\r\n                                })\r\n                            }} />\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <Form.Control as=\"textarea\" placeholder=\"XQUERY AREA\" rows={15} value={this.state.xquery} onChange={(e: any) => {\r\n                                this.setState({\r\n                                    xquery: e.target.value\r\n                                })\r\n                            }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST XPath</option>\r\n                            <option>Reporte de errores XPath</option>\r\n                            <option>Reporte de Optimizaciones</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={30} value={this.state.consoleResult} onChange={(e: any) => {\r\n                        this.setState({\r\n                            consoleResult: e.target.value\r\n                        })\r\n                    }} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/main\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/tytusx/20211SVAC/G06\">\r\n        <Route path=\"/\" exact component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import {Asignacion} from \"../Optimizador/Asignacion\";\r\nimport {Condicional} from \"../Optimizador/Condicional\";\r\nimport {Optimizado} from \"../Optimizador/Optimizado\";\r\n\r\nvar asigact;\r\nvar val1 = 0;\r\nvar val2 = 0;\r\n\r\nexport class OptimizadorMirilla{\r\n    textGraphviz:string;\r\n    Resultado:string;\r\n    ReporteCodigo:Array<Optimizado>;\r\n    NuevoVal:string;\r\n    constructor(){\r\n        this.textGraphviz = \"\";\r\n        this.Resultado = \"\";\r\n        this.ReporteCodigo = [];\r\n        this.NuevoVal = \"\";\r\n    }\r\n\r\n    Optimizar(Objeto:any) {\r\n        asigact = Objeto;\r\n        if(Objeto instanceof Asignacion) {\r\n            if (!this.Regla6_7_8_9() && !this.Regla10_11_12_13() && !this.Regla14() && !this.Regla15() && !this.Regla16()) {\r\n                return Objeto.indice + \" = \" + Objeto.operador1 + \" \" + Objeto.signo + \" \" + Objeto.operador2 + \";\\n\";\r\n            } else {\r\n                return this.NuevoVal;\r\n            }\r\n        } else if (typeof Objeto === 'string') {\r\n            this.Regla1();\r\n            return this.NuevoVal;\r\n        } else if (Objeto instanceof Condicional)   {\r\n            if (!this.Regla3()) {\r\n                return \"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\") \";\r\n            } else {\r\n                return this.NuevoVal;\r\n            }\r\n        }\r\n    }\r\n\r\n    Reset() {\r\n        asigact = \"\";\r\n        this.NuevoVal = \"\";\r\n        this.ReporteCodigo = [];\r\n    }\r\n\r\n    Regla1()    {\r\n        this.ReporteCodigo.push(new Optimizado(\"1\",asigact,\"Se elimina la instruccion\"));\r\n        this.NuevoVal = \"\";\r\n        return false;\r\n    }\r\n\r\n    Regla2()    {\r\n        return false;\r\n    }\r\n    \r\n    Regla3()    {\r\n        try {\r\n            val1 = Number(asigact.operando1);\r\n            val2 = Number(asigact.operando2);\r\n            if(!Number.isNaN(val1) && !Number.isNaN(val2)) {\r\n                if(asigact.comparacion === \"==\") {\r\n                    if (val1 === val2) {\r\n                        this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                        this.NuevoVal = \"\";\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                } else if (asigact.comparacion === \"!=\") {\r\n                    if (val1 !== val2) {\r\n                        this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                        this.NuevoVal = \"\";\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                } else if (asigact.comparacion === \">=\") {\r\n                    if (val1 >= val2) {\r\n                        this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                        this.NuevoVal = \"\";\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                } else if (asigact.comparacion === \"<=\") {\r\n                    if (val1 <= val2) {\r\n                        this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                        this.NuevoVal = \"\";\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                } else if (asigact.comparacion === \"<\") {\r\n                    if (val1 < val2) {\r\n                        this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                        this.NuevoVal = \"\";\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                } else if (asigact.comparacion === \">\") {\r\n                    if (val1 > val2) {\r\n                        this.ReporteCodigo.push(new Optimizado(\"3\",\"if(\"+asigact.operando1+asigact.comparacion+asigact.operando2+\")\",\"Se elimina la instruccion\"));\r\n                        this.NuevoVal = \"\";\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n            \r\n            return false;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    Regla4()    {\r\n        return false;\r\n    }\r\n    \r\n    Regla5()    {\r\n        return false;\r\n    }\r\n    \r\n    Regla6_7_8_9()    {\r\n        if (asigact.indice === asigact.operador1) {\r\n            if (asigact.operador2 === \"0\" && asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"6\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"-\" && asigact.operador2 === \"0\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"7\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"*\" && asigact.operador2 === \"1\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"8\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"/\" && asigact.operador2 === \"1\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"9\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            }\r\n            return false;\r\n        } else if (asigact.indice === asigact.operador2) {\r\n            if (asigact.operador1 === \"0\" && asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"6\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            } else if (asigact.signo === \"*\" && asigact.operador1 === \"1\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"8\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,\"Se elimina la instruccion\"));\r\n                this.NuevoVal = \"\";\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla10_11_12_13()    {\r\n        if (asigact.operador2 === \"0\" && asigact.operador1 !== asigact.indice) {\r\n            if (asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"10\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            } else if (asigact.signo === \"-\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"11\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            } \r\n            return false;\r\n        } else if (asigact.operador1 === \"0\" && asigact.operador2 !== asigact.indice) {\r\n            if (asigact.signo === \"+\") {\r\n                this.ReporteCodigo.push(new Optimizado(\"10\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador2 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador2 + \";\\n\";\r\n                return true;\r\n            } \r\n            return false;\r\n        } else if (asigact.operador2 === \"1\" && asigact.operador1 !== asigact.indice) {\r\n            if (asigact.signo === \"*\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"12\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            } else if (asigact.signo === \"/\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"13\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \";\\n\";\r\n                return true;\r\n            }\r\n        } else if (asigact.operador1 === \"1\" && asigact.operador2 !== asigact.indice) {\r\n            if (asigact.signo === \"*\" ) {\r\n                this.ReporteCodigo.push(new Optimizado(\"12\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador2 + \";\"));\r\n                this.NuevoVal = asigact.indice + \" = \" + asigact.operador2 + \";\\n\";\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla14()    {\r\n        if (asigact.operador2 === \"2\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"14\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador1 + \"*\" + asigact.operador1 + \";\"));\r\n            this.NuevoVal = asigact.indice + \" = \" + asigact.operador1 + \" \" + asigact.signo + \" \" + asigact.operador1 + \";\\n\";\r\n            return true;\r\n        } else if (asigact.operador1 === \"2\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"14\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=\" + asigact.operador2 + \"*\" + asigact.operador2 + \";\"));\r\n            this.NuevoVal = asigact.indice + \" = \" + asigact.operador2 + \" \" + asigact.signo + \" \" + asigact.operador2 + \";\\n\";\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla15()    {\r\n        if (asigact.operador2 === \"0\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"15\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=0;\"));\r\n            this.NuevoVal = asigact.indice + \" = 0;\\n\";\r\n            return true;\r\n        } else if (asigact.operador1 === \"0\" && asigact.signo === \"*\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"15\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=0;\"));\r\n            this.NuevoVal = asigact.indice + \" = 0;\\n\";\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    Regla16()    {\r\n        if (asigact.operador1 === \"0\" && asigact.signo === \"/\") {\r\n            this.ReporteCodigo.push(new Optimizado(\"16\",asigact.indice + \"=\" + asigact.operador1 + asigact.signo + asigact.operador2,asigact.indice + \"=0;\"));\r\n            this.NuevoVal = asigact.indice + \" = 0;\\n\";\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    GenerarGraphviz() {\r\n        console.log(this.ReporteCodigo);\r\n        this.textGraphviz = \"\";\r\n        this.textGraphviz += \"node0[shape=record label=\\\"{Numero\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + key;\r\n        }\r\n        this.textGraphviz += \"}|{Regla\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + this.ReporteCodigo[key].regla;\r\n        }\r\n        this.textGraphviz += \"}|{Original\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + this.ReporteCodigo[key].original;\r\n        }\r\n        this.textGraphviz += \"}|{Optimizado\";\r\n        for (const key in this.ReporteCodigo) {\r\n            this.textGraphviz += \"|\" + this.ReporteCodigo[key].optimizado;\r\n        }\r\n        this.textGraphviz += \"}\\\"];\";\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","export class Optimizado{\r\n    regla:string;\r\n    original:string;\r\n    optimizado:string;\r\n\r\n    constructor(regla:string,original:string,signo:string){\r\n        this.regla = regla;\r\n        this.original = original;\r\n        this.optimizado = signo;\r\n    }\r\n\r\n}"],"sourceRoot":""}