{"version":3,"sources":["Analizador/Expresiones/Primitiva.js","Analizador/XPath/Predicate.js","Analizador/AST/Entorno.js","Analizador/Gramatica/XML_GramaticaAsc.js","Analizador/Gramatica/XML_GramaticaDesc.js","Analizador/Gramatica/XPath_GramaticaAsc.js","Analizador/Gramatica/XPath_GramaticaDesc.js","Analizador/XPath/Nodo.js","Components/Editor.js","Analizador/indexAnalizador.js","Components/App.js","index.js","Analizador/AST/Tipo.js","Analizador/Reporte/CST.js","Analizador/AST/Simbolo.js","Analizador/XML/Objeto.js","Analizador/XML/Atributo.js","Analizador/Global/Error.js","Analizador/Global/ListaError.js","Analizador/Expresiones/Operacion.js","Analizador/XPath/Consulta.js","Analizador/Reporte/Nodo.js"],"names":["TipoPrim","Primitiva","valor","tipo","linea","columna","this","ent","IDENTIFIER","existeSimbolo","obtenerSimbolo","ATRIBUTO","FUNCION","entTemporal","Entorno","padre","tsimbolos","forEach","e","elem","getTipo","Tipo","ETIQUETA","getNombre","nombre","c2","aux","agregarSimbolo","CONSULTA","tempConsulta","Consulta","ejecutar","length","toLowerCase","indice","INTEGER","Predicate","expresion","resultado","getValor","global","Array","simbolo","push","t","STRING","a","i","toString","errores","agregarError","XML_GramaticaAsc","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","parser","trace","yy","symbols_","terminals_","2","5","6","7","8","10","13","14","18","19","20","22","23","24","25","26","27","28","29","30","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","raiz","Nodo","cst","cstXmlAsc","getId","obtenerUltimoNodo","setRaiz","unshift","Objeto","first_line","first_column","$","elementos","atributosE","agregarPila","replaceAll","default","listaElem","padreLE","console","log","elemText","elemAtr","elem1","atr1","atr2","atrs2","Atributo","text2","textContent2","table","3","4","1","11","12","9","16","17","15","21","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","line","loc","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","XML_GramaticaDesc","$Vm","$Vn","31","32","33","cstXmlDesc","listaElem2","listAtrs3","elem2","newObj","idCierre","texto","content","tElement","listAtrs2","listAtrs","atr","mElem2","mElem1","textContent","t1","47","50","XPath_GramaticaAsc","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","34","35","36","37","38","39","43","44","45","46","48","49","51","52","53","54","55","56","57","58","59","60","61","62","TipoNodo","fromRoot","NODOERROR","DOT","DOTDOT","ASTERISCO","AXIS","undefined","TipoAxis","ANCESTOR","ANCESTORORSELF","ATTRIBUTE","CHILD","DESCENDANT","DESCENDANTORSELF","FOLLOWING","FOLLOWINGSIBLING","NAMESPACE","PARENT","PRECEDING","PRECEDINGSIBLING","SELF","Operacion","TipoOperacion","MULTIPLICACION","SUMA","RESTA","DIVISION","MENORIGUALQUE","MENORQUE","MAYORIGUALQUE","MAYORQUE","IGUAL","DIFERENTEQUE","OR","AND","MOD","PAR","DOUBLE","CADENA","41","42","XPath_GramaticaDesc","$VT","$VU","40","predicado","tipoAxis","nodeTest","NodeTest","getPredicado","Editor","props","handleChange","editor","data","value","onChange","open","language","displayName","className","type","onClick","setState","icon","faCompressAlt","faExpandAlt","onBeforeChange","lineWrapping","lint","mode","theme","lineNumbers","Component","analizador","limpiar","Analizador","_instance","entrada","id","XMLGramDesc","objetos","XMLGramAsc","consultas","XPathGramAsc","salida","ToString","XPathGramDesc","err","listaError","getMensaje","cadenaDot","getSimbolosEntorno","simbolos","getTipoDato","getDescripcion","getLinea","getColumna","recorridoCst","getRaiz","nodo","concatena","hijos","hijo","App","modalOpen","modalOpenCst","alertOpen","opcion","consoleText","fileName","xml","xpath","fileDownloadUrl","selectedOption","dot","abrirModal","handleClose","handleOpen","handleXML","handleXPath","handleDot","nuevo","upload","event","preventDefault","dofileUpload","click","evt","fileObj","target","files","reader","FileReader","fileloaded","fileContents","result","name","bind","onload","readAsText","downloadXML","output","blob","Blob","URL","createObjectURL","hoy","Date","formato","getDate","getMonth","getFullYear","getHours","getMinutes","dofileDownload","revokeObjectURL","downloadXPath","onValueChange","formSubmit","analizar","xmlAscendente","XPathAscendente","xmlDescendente","XPathDescendente","reporteTablaSimbolos","getRepTablaSimbolos","reporteListaErrores","getRepErrores","mostrarCst","reporteCst","getCSTXmlAsc","getCSTXmlDesc","modalStyles","position","top","left","transform","style","width","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Grid","container","spacing","item","xs","backgroundColor","faFileAlt","faFileUpload","display","multiple","accept","ref","padding","faSave","download","href","faPlay","Paper","InputLabel","fontWeight","fontFamily","disabled","rows","Button","borderStyle","borderRadius","Graphviz","fit","zoom","Collapse","in","Alert","size","fontSize","Modal","isOpen","ModalHeader","ModalBody","onSubmit","checked","ModalFooter","React","ReactDOM","render","document","getElementById","CST","pila","root","cstXpathAsc","cstXpathDesc","Simbolo","listaAtributos","listaO","isUnica","identificador","listaObjetos","entorno","local","ETIQUETA_UNIQUE","obj","mierror","tipoError","descripcion","ListaError","operacion","op_izq","op_der","res","opIzq","opDer","valIzq","typeIzq","valDer","typeDer","getValorInicial","tipoDominanteAritmetica","ERROR","parseInt","parseFloat","getStringTipo","izq","resolverOperacionNumeroId","der","resolverOperacionIdNumero","flag","tmp","entTemporalAT","resolverOperacionIdCadena","fromR","isFromRoot","lastNodeName","entConsultaTemp","resolverConsultaRecursiva","operadorTipo","BOOLEAN","xd","ex1","ex2","relacional","TipoNumero","insd","elin","buscarTexto","numCompare","op","elemEnt","c1","elemfinal","buscarAtributosRecursivamente","at","listaNodos","cad","isAxis","obtenerSalida","pos","elemAux","rompeCiclo","actualNode","auxSal","obtenerConsultaPredicado","concatHijoTexto","getConsultaObjeto","getConsultaAtributos","father","toLocaleLowerCase","getTipoAxis","nombreParent","tmpEnt","escribirEtiquetaPadre","auxS","auxSal2","obtenerHijosRecursivos","tmpPadre","found","nombreBuscar","siblingPadre","atrs","tPadre","antes","entBuscar","nombreNodo","auxEnt","encontrarEntorno","predValue","predTipo","veces","nTabs","tabs","nameEncontrar","ex","buscarHaciaAdentro","isLast","atrBuscar","son","addTabs","hijosList","atributo","h","setPadre"],"mappings":"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","file":"static/js/main.53f54f49.chunk.js","sourcesContent":["import { Entorno } from \"../AST/Entorno\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { Consulta } from \"../XPath/Consulta\";\r\nexport class Primitiva {\r\n    constructor(valor, tipo, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.valor = valor;\r\n    }\r\n    getTipo(ent) {\r\n        return this.tipo;\r\n    }\r\n    getValorInicial(ent) {\r\n        return this.valor;\r\n    }\r\n    getValor(ent) {\r\n        if (this.tipo === TipoPrim.IDENTIFIER) {\r\n            /* SE BUSCAN LAS ETIQUETAS CON ESTE NOMBRE */\r\n            if (ent.existeSimbolo(this.valor)) {\r\n                return ent.obtenerSimbolo(this.valor);\r\n            }\r\n            else {\r\n                //errores.agregarError('semantico', 'No existe el simbolo ' + this.valor, this.linea, this.columna);\r\n                //this.tipo = TipoPrim.ERROR;\r\n                return null;\r\n            }\r\n        }\r\n        else if (this.tipo === TipoPrim.ATRIBUTO) {\r\n            /* SE BUSCAN LOS ATRIBUTOS CON ESTE NOMBRE */\r\n            this.tipo = TipoPrim.FUNCION;\r\n            //0. Se devolver un entorno temporal, que contendra todos los que coinciden con la busqueda.\r\n            let entTemporal = new Entorno(\"Temporal\", null, null);\r\n            //1. Obtener el padre.\r\n            let padre = ent.padre;\r\n            //2. Sobre el padre buscar todos los que sean ent.nombre\r\n            padre.tsimbolos.forEach((e) => {\r\n                let elem = e.valor;\r\n                if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === ent.nombre) {\r\n                    //Ahora en este entorno ver si tiene un atributo como el que se busca.\r\n                    elem.valor.tsimbolos.forEach((c2) => {\r\n                        let aux = c2.valor;\r\n                        if (aux.getTipo() === Tipo.ATRIBUTO && (this.valor === \"*\" || this.valor === aux.getNombre())) {\r\n                            //Si se encuentra el atributo o es *, ingresar al entorno temporal\r\n                            entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return entTemporal;\r\n        }\r\n        else if (this.tipo === TipoPrim.FUNCION) {\r\n            //Si es funcion, ver de cual funcion se trata\r\n            switch (this.valor.toLowerCase()) {\r\n                case \"last()\":\r\n                    //Para last, calcular sobre el entorno padre, cual es el numero del ultimo\r\n                    //que tiene nombre como ent.nombre\r\n                    //1. Obtener padre.\r\n                    let padre = ent.padre;\r\n                    //2. Sobre el padre, contar cual es el ultimo que tiene ent.nobmre\r\n                    let indice = 0; //Se empieza en 0, por si no se encuentra devuelva 0. (y asi retornaria nada en la consulta)\r\n                    padre.tsimbolos.forEach((e) => {\r\n                        let elem = e.valor;\r\n                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === ent.nombre) {\r\n                            //Se encontro, sumar al indice\r\n                            indice++;\r\n                        }\r\n                    });\r\n                    //3. al terminar devolver indice\r\n                    //4. Cambiar su tipo a tipo INTEGER\r\n                    this.tipo = TipoPrim.INTEGER;\r\n                    if (indice > 0) {\r\n                        return indice;\r\n                    }\r\n                    else {\r\n                        return 0;\r\n                    }\r\n                default:\r\n                    //Para position(), devolver lo mismo.\r\n                    return this.valor;\r\n            }\r\n        }\r\n        else if (this.tipo == TipoPrim.CONSULTA) {\r\n            this.tipo = TipoPrim.FUNCION;\r\n            //Consulta devuelve TRUE si la ruta existe\r\n            //Es una lista de nodos. entonces crear una consulta \r\n            let tempConsulta = new Consulta(this.valor, this.linea, this.columna);\r\n            //Obtener padre, porque se deben buscar en todos los que tengan ent.nombre\r\n            let entTemporal = new Entorno(\"Temporal\", null, null);\r\n            let padre = ent.padre;\r\n            padre.tsimbolos.forEach((e) => {\r\n                let elem = e.valor;\r\n                if (elem.getNombre() === ent.nombre) {\r\n                    //Sobre este entorno ejecutar la consulta para ver si existe la ruta.\r\n                    let result = tempConsulta.ejecutar(elem.valor);\r\n                    if (result.length > 0) {\r\n                        //La consulta si existe\r\n                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                    }\r\n                    else {\r\n                    }\r\n                }\r\n            });\r\n            return entTemporal;\r\n        }\r\n        else\r\n            return this.valor;\r\n    }\r\n}\r\nexport var TipoPrim;\r\n(function (TipoPrim) {\r\n    TipoPrim[TipoPrim[\"INTEGER\"] = 0] = \"INTEGER\";\r\n    TipoPrim[TipoPrim[\"DOUBLE\"] = 1] = \"DOUBLE\";\r\n    TipoPrim[TipoPrim[\"CADENA\"] = 2] = \"CADENA\";\r\n    TipoPrim[TipoPrim[\"IDENTIFIER\"] = 3] = \"IDENTIFIER\";\r\n    TipoPrim[TipoPrim[\"ATRIBUTO\"] = 4] = \"ATRIBUTO\";\r\n    TipoPrim[TipoPrim[\"DOT\"] = 5] = \"DOT\";\r\n    TipoPrim[TipoPrim[\"FUNCION\"] = 6] = \"FUNCION\";\r\n    TipoPrim[TipoPrim[\"BOOLEAN\"] = 7] = \"BOOLEAN\";\r\n    TipoPrim[TipoPrim[\"CONSULTA\"] = 8] = \"CONSULTA\";\r\n    TipoPrim[TipoPrim[\"ERROR\"] = 9] = \"ERROR\";\r\n})(TipoPrim || (TipoPrim = {}));\r\n","export class Predicate {\r\n    constructor(expresion, linea, columna) {\r\n        this.expresion = expresion;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    getValor(ent) {\r\n        let resultado = this.expresion.getValor(ent);\r\n        this.tipo = this.expresion.getTipo(ent);\r\n        return resultado;\r\n    }\r\n    getValorInicial(ent) {\r\n    }\r\n}\r\n","import errores from \"../Global/ListaError\";\r\nimport { Tipo } from \"./Tipo\";\r\nexport class Entorno {\r\n    constructor(nombre, padre, global) {\r\n        this.tsimbolos = new Array();\r\n        this.nombre = nombre;\r\n        this.padre = padre;\r\n        if (global === null)\r\n            this.global = this;\r\n        else\r\n            this.global = global;\r\n    }\r\n    agregarSimbolo(nombre, simbolo) {\r\n        this.tsimbolos.push({ 'nombre': nombre, 'valor': simbolo });\r\n    }\r\n    getStringTipo(t) {\r\n        switch (t) {\r\n            case Tipo.STRING:\r\n                return 'Cadena';\r\n            case Tipo.ETIQUETA:\r\n                return 'Etiqueta';\r\n            case Tipo.ATRIBUTO:\r\n                return 'Atributo';\r\n        }\r\n        return '';\r\n    }\r\n    obtenerSimbolo(nombre) {\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                if (a.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    return a.tsimbolos[i].valor;\r\n                }\r\n            }\r\n        }\r\n        errores.agregarError('semantico', 'No existe el simbolo ' + nombre, -1, -1);\r\n        return null;\r\n    }\r\n    /* Metodo para cambiar el valor del simbolo */\r\n    setSimbolo(nombre, simbolo) {\r\n        //console.log(\"Entra a set simbolo\");\r\n        for (let a = this; a != null; a = a.padre) {\r\n            for (let i = 0; i < a.tsimbolos.length; i++) {\r\n                //console.log(a.tsimbolos[i].nombre.toString().toLowerCase());\r\n                //console.log(nombre.toString().toLowerCase());\r\n                let aux = a.tsimbolos[i];\r\n                if (aux.nombre.toString().toLowerCase() === nombre.toString().toLowerCase()) {\r\n                    aux.valor = simbolo;\r\n                    //console.log(a.tsimbolos[i].valor);\r\n                    //console.log(this.tsimbolos[i].valor);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /* Verifica si el simbolo existe en el entorno actual */\r\n    existeSimbolo(nombre) {\r\n        for (let i = 0; i < this.tsimbolos.length; i++) {\r\n            if (this.tsimbolos[i].nombre.toString().toLowerCase() === nombre.toString().toLowerCase())\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XML_GramaticaAsc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 10], $V1 = [1, 9], $V2 = [2, 5, 6], $V3 = [1, 13], $V4 = [1, 14], $V5 = [1, 19], $V6 = [2, 12], $V7 = [1, 18], $V8 = [2, 7, 10, 13, 14], $V9 = [1, 38], $Va = [1, 34], $Vb = [1, 35], $Vc = [1, 36], $Vd = [1, 37], $Ve = [1, 39], $Vf = [1, 40], $Vg = [1, 41], $Vh = [1, 42], $Vi = [1, 43], $Vj = [1, 44], $Vk = [2, 6, 8, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30], $Vl = [2, 31];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"ENCABEZADO\": 4, \"EOF\": 5, \"lt\": 6, \"interrog\": 7, \"xml\": 8, \"LISTAATRIBUTOS\": 9, \"gt\": 10, \"LISTAELEMENTOS\": 11, \"ELEMENTO\": 12, \"identifier\": 13, \"diag\": 14, \"TEXTCONTENT\": 15, \"ATRIBUTOS\": 16, \"ATRIBUTO\": 17, \"asig\": 18, \"cadena\": 19, \"cadena2\": 20, \"TEXT\": 21, \"content\": 22, \"DoubleLiteral\": 23, \"IntegerLiteral\": 24, \"apos\": 25, \"less\": 26, \"greater\": 27, \"ampersand\": 28, \"apostrophe\": 29, \"quot\": 30, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"lt\", 7: \"interrog\", 8: \"xml\", 10: \"gt\", 13: \"identifier\", 14: \"diag\", 18: \"asig\", 19: \"cadena\", 20: \"cadena2\", 22: \"content\", 23: \"DoubleLiteral\", 24: \"IntegerLiteral\", 25: \"apos\", 26: \"less\", 27: \"greater\", 28: \"ampersand\", 29: \"apostrophe\", 30: \"quot\" },\r\n        productions_: [0, [3, 2], [4, 7], [4, 2], [11, 2], [11, 1], [12, 5], [12, 9], [12, 9], [12, 8], [12, 2], [9, 1], [9, 0], [16, 2], [16, 1], [17, 3], [17, 3], [17, 1], [15, 2], [15, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    /* CONSTRUCCION DE CST */\r\n                    let raiz = new Nodo(cst.cstXmlAsc.getId(), 'START', null, [cst.cstXmlAsc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlAsc.setRaiz(raiz);\r\n                    return $$[$0 - 1];\r\n                    break;\r\n                case 2:\r\n                    $$[$0].unshift(new Objeto($$[$0 - 4], '', _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 3], [], true));\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elementos = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atributosE = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), '<', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'interrog', null, [new Nodo(cst.cstXmlAsc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'xml', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        atributosE,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'interrog', null, [new Nodo(cst.cstXmlAsc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), '>', null, [])]),\r\n                        elementos]));\r\n                    break;\r\n                case 3:\r\n                    errores.default.agregarError('sintáctico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ENCABEZADO', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 4:\r\n                    if ($$[$0 - 1] !== null) {\r\n                        if ($$[$0] !== null)\r\n                            $$[$0 - 1].push($$[$0]);\r\n                        this.$ = $$[$0 - 1];\r\n                    }\r\n                    else if ($$[$0] !== null)\r\n                        this.$ = [$$[$0 - 1]];\r\n                    else\r\n                        this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elem = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let listaElem = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAELEMENTOS', null, [listaElem, elem]));\r\n                    break;\r\n                case 5:\r\n                    if ($$[$0] !== null)\r\n                        this.$ = [$$[$0]];\r\n                    else\r\n                        this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let padreLE = new Nodo(cst.cstXmlAsc.getId(), 'LISTAELEMENTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlAsc.agregarPila(padreLE);\r\n                    break;\r\n                case 6:\r\n                    this.$ = new Objeto($$[$0 - 3], '', _$[$0 - 4].first_line, _$[$0 - 4].first_column, $$[$0 - 2], [], true);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        cst.cstXmlAsc.obtenerUltimoNodo(),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 7:\r\n                    console.log(Objeto);\r\n                    if ($$[$0 - 7] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 7], $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), _$[$0 - 8].first_line, _$[$0 - 8].first_column, $$[$0 - 6], [], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 111: Error semantico: Las etiquetas deben ser iguales:\\n' + $$[$0 - 7] + \"!=\" + $$[$0 - 1] + \" \\natributos: \" + $$[$0 - 6] + \"\\ntexto: \\n\" + $$[$0 - 4]);\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 8].first_line, _$[$0 - 8].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    var elemText = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    var elemAtr = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 8].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elemAtr,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 5].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elemText,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 8:\r\n                    if ($$[$0 - 7] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 7], '', _$[$0 - 8].first_line, _$[$0 - 8].first_column, $$[$0 - 6], $$[$0 - 4], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 120: Error semantico: Las etiquetas deben ser iguales');\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 8].first_line, _$[$0 - 8].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let elem1 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atr1 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 8].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        atr1,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 5].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        elem1,\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 9:\r\n                    if ($$[$0 - 6] === $$[$0 - 1]) {\r\n                        this.$ = new Objeto($$[$0 - 6], '', _$[$0 - 7].first_line, _$[$0 - 7].first_column, $$[$0 - 5], [], false);\r\n                    }\r\n                    else {\r\n                        console.log(errores.default);\r\n                        console.log('Linea 129: Error semantico: Las etiquetas deben ser iguales');\r\n                        errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 7].first_line, _$[$0 - 7].first_column);\r\n                        this.$ = null;\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 7].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 6].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        cst.cstXmlAsc.obtenerUltimoNodo(),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 4].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'lt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 3].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'diag', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'gt', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 10:\r\n                    console.log('Entra a error sintactico');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ELEMENTO', null, []));\r\n                    break;\r\n                case 11:\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAATRIBUTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 12:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'LISTAATRIBUTOS', null, [new Nodo(cst.cstXmlAsc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 13:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let atr2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let atrs2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTOS', null, [atrs2, atr2]));\r\n                    break;\r\n                case 14:\r\n                    this.$ = [$$[$0]];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTOS', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 15:\r\n                case 16:\r\n                    this.$ = new Atributo($$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 2].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'asignacion', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlAsc.getId(), 'cadena', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 17:\r\n                    console.log('Entra a error Atribut sintactico');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0].first_line, _$[$0].first_column);\r\n                    this.$ = new Atributo(\"\", \"\", _$[$0].first_line, _$[$0].first_column);\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'ATRIBUTO', null, []));\r\n                    break;\r\n                case 18:\r\n                    $$[$0 - 1] = $$[$0 - 1] + \" \" + $$[$0];\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let text2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    let textContent2 = cst.cstXmlAsc.obtenerUltimoNodo();\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXTCONTENT', null, [textContent2, text2]));\r\n                    break;\r\n                case 19:\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXTCONTENT', null, [cst.cstXmlAsc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 20:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 21:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'content', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 22:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'double', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 23:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'integer', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 24:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'identificador', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 25:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'comilla simple', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 26:\r\n                    this.$ = \"<\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'menor que', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 27:\r\n                    this.$ = \">\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'mayor que', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"&\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'ampersand', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 29:\r\n                    this.$ = \"'\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'apostrofe', null, [new Nodo(cst.cstXmlAsc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 30:\r\n                    this.$ = \"''\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlAsc.getId(), 'comilla doble', null, [new Nodo(cst.cstXmlAsc.getId(), '\"', null, [])])]));\r\n                    break;\r\n                case 31:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlAsc.agregarPila(new Nodo(cst.cstXmlAsc.getId(), 'TEXT', null, []));\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 2: [1, 4], 3: 1, 4: 2, 6: [1, 3] }, { 1: [3] }, { 5: [1, 5] }, { 7: [1, 6] }, { 2: $V0, 6: $V1, 11: 7, 12: 8 }, { 1: [2, 1] }, { 8: [1, 11] }, { 2: $V0, 5: [2, 3], 6: $V1, 12: 12 }, o($V2, [2, 5]), { 13: $V3 }, { 10: $V4 }, { 2: $V5, 7: $V6, 9: 15, 13: $V7, 16: 16, 17: 17 }, o($V2, [2, 4]), o([10, 14], $V6, { 16: 16, 17: 17, 9: 20, 2: $V5, 13: $V7 }), o($V2, [2, 10]), { 7: [1, 21] }, o([7, 10, 14], [2, 11], { 17: 22, 2: $V5, 13: $V7 }), o($V8, [2, 14]), { 18: [1, 23] }, o($V8, [2, 17]), { 10: [1, 25], 14: [1, 24] }, { 10: [1, 26] }, o($V8, [2, 13]), { 19: [1, 27], 20: [1, 28] }, { 10: [1, 29] }, { 2: [1, 45], 6: [1, 32], 8: $V9, 11: 31, 12: 8, 13: $Va, 15: 30, 21: 33, 22: $Vb, 23: $Vc, 24: $Vd, 25: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj }, { 2: $V0, 6: $V1, 11: 46, 12: 8 }, o($V8, [2, 15]), o($V8, [2, 16]), o($V2, [2, 6]), { 2: [1, 49], 6: [1, 47], 8: $V9, 13: $Va, 21: 48, 22: $Vb, 23: $Vc, 24: $Vd, 25: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj }, { 2: $V0, 6: [1, 50], 12: 12 }, { 13: $V3, 14: [1, 51] }, o($Vk, [2, 19]), o($Vk, [2, 20]), o($Vk, [2, 21]), o($Vk, [2, 22]), o($Vk, [2, 23]), o($Vk, [2, 24]), o($Vk, [2, 25]), o($Vk, [2, 26]), o($Vk, [2, 27]), o($Vk, [2, 28]), o($Vk, [2, 29]), o($Vk, [2, 30]), o($Vk, $Vl, { 10: $V4 }), { 2: $V0, 5: [2, 2], 6: $V1, 12: 12 }, { 14: [1, 52] }, o($Vk, [2, 18]), o($Vk, $Vl), { 13: $V3, 14: [1, 53] }, { 13: [1, 54] }, { 13: [1, 55] }, { 13: [1, 56] }, { 10: [1, 57] }, { 10: [1, 58] }, { 10: [1, 59] }, o($V2, [2, 9]), o($V2, [2, 7]), o($V2, [2, 8])],\r\n        defaultActions: { 5: [2, 1] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Objeto } = require(\"../XML/Objeto\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    const errores = require('../Global/ListaError');\r\n    const { Nodo } = require('../Reporte/Nodo');\r\n    const cst = require('../Reporte/CST');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 2:\r\n                        this.popState();\r\n                        break;\r\n                    case 3: /* skip comment content*/\r\n                        break;\r\n                    case 4:\r\n                        return 6;\r\n                        break;\r\n                    case 5:\r\n                        return 10;\r\n                        break;\r\n                    case 6:\r\n                        return 18;\r\n                        break;\r\n                    case 7:\r\n                        return 14;\r\n                        break;\r\n                    case 8:\r\n                        return 7;\r\n                        break;\r\n                    case 9:\r\n                        return 25;\r\n                        break;\r\n                    case 10:\r\n                        return \"xml\";\r\n                        break;\r\n                    case 11:\r\n                        return 26;\r\n                        break;\r\n                    case 12:\r\n                        return 27;\r\n                        break;\r\n                    case 13:\r\n                        return 28;\r\n                        break;\r\n                    case 14:\r\n                        return \"apostrophe\";\r\n                        break;\r\n                    case 15:\r\n                        return \"quot\";\r\n                        break;\r\n                    case 16:\r\n                        return 23;\r\n                        break;\r\n                    case 17:\r\n                        return 24;\r\n                        break;\r\n                    case 18:\r\n                        return 13;\r\n                        break;\r\n                    case 19:\r\n                        return 19;\r\n                        break;\r\n                    case 20:\r\n                        return 20;\r\n                        break;\r\n                    case 21:\r\n                        return 22;\r\n                        break;\r\n                    case 22:\r\n                        return 5;\r\n                        break;\r\n                    case 23:\r\n                        console.log(errores.default);\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/, /^(?:<!--)/, /^(?:-->)/, /^(?:.)/, /^(?:<)/, /^(?:>)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\?)/, /^(?:')/, /^(?:[xX][mM][lL])/, /^(?:&lt;)/, /^(?:&gt;)/, /^(?:&amp;)/, /^(?:&apos;)/, /^(?:&quot;)/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:([^<]))/, /^(?:$)/, /^(?:.)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XML_GramaticaAsc;\r\n    exports.Parser = XML_GramaticaAsc.Parser;\r\n    exports.parse = function () { return XML_GramaticaAsc.parse.apply(XML_GramaticaAsc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XML_GramaticaDesc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [2, 5], $V1 = [1, 9], $V2 = [1, 13], $V3 = [1, 17], $V4 = [2, 9], $V5 = [1, 16], $V6 = [5, 6], $V7 = [7, 10, 21], $V8 = [2, 7, 10, 14, 21], $V9 = [1, 46], $Va = [2, 21], $Vb = [1, 39], $Vc = [1, 35], $Vd = [1, 36], $Ve = [1, 37], $Vf = [1, 38], $Vg = [1, 40], $Vh = [1, 41], $Vi = [1, 42], $Vj = [1, 43], $Vk = [1, 44], $Vl = [1, 45], $Vm = [2, 6, 8, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33], $Vn = [1, 52];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"ENCABEZADO\": 4, \"EOF\": 5, \"lt\": 6, \"interrog\": 7, \"xml\": 8, \"LISTAATRIBUTOS\": 9, \"gt\": 10, \"LISTAELEMENTOS\": 11, \"ELEMENTO\": 12, \"ELEM\": 13, \"identifier\": 14, \"TIPOELEM\": 15, \"ATRIBUTO\": 16, \"asig\": 17, \"TIPOCADENA\": 18, \"cadena\": 19, \"cadena2\": 20, \"diag\": 21, \"TEXTCONTENT\": 22, \"MOREELEMENTS\": 23, \"TEXT\": 24, \"content\": 25, \"DoubleLiteral\": 26, \"IntegerLiteral\": 27, \"apos\": 28, \"less\": 29, \"greater\": 30, \"ampersand\": 31, \"apostrophe\": 32, \"quot\": 33, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"lt\", 7: \"interrog\", 8: \"xml\", 10: \"gt\", 14: \"identifier\", 17: \"asig\", 19: \"cadena\", 20: \"cadena2\", 21: \"diag\", 25: \"content\", 26: \"DoubleLiteral\", 27: \"IntegerLiteral\", 28: \"apos\", 29: \"less\", 30: \"greater\", 31: \"ampersand\", 32: \"apostrophe\", 33: \"quot\" },\r\n        productions_: [0, [3, 2], [4, 7], [4, 2], [11, 2], [11, 0], [12, 2], [13, 3], [9, 2], [9, 0], [16, 3], [16, 2], [16, 2], [18, 1], [18, 1], [15, 2], [15, 4], [15, 3], [23, 3], [23, 3], [22, 2], [22, 0], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    let raiz = new Nodo(cst.cstXmlDesc.getId(), 'START', null, [cst.cstXmlDesc.obtenerUltimoNodo()]);\r\n                    cst.cstXmlDesc.setRaiz(raiz);\r\n                    return $$[$0 - 1];\r\n                    break;\r\n                case 2:\r\n                    $$[$0].unshift(new Objeto($$[$0 - 4], '', _$[$0 - 6].first_line, _$[$0 - 6].first_column, $$[$0 - 3], [], true));\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listaElem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let listAtrs3 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'interrog', null, [new Nodo(cst.cstXmlDesc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'xml', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 4].toString(), null, [])]),\r\n                        listAtrs3,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'interrog', null, [new Nodo(cst.cstXmlDesc.getId(), '?', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])]),\r\n                        listaElem2]));\r\n                    break;\r\n                case 3:\r\n                    errores.default.agregarError('sintáctico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ENCABEZADO', null, [new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        cst.cstXmlDesc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 4:\r\n                    $$[$0 - 1] = $$[$0 - 1].concat($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listaElem = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let elem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAELEMENTOS', null, [elem2, listaElem]));\r\n                    break;\r\n                case 5:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAELEMENTOS', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 6:\r\n                    this.$ = [$$[$0]];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ELEMENTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        cst.cstXmlDesc.obtenerUltimoNodo()]));\r\n                    break;\r\n                case 7:\r\n                    let newObj = null;\r\n                    if ($$[$0] !== null) {\r\n                        if ($$[$0].idCierre === '' && $$[$0].texto === '' && $$[$0].content === null) { /** Etiqueta unica */\r\n                            newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], true);\r\n                        }\r\n                        else if ($$[$0].idCierre !== '') { /** Etiqueta doble */\r\n                            if ($$[$0 - 2] === $$[$0].idCierre) {\r\n                                //newObj = new Objeto($$[$0-2], $$[$0].texto, _$[$0-2].first_line, _$[$0-2].first_column, $$[$0-1], $$[$0].content !=== null?$$[$0].content:[], false);\r\n                                if ($$[$0].content !== null) /** El contenido es mas objetos */\r\n                                    newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], $$[$0].content, false);\r\n                                else if ($$[$0].texto !== '') /** El contenido es un texto */\r\n                                    newObj = new Objeto($$[$0 - 2], $$[$0].texto, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], false);\r\n                                else\r\n                                    newObj = new Objeto($$[$0 - 2], '', _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1], [], false);\r\n                            }\r\n                            else {\r\n                                console.log('Linea 85: Error semantico: Las etiquetas deben ser iguales');\r\n                                errores.default.agregarError('semantico', 'Las etiquetas deben ser iguales', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                            }\r\n                        }\r\n                    }\r\n                    this.$ = newObj;\r\n                    /* CONSTRUCCION DE CST */\r\n                    let tElement = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let listAtrs2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 2].toString(), null, [])]),\r\n                        listAtrs2, tElement]));\r\n                    break;\r\n                case 8:\r\n                    if ($$[$0 - 1] !== null) {\r\n                        $$[$0 - 1] = $$[$0 - 1].concat($$[$0]);\r\n                        this.$ = $$[$0 - 1];\r\n                    }\r\n                    else\r\n                        this.$ = $$[$0];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let listAtrs = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let atr = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAATRIBUTOS', null, [atr, listAtrs]));\r\n                    break;\r\n                case 9:\r\n                    this.$ = [];\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'LISTAATRIBUTOS', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 10:\r\n                    this.$ = [new Atributo($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column)];\r\n                    break;\r\n                case 11:\r\n                    console.log('Entra a error sintactico de atributo');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 1].toString(), null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'asignacion', null, [new Nodo(cst.cstXmlDesc.getId(), '=', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), cst.cstXmlDesc.obtenerUltimoNodo(), null, [])]));\r\n                    break;\r\n                case 12:\r\n                    console.log('Entra a error sintactico de atributo 2');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'ATRIBUTO', null, [new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])])]));\r\n                    break;\r\n                case 13:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOCADENA', null, [new Nodo(cst.cstXmlDesc.getId(), 'cadena', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 14:\r\n                    this.$ = $$[$0].toString().replaceAll(\"'\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOCADENA', null, [new Nodo(cst.cstXmlDesc.getId(), 'cadena', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"'\", \"\"), null, [])])]));\r\n                    break;\r\n                case 15:\r\n                    this.$ = { 'texto': '', 'content': null, 'idCierre': '' };\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 16:\r\n                    if ($$[$0].idCierre !== '') {\r\n                        if ($$[$0 - 2] !== '') /* Etiqueta con texto*/\r\n                            $$[$0].texto = $$[$0 - 2];\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let mElem2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let textContent2 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])]),\r\n                        textContent2,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        mElem2]));\r\n                    break;\r\n                case 17:\r\n                    console.log('Entra a error sintactico de TIPOELEM');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = null;\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TIPOELEM', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'error', null, []),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 18:\r\n                    this.$ = { 'texto': '', 'content': null, 'idCierre': $$[$0 - 1] };\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'MOREELEMENTS', null, [new Nodo(cst.cstXmlDesc.getId(), 'diag', null, [new Nodo(cst.cstXmlDesc.getId(), '/', null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'identifier', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0 - 1].toString().replaceAll(\"\\\"\", \"\"), null, [])]),\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'gt', null, [new Nodo(cst.cstXmlDesc.getId(), '>', null, [])])]));\r\n                    break;\r\n                case 19:\r\n                    if ($$[$0].idCierre !== '') { /** Se esta cerrando una etiqueta y se comienza a subir **/\r\n                        if ($$[$0 - 2] instanceof Objeto) {\r\n                            if ($$[$0].content === null)\r\n                                this.$ = { 'texto': '', 'content': [$$[$0 - 2]], 'idCierre': $$[$0].idCierre };\r\n                            else {\r\n                                $$[$0].content.unshift($$[$0 - 2]);\r\n                                this.$ = { 'texto': '', 'content': $$[$0].content, 'idCierre': $$[$0].idCierre };\r\n                            }\r\n                        }\r\n                        else if ($$[$0 - 2] === null) {\r\n                            this.$ = $$[$0];\r\n                        }\r\n                        else {\r\n                        }\r\n                    }\r\n                    /* CONSTRUCCION DE CST */\r\n                    let mElem1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let elem1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'MOREELEMENTS', null, [elem1,\r\n                        new Nodo(cst.cstXmlDesc.getId(), 'lt', null, [new Nodo(cst.cstXmlDesc.getId(), '<', null, [])]),\r\n                        mElem1]));\r\n                    break;\r\n                case 20:\r\n                    $$[$0 - 1] = $$[$0 - 1] + $$[$0];\r\n                    this.$ = $$[$0 - 1];\r\n                    /* CONSTRUCCION DE CST */\r\n                    let textContent = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    let t1 = cst.cstXmlDesc.obtenerUltimoNodo();\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXTCONTENT', null, [t1, textContent]));\r\n                    break;\r\n                case 21:\r\n                    this.$ = '';\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXTCONTENT', null, [new Nodo(cst.cstXmlDesc.getId(), 'epsilon', null, [])]));\r\n                    break;\r\n                case 22:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'identificador', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 23:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'content', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 24:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'double', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 25:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'integer', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 26:\r\n                    this.$ = $$[$0].toString();\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'identificador', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 27:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'comilla simple', null, [new Nodo(cst.cstXmlDesc.getId(), $$[$0].toString().replaceAll(\"\\\"\", \"\"), null, [])])]));\r\n                    break;\r\n                case 28:\r\n                    this.$ = \"<\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'menor que', null, [new Nodo(cst.cstXmlDesc.getId(), \"<\", null, [])])]));\r\n                    break;\r\n                case 29:\r\n                    this.$ = \">\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'mayor que', null, [new Nodo(cst.cstXmlDesc.getId(), \">\", null, [])])]));\r\n                    break;\r\n                case 30:\r\n                    this.$ = \"&\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'ampersand', null, [new Nodo(cst.cstXmlDesc.getId(), \"&\", null, [])])]));\r\n                    break;\r\n                case 31:\r\n                    this.$ = \"'\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'apostrofe', null, [new Nodo(cst.cstXmlDesc.getId(), \"'\", null, [])])]));\r\n                    break;\r\n                case 32:\r\n                    this.$ = \"\\\"\";\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, [new Nodo(cst.cstXmlDesc.getId(), 'comilla doble', null, [new Nodo(cst.cstXmlDesc.getId(), '\"', null, [])])]));\r\n                    break;\r\n                case 33:\r\n                    this.$ = $$[$0].toString().replaceAll(\"\\\"\", \"\");\r\n                    /* CONSTRUCCION DE CST */\r\n                    cst.cstXmlDesc.agregarPila(new Nodo(cst.cstXmlDesc.getId(), 'TEXT', null, []));\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 2: [1, 4], 3: 1, 4: 2, 6: [1, 3] }, { 1: [3] }, { 5: [1, 5] }, { 7: [1, 6] }, { 5: $V0, 6: $V1, 11: 7, 12: 8 }, { 1: [2, 1] }, { 8: [1, 10] }, { 5: [2, 3] }, { 5: $V0, 6: $V1, 11: 11, 12: 8 }, { 13: 12, 14: $V2 }, { 2: $V3, 7: $V4, 9: 14, 14: $V5, 16: 15 }, { 5: [2, 4] }, o($V6, [2, 6]), o([10, 21], $V4, { 16: 15, 9: 18, 2: $V3, 14: $V5 }), { 7: [1, 19] }, o($V7, $V4, { 16: 15, 9: 20, 2: $V3, 14: $V5 }), { 17: [1, 21] }, { 6: [1, 23], 10: [1, 22] }, { 10: [1, 26], 15: 24, 21: [1, 25] }, { 10: [1, 27] }, o($V7, [2, 8]), { 18: 28, 19: [1, 29], 20: [1, 30] }, o($V8, [2, 11]), o($V8, [2, 12]), o($V6, [2, 7]), { 2: [1, 32], 10: [1, 31] }, { 2: $V9, 6: $Va, 8: $Vb, 14: $Vc, 22: 33, 24: 34, 25: $Vd, 26: $Ve, 27: $Vf, 28: $Vg, 29: $Vh, 30: $Vi, 31: $Vj, 32: $Vk, 33: $Vl }, { 5: $V0, 6: $V1, 11: 47, 12: 8 }, o($V8, [2, 10]), o($V8, [2, 13]), o($V8, [2, 14]), o($V6, [2, 15]), { 10: [1, 48] }, { 6: [1, 49] }, { 2: $V9, 6: $Va, 8: $Vb, 14: $Vc, 22: 50, 24: 34, 25: $Vd, 26: $Ve, 27: $Vf, 28: $Vg, 29: $Vh, 30: $Vi, 31: $Vj, 32: $Vk, 33: $Vl }, o($Vm, [2, 22]), o($Vm, [2, 23]), o($Vm, [2, 24]), o($Vm, [2, 25]), o($Vm, [2, 26]), o($Vm, [2, 27]), o($Vm, [2, 28]), o($Vm, [2, 29]), o($Vm, [2, 30]), o($Vm, [2, 31]), o($Vm, [2, 32]), o($Vm, [2, 33]), { 5: [2, 2] }, o($V6, [2, 17]), { 13: 53, 14: $V2, 21: $Vn, 23: 51 }, { 6: [2, 20] }, o($V6, [2, 16]), { 14: [1, 54] }, { 6: [1, 55] }, { 10: [1, 56] }, { 13: 53, 14: $V2, 21: $Vn, 23: 57 }, o($V6, [2, 18]), o($V6, [2, 19])],\r\n        defaultActions: { 5: [2, 1], 7: [2, 3], 11: [2, 4], 47: [2, 2], 50: [2, 20] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Objeto } = require(\"../XML/Objeto\");\r\n    const { Atributo } = require(\"../XML/Atributo\");\r\n    const errores = require('../Global/ListaError');\r\n    const { Nodo } = require('../Reporte/Nodo');\r\n    const cst = require('../Reporte/CST');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0:\r\n                        this.begin('comment');\r\n                        break;\r\n                    case 1:\r\n                        this.popState();\r\n                        break;\r\n                    case 2: /* skip comment content*/\r\n                        break;\r\n                    case 3: /* skip whitespace */\r\n                        break;\r\n                    case 4:\r\n                        return 6;\r\n                        break;\r\n                    case 5:\r\n                        return 10;\r\n                        break;\r\n                    case 6:\r\n                        return 17;\r\n                        break;\r\n                    case 7:\r\n                        return 21;\r\n                        break;\r\n                    case 8:\r\n                        return 7;\r\n                        break;\r\n                    case 9:\r\n                        return 28;\r\n                        break;\r\n                    case 10:\r\n                        return \"xml\";\r\n                        break;\r\n                    case 11:\r\n                        return 29;\r\n                        break;\r\n                    case 12:\r\n                        return 30;\r\n                        break;\r\n                    case 13:\r\n                        return 31;\r\n                        break;\r\n                    case 14:\r\n                        return \"apostrophe\";\r\n                        break;\r\n                    case 15:\r\n                        return \"quot\";\r\n                        break;\r\n                    case 16:\r\n                        return 26;\r\n                        break;\r\n                    case 17:\r\n                        return 27;\r\n                        break;\r\n                    case 18:\r\n                        return 14;\r\n                        break;\r\n                    case 19:\r\n                        return 19;\r\n                        break;\r\n                    case 20:\r\n                        return 20;\r\n                        break;\r\n                    case 21:\r\n                        return 25;\r\n                        break;\r\n                    case 22:\r\n                        return 5;\r\n                        break;\r\n                    case 23:\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:<!--)/, /^(?:-->)/, /^(?:.)/, /^(?:\\s+)/, /^(?:<)/, /^(?:>)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\?)/, /^(?:')/, /^(?:[xX][mM][lL])/, /^(?:&lt;)/, /^(?:&gt;)/, /^(?:&amp;)/, /^(?:&apos;)/, /^(?:&quot;)/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:([^<]))/, /^(?:$)/, /^(?:.)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XML_GramaticaDesc;\r\n    exports.Parser = XML_GramaticaDesc.Parser;\r\n    exports.parse = function () { return XML_GramaticaDesc.parse.apply(XML_GramaticaDesc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPath_GramaticaAsc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [1, 4], $V1 = [1, 16], $V2 = [1, 7], $V3 = [1, 9], $V4 = [1, 8], $V5 = [1, 15], $V6 = [1, 14], $V7 = [1, 12], $V8 = [1, 13], $V9 = [5, 6], $Va = [5, 6, 12, 16, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], $Vb = [2, 39], $Vc = [1, 26], $Vd = [1, 31], $Ve = [1, 34], $Vf = [1, 35], $Vg = [1, 36], $Vh = [1, 37], $Vi = [1, 38], $Vj = [1, 39], $Vk = [1, 40], $Vl = [1, 41], $Vm = [1, 42], $Vn = [1, 43], $Vo = [1, 44], $Vp = [1, 45], $Vq = [1, 46], $Vr = [1, 58], $Vs = [1, 59], $Vt = [1, 60], $Vu = [1, 62], $Vv = [1, 54], $Vw = [1, 55], $Vx = [1, 56], $Vy = [1, 57], $Vz = [1, 80], $VA = [1, 81], $VB = [1, 82], $VC = [1, 83], $VD = [1, 84], $VE = [1, 85], $VF = [1, 86], $VG = [1, 87], $VH = [1, 88], $VI = [1, 89], $VJ = [1, 90], $VK = [1, 91], $VL = [1, 92], $VM = [16, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], $VN = [1, 99], $VO = [1, 102], $VP = [1, 100], $VQ = [1, 101], $VR = [16, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56], $VS = [16, 46, 47, 48, 49, 50, 51, 52, 53, 56];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"LISTACONSULTAS\": 4, \"EOF\": 5, \"andSelect\": 6, \"CONSULTA\": 7, \"identifier\": 8, \"LISTANODOS\": 9, \"MASTIPOS\": 10, \"NODO\": 11, \"diag\": 12, \"TIPONODO\": 13, \"corA\": 14, \"EXPRESION\": 15, \"corC\": 16, \"AXES\": 17, \"attr\": 18, \"PREDICATE\": 19, \"asterisco\": 20, \"dot\": 21, \"FUNCIONES\": 22, \"ancestor\": 23, \"dospuntos\": 24, \"NODETEST\": 25, \"ancestorSelf\": 26, \"attribute\": 27, \"child\": 28, \"descendant\": 29, \"descendantSelf\": 30, \"following\": 31, \"followingSib\": 32, \"namespace\": 33, \"parent\": 34, \"preced\": 35, \"precedSib\": 36, \"self\": 37, \"textFunc\": 38, \"nodeFunc\": 39, \"LISTAEXPRESIONES\": 40, \"PRIMITIVA\": 41, \"OPERACION\": 42, \"mas\": 43, \"menos\": 44, \"div\": 45, \"lte\": 46, \"lt\": 47, \"gte\": 48, \"gt\": 49, \"igual\": 50, \"nequal\": 51, \"or\": 52, \"and\": 53, \"mod\": 54, \"parA\": 55, \"parC\": 56, \"DoubleLiteral\": 57, \"IntegerLiteral\": 58, \"cadena\": 59, \"cadena2\": 60, \"lastFunc\": 61, \"positionFunc\": 62, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 6: \"andSelect\", 8: \"identifier\", 12: \"diag\", 14: \"corA\", 16: \"corC\", 18: \"attr\", 20: \"asterisco\", 21: \"dot\", 23: \"ancestor\", 24: \"dospuntos\", 26: \"ancestorSelf\", 27: \"attribute\", 28: \"child\", 29: \"descendant\", 30: \"descendantSelf\", 31: \"following\", 32: \"followingSib\", 33: \"namespace\", 34: \"parent\", 35: \"preced\", 36: \"precedSib\", 37: \"self\", 38: \"textFunc\", 39: \"nodeFunc\", 43: \"mas\", 44: \"menos\", 45: \"div\", 46: \"lte\", 47: \"lt\", 48: \"gte\", 49: \"gt\", 50: \"igual\", 51: \"nequal\", 52: \"or\", 53: \"and\", 54: \"mod\", 55: \"parA\", 56: \"parC\", 57: \"DoubleLiteral\", 58: \"IntegerLiteral\", 59: \"cadena\", 60: \"cadena2\", 61: \"lastFunc\", 62: \"positionFunc\" },\r\n        productions_: [0, [3, 2], [4, 3], [4, 1], [7, 1], [7, 2], [7, 2], [7, 1], [7, 1], [9, 2], [9, 1], [11, 2], [11, 3], [11, 2], [11, 3], [13, 1], [13, 4], [13, 1], [13, 1], [10, 3], [10, 3], [10, 2], [10, 3], [10, 2], [10, 1], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [19, 3], [19, 0], [25, 2], [25, 2], [25, 2], [25, 2], [40, 2], [40, 1], [15, 1], [15, 1], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [42, 3], [41, 1], [41, 1], [41, 1], [41, 1], [41, 1], [41, 2], [41, 2], [41, 1], [41, 2], [41, 1], [22, 1], [22, 1], [22, 1], [22, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                    $$[$0 - 2].push(new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column));\r\n                    this.$ = $$[$0 - 2];\r\n                    break;\r\n                case 3:\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 4:\r\n                    this.$ = [new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 5:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 6:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 7:\r\n                case 47:\r\n                case 74:\r\n                case 75:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 8:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 9:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 10:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 11:\r\n                    if (this.$ != null) {\r\n                        $$[$0].fromRoot = true;\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    break;\r\n                case 12:\r\n                    if (this.$ != null) {\r\n                        $$[$0].fromRoot = false;\r\n                        this.$ = $$[$0];\r\n                    }\r\n                    break;\r\n                case 13:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 14:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 15:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 16:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column));\r\n                    break;\r\n                case 17:\r\n                case 18:\r\n                case 46:\r\n                case 72:\r\n                case 73:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 19:\r\n                case 20:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 23:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 24:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 25:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTOR, $$[$0]);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0]);\r\n                    break;\r\n                case 27:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0]);\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.CHILD, $$[$0]);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANT, $$[$0]);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0]);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWING, $$[$0]);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.NAMESPACE, $$[$0]);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PARENT, $$[$0]);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDING, $$[$0]);\r\n                    break;\r\n                case 36:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 37:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.SELF, $$[$0]);\r\n                    break;\r\n                case 38:\r\n                    this.$ = new Predicate($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 39:\r\n                    this.$ = [];\r\n                    break;\r\n                case 40:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 41:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 42:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 43:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 44:\r\n                    $$[$0 - 1].push($$[$0]);\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 45:\r\n                    this.$ = [$$[$0]];\r\n                    break;\r\n                case 48:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 49:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 50:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 51:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 52:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 53:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 56:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 57:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 58:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 59:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 60:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 61:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 62:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 63:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 64:\r\n                case 65:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 66:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 67:\r\n                case 68:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 69:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 70:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 71:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [{ 3: 1, 4: 2, 7: 3, 8: $V0, 9: 6, 10: 5, 11: 11, 12: $V1, 18: $V2, 20: $V3, 21: $V4, 22: 10, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, { 1: [3] }, { 5: [1, 17], 6: [1, 18] }, o($V9, [2, 3]), o($V9, [2, 4], { 11: 11, 9: 19, 12: $V1 }), o($V9, [2, 8], { 11: 11, 9: 20, 12: $V1 }), o($V9, [2, 7], { 11: 21, 12: $V1 }), { 8: [1, 22], 20: [1, 23] }, o($Va, $Vb, { 19: 24, 14: $Vc, 21: [1, 25] }), o($Va, $Vb, { 19: 27, 14: $Vc }), o($Va, [2, 24]), o($Va, [2, 10]), o($Va, [2, 72]), o($Va, [2, 73]), o($Va, [2, 74]), o($Va, [2, 75]), { 2: [1, 30], 8: $Vd, 10: 32, 12: [1, 29], 13: 28, 17: 33, 18: $V2, 20: $V3, 21: $V4, 22: 10, 23: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 32: $Vl, 33: $Vm, 34: $Vn, 35: $Vo, 36: $Vp, 37: $Vq, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, { 1: [2, 1] }, { 7: 47, 8: $V0, 9: 6, 10: 5, 11: 11, 12: $V1, 18: $V2, 20: $V3, 21: $V4, 22: 10, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, o($V9, [2, 5], { 11: 21, 12: $V1 }), o($V9, [2, 6], { 11: 21, 12: $V1 }), o($Va, [2, 9]), o($Va, $Vb, { 19: 48, 14: $Vc }), o($Va, $Vb, { 19: 49, 14: $Vc }), o($Va, [2, 21]), o($Va, $Vb, { 19: 50, 14: $Vc }), { 8: $Vr, 15: 51, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($Va, [2, 23]), o($Va, [2, 11]), { 2: [1, 64], 8: $Vd, 10: 32, 13: 63, 17: 33, 18: $V2, 20: $V3, 21: $V4, 22: 10, 23: $Ve, 26: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 32: $Vl, 33: $Vm, 34: $Vn, 35: $Vo, 36: $Vp, 37: $Vq, 38: $V5, 39: $V6, 61: $V7, 62: $V8 }, o($Va, [2, 13]), o($Va, [2, 15], { 14: [1, 65] }), o($Va, [2, 17]), o($Va, [2, 18]), { 24: [1, 66] }, { 24: [1, 67] }, { 24: [1, 68] }, { 24: [1, 69] }, { 24: [1, 70] }, { 24: [1, 71] }, { 24: [1, 72] }, { 24: [1, 73] }, { 24: [1, 74] }, { 24: [1, 75] }, { 24: [1, 76] }, { 24: [1, 77] }, { 24: [1, 78] }, o($V9, [2, 2]), o($Va, [2, 19]), o($Va, [2, 20]), o($Va, [2, 22]), { 16: [1, 79], 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL }, o($VM, [2, 46]), o($VM, [2, 47]), o($VM, [2, 62]), o($VM, [2, 63]), o($VM, [2, 64]), o($VM, [2, 65]), o($VM, [2, 66], { 11: 11, 9: 93, 12: $V1 }), { 8: [1, 94], 20: [1, 95] }, o($VM, [2, 69]), o($VM, [2, 71]), { 8: $Vr, 15: 96, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($Va, [2, 12]), o($Va, [2, 14]), { 8: $Vr, 15: 97, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $VN, 20: $VO, 25: 98, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 103, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 104, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 105, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 106, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 107, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 108, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 109, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 110, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 111, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 112, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 113, 38: $VP, 39: $VQ }, { 8: $VN, 20: $VO, 25: 114, 38: $VP, 39: $VQ }, o($Va, [2, 38]), { 8: $Vr, 15: 115, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 116, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 117, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 118, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 119, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 120, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 121, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 122, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 123, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 124, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 125, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 126, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, { 8: $Vr, 15: 127, 18: $Vs, 21: $Vt, 22: 61, 38: $V5, 39: $V6, 41: 52, 42: 53, 55: $Vu, 57: $Vv, 58: $Vw, 59: $Vx, 60: $Vy, 61: $V7, 62: $V8 }, o($VM, [2, 70], { 11: 21, 12: $V1 }), o($VM, [2, 67]), o($VM, [2, 68]), { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL, 56: [1, 128] }, { 16: [1, 129], 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 52: $VJ, 53: $VK, 54: $VL }, o($Va, [2, 25]), o($Va, $Vb, { 19: 130, 14: $Vc }), o($Va, $Vb, { 19: 131, 14: $Vc }), o($Va, $Vb, { 19: 132, 14: $Vc }), o($Va, $Vb, { 19: 133, 14: $Vc }), o($Va, [2, 26]), o($Va, [2, 27]), o($Va, [2, 28]), o($Va, [2, 29]), o($Va, [2, 30]), o($Va, [2, 31]), o($Va, [2, 32]), o($Va, [2, 33]), o($Va, [2, 34]), o($Va, [2, 35]), o($Va, [2, 36]), o($Va, [2, 37]), o($VM, [2, 48]), o($VR, [2, 49], { 20: $Vz, 45: $VC, 54: $VL }), o($VR, [2, 50], { 20: $Vz, 45: $VC, 54: $VL }), o($VM, [2, 51]), o($VS, [2, 52], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 53], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 54], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 55], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 56], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o($VS, [2, 57], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 54: $VL }), o([16, 52, 56], [2, 58], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 53: $VK, 54: $VL }), o([16, 52, 53, 56], [2, 59], { 20: $Vz, 43: $VA, 44: $VB, 45: $VC, 46: $VD, 47: $VE, 48: $VF, 49: $VG, 50: $VH, 51: $VI, 54: $VL }), o($VM, [2, 60]), o($VM, [2, 61]), o($Va, [2, 16]), o($Va, [2, 40]), o($Va, [2, 41]), o($Va, [2, 42]), o($Va, [2, 43])],\r\n        defaultActions: { 17: [2, 1] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: {},\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        return 50;\r\n                        break;\r\n                    case 2:\r\n                        return 12;\r\n                        break;\r\n                    case 3:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 4:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 8:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return 20;\r\n                        break;\r\n                    case 12:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 13:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 14:\r\n                        return \"div\";\r\n                        break;\r\n                    case 15:\r\n                        return 46;\r\n                        break;\r\n                    case 16:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 17:\r\n                        return 47;\r\n                        break;\r\n                    case 18:\r\n                        return 49;\r\n                        break;\r\n                    case 19:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 20:\r\n                        return \"or\";\r\n                        break;\r\n                    case 21:\r\n                        return \"and\";\r\n                        break;\r\n                    case 22:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 23:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 24:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 25:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 26:\r\n                        return \"child\";\r\n                        break;\r\n                    case 27:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 28:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 29:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 30:\r\n                        return \"following\";\r\n                        break;\r\n                    case 31:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 32:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 33:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 34:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 35:\r\n                        return \"self\";\r\n                        break;\r\n                    case 36:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 37:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 38:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 39:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 40:\r\n                        return 57;\r\n                        break;\r\n                    case 41:\r\n                        return 58;\r\n                        break;\r\n                    case 42:\r\n                        return 8;\r\n                        break;\r\n                    case 43:\r\n                        return 59;\r\n                        break;\r\n                    case 44:\r\n                        return 60;\r\n                        break;\r\n                    case 45:\r\n                        console.log(errores.default);\r\n                        errores.default.agregarError('lexico', 'Simbolo inesperado ' + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column);\r\n                        break;\r\n                    case 46:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/, /^(?:=)/, /^(?:\\/)/, /^(?:\\.)/, /^(?:@)/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\|)/, /^(?:::)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\*)/, /^(?:\\+)/, /^(?:-)/, /^(?:div\\b)/, /^(?:<=)/, /^(?:>=)/, /^(?:<)/, /^(?:>)/, /^(?:!=)/, /^(?:or\\b)/, /^(?:and\\b)/, /^(?:mod\\b)/, /^(?:ancestor-or-self\\b)/, /^(?:ancestor\\b)/, /^(?:attribute\\b)/, /^(?:child\\b)/, /^(?:descendant-or-self\\b)/, /^(?:descendant\\b)/, /^(?:following-sibling\\b)/, /^(?:following\\b)/, /^(?:namespace\\b)/, /^(?:parent\\b)/, /^(?:preceding-sibling\\b)/, /^(?:preceding\\b)/, /^(?:self\\b)/, /^(?:last\\(\\))/, /^(?:position\\(\\))/, /^(?:node\\(\\))/, /^(?:text\\(\\))/, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/, /^(?:[0-9]+)/, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/, /^(?:.)/, /^(?:$)/],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XPath_GramaticaAsc;\r\n    exports.Parser = XPath_GramaticaAsc.Parser;\r\n    exports.parse = function () { return XPath_GramaticaAsc.parse.apply(XPath_GramaticaAsc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","\"use strict\";\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPath_GramaticaDesc = (function () {\r\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\r\n        ; return o; }, $V0 = [5, 7], $V1 = [2, 8], $V2 = [1, 4], $V3 = [1, 16], $V4 = [1, 7], $V5 = [1, 9], $V6 = [1, 8], $V7 = [1, 15], $V8 = [1, 14], $V9 = [1, 12], $Va = [1, 13], $Vb = [5, 7, 12, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $Vc = [2, 41], $Vd = [1, 25], $Ve = [5, 7, 16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $Vf = [1, 31], $Vg = [1, 34], $Vh = [1, 35], $Vi = [1, 36], $Vj = [1, 37], $Vk = [1, 38], $Vl = [1, 39], $Vm = [1, 40], $Vn = [1, 41], $Vo = [1, 42], $Vp = [1, 43], $Vq = [1, 44], $Vr = [1, 45], $Vs = [1, 46], $Vt = [1, 60], $Vu = [1, 58], $Vv = [1, 59], $Vw = [1, 62], $Vx = [1, 54], $Vy = [1, 55], $Vz = [1, 56], $VA = [1, 57], $VB = [1, 80], $VC = [1, 81], $VD = [1, 82], $VE = [1, 83], $VF = [1, 84], $VG = [1, 85], $VH = [1, 86], $VI = [1, 87], $VJ = [1, 88], $VK = [1, 89], $VL = [1, 90], $VM = [1, 91], $VN = [1, 92], $VO = [16, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], $VP = [1, 99], $VQ = [1, 102], $VR = [1, 100], $VS = [1, 101], $VT = [16, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55], $VU = [16, 45, 46, 47, 48, 49, 50, 51, 52, 55];\r\n    var parser = { trace: function trace() { },\r\n        yy: {},\r\n        symbols_: { \"error\": 2, \"START\": 3, \"LISTACONSULTAS\": 4, \"EOF\": 5, \"CONSULTA\": 6, \"andSelect\": 7, \"identifier\": 8, \"LISTANODOS\": 9, \"MASTIPOS\": 10, \"NODO\": 11, \"diag\": 12, \"TIPONODO\": 13, \"corA\": 14, \"EXPRESION\": 15, \"corC\": 16, \"AXES\": 17, \"attr\": 18, \"PREDICATE\": 19, \"asterisco\": 20, \"dot\": 21, \"FUNCIONES\": 22, \"ancestor\": 23, \"dospuntos\": 24, \"NODETEST\": 25, \"ancestorSelf\": 26, \"attribute\": 27, \"child\": 28, \"descendant\": 29, \"descendantSelf\": 30, \"following\": 31, \"followingSib\": 32, \"namespace\": 33, \"parent\": 34, \"preced\": 35, \"precedSib\": 36, \"self\": 37, \"textFunc\": 38, \"nodeFunc\": 39, \"PRIMITIVA\": 40, \"OPERACION\": 41, \"mas\": 42, \"menos\": 43, \"div\": 44, \"lte\": 45, \"lt\": 46, \"gte\": 47, \"gt\": 48, \"igual\": 49, \"nequal\": 50, \"or\": 51, \"and\": 52, \"mod\": 53, \"parA\": 54, \"parC\": 55, \"DoubleLiteral\": 56, \"IntegerLiteral\": 57, \"cadena\": 58, \"cadena2\": 59, \"lastFunc\": 60, \"positionFunc\": 61, \"$accept\": 0, \"$end\": 1 },\r\n        terminals_: { 2: \"error\", 5: \"EOF\", 7: \"andSelect\", 8: \"identifier\", 12: \"diag\", 14: \"corA\", 16: \"corC\", 18: \"attr\", 20: \"asterisco\", 21: \"dot\", 23: \"ancestor\", 24: \"dospuntos\", 26: \"ancestorSelf\", 27: \"attribute\", 28: \"child\", 29: \"descendant\", 30: \"descendantSelf\", 31: \"following\", 32: \"followingSib\", 33: \"namespace\", 34: \"parent\", 35: \"preced\", 36: \"precedSib\", 37: \"self\", 38: \"textFunc\", 39: \"nodeFunc\", 42: \"mas\", 43: \"menos\", 44: \"div\", 45: \"lte\", 46: \"lt\", 47: \"gte\", 48: \"gt\", 49: \"igual\", 50: \"nequal\", 51: \"or\", 52: \"and\", 53: \"mod\", 54: \"parA\", 55: \"parC\", 56: \"DoubleLiteral\", 57: \"IntegerLiteral\", 58: \"cadena\", 59: \"cadena2\", 60: \"lastFunc\", 61: \"positionFunc\" },\r\n        productions_: [0, [3, 2], [4, 3], [4, 1], [6, 2], [6, 2], [6, 1], [9, 2], [9, 0], [11, 2], [11, 3], [11, 2], [11, 3], [13, 1], [13, 4], [13, 1], [13, 1], [10, 3], [10, 3], [10, 2], [10, 3], [10, 2], [10, 1], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [17, 3], [25, 2], [25, 2], [25, 2], [25, 2], [19, 3], [19, 0], [15, 1], [15, 1], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [41, 3], [40, 1], [40, 1], [40, 1], [40, 1], [40, 2], [40, 2], [40, 1], [40, 2], [40, 1], [22, 1], [22, 1], [22, 1], [22, 1]],\r\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n            /* this == yyval */\r\n            var $0 = $$.length - 1;\r\n            switch (yystate) {\r\n                case 1:\r\n                    this.$ = $$[$0 - 1];\r\n                    return this.$;\r\n                    break;\r\n                case 2:\r\n                    this.$ = [new Consulta($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column)];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 3:\r\n                    this.$ = [new Consulta($$[$0], _$[$0].first_line, _$[$0].first_column)];\r\n                    break;\r\n                case 4:\r\n                    this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 5:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = this.$.concat($$[$0]);\r\n                    }\r\n                    break;\r\n                case 6:\r\n                case 69:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 7:\r\n                    this.$ = [$$[$0 - 1]];\r\n                    this.$ = this.$.concat($$[$0]);\r\n                    break;\r\n                case 8:\r\n                    this.$ = [];\r\n                    break;\r\n                case 9:\r\n                    $$[$0].fromRoot = true;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 10:\r\n                    $$[$0].fromRoot = false;\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 11:\r\n                    console.log('Entra a error sintactico de one diag');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 12:\r\n                    console.log('Entra a error sintactico de two diags');\r\n                    errores.default.agregarError('sintactico', 'Token inesperado \\'' + yytext + '\\'', _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    this.$ = new Nodo($$[$0], TipoNodo.NODOERROR, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 13:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.IDENTIFIER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 14:\r\n                    this.$ = new Nodo($$[$0 - 3], TipoNodo.IDENTIFIER, _$[$0 - 3].first_line, _$[$0 - 3].first_column, new Predicate($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column));\r\n                    break;\r\n                case 15:\r\n                case 16:\r\n                case 42:\r\n                case 67:\r\n                case 68:\r\n                case 70:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 17:\r\n                case 18:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ATRIBUTO, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 19:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.DOT, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 20:\r\n                    this.$ = new Nodo($$[$0 - 2] + $$[$0 - 1], TipoNodo.DOTDOT, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 21:\r\n                    this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 22:\r\n                    this.$ = new Nodo($$[$0], TipoNodo.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 23:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTOR, $$[$0]);\r\n                    break;\r\n                case 24:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ANCESTORORSELF, $$[$0]);\r\n                    break;\r\n                case 25:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.ATTRIBUTE, $$[$0]);\r\n                    break;\r\n                case 26:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.CHILD, $$[$0]);\r\n                    break;\r\n                case 27:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANT, $$[$0]);\r\n                    break;\r\n                case 28:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.DESCENDANTORSELF, $$[$0]);\r\n                    break;\r\n                case 29:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWING, $$[$0]);\r\n                    break;\r\n                case 30:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.FOLLOWINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 31:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.NAMESPACE, $$[$0]);\r\n                    break;\r\n                case 32:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PARENT, $$[$0]);\r\n                    break;\r\n                case 33:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDING, $$[$0]);\r\n                    break;\r\n                case 34:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.PRECEDINGSIBLING, $$[$0]);\r\n                    break;\r\n                case 35:\r\n                    this.$ = new Nodo($$[$0 - 2], TipoNodo.AXIS, _$[$0 - 2].first_line, _$[$0 - 2].first_column, undefined, TipoAxis.SELF, $$[$0]);\r\n                    break;\r\n                case 36:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 37:\r\n                case 38:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.FUNCION, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 39:\r\n                    if ($$[$0] instanceof Predicate) {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Nodo($$[$0 - 1], TipoNodo.ASTERISCO, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);\r\n                    }\r\n                    break;\r\n                case 40:\r\n                    this.$ = $$[$0 - 1];\r\n                    break;\r\n                case 41:\r\n                    this.$ = [];\r\n                    break;\r\n                case 43:\r\n                    this.$ = $$[$0];\r\n                    break;\r\n                case 44:\r\n                    this.$ = new Operacion(TipoOperacion.MULTIPLICACION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 45:\r\n                    this.$ = new Operacion(TipoOperacion.SUMA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 46:\r\n                    this.$ = new Operacion(TipoOperacion.RESTA, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 47:\r\n                    this.$ = new Operacion(TipoOperacion.DIVISION, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 48:\r\n                    this.$ = new Operacion(TipoOperacion.MENORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 49:\r\n                    this.$ = new Operacion(TipoOperacion.MENORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 50:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORIGUALQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 51:\r\n                    this.$ = new Operacion(TipoOperacion.MAYORQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 52:\r\n                    this.$ = new Operacion(TipoOperacion.IGUAL, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 53:\r\n                    this.$ = new Operacion(TipoOperacion.DIFERENTEQUE, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 54:\r\n                    this.$ = new Operacion(TipoOperacion.OR, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 55:\r\n                    this.$ = new Operacion(TipoOperacion.AND, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 56:\r\n                    this.$ = new Operacion(TipoOperacion.MOD, $$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 57:\r\n                    this.$ = new Operacion(TipoOperacion.PAR, $$[$0 - 1], null, _$[$0 - 2].first_line, _$[$0 - 2].first_column);\r\n                    break;\r\n                case 58:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOUBLE, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 59:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.INTEGER, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 60:\r\n                case 61:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.CADENA, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 62:\r\n                case 63:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.ATRIBUTO, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    break;\r\n                case 64:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.DOT, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n                case 65:\r\n                    if ($$[$0].length > 0) {\r\n                        this.$ = [new Nodo($$[$0 - 1], TipoNodo.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column)];\r\n                        this.$ = this.$.concat($$[$0]);\r\n                        this.$ = new Primitiva(this.$, TipoPrim.CONSULTA, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    else {\r\n                        this.$ = new Primitiva($$[$0 - 1], TipoPrim.IDENTIFIER, _$[$0 - 1].first_line, _$[$0 - 1].first_column);\r\n                    }\r\n                    break;\r\n                case 66:\r\n                    this.$ = new Primitiva($$[$0], TipoPrim.FUNCION, _$[$0].first_line, _$[$0].first_column);\r\n                    break;\r\n            }\r\n        },\r\n        table: [o($V0, $V1, { 3: 1, 4: 2, 6: 3, 10: 5, 9: 6, 22: 10, 11: 11, 8: $V2, 12: $V3, 18: $V4, 20: $V5, 21: $V6, 38: $V7, 39: $V8, 60: $V9, 61: $Va }), { 1: [3] }, { 5: [1, 17] }, { 5: [2, 3], 7: [1, 18] }, o($V0, $V1, { 11: 11, 9: 19, 12: $V3 }), o($V0, $V1, { 11: 11, 9: 20, 12: $V3 }), o($V0, [2, 6]), { 8: [1, 21], 20: [1, 22] }, o($Vb, $Vc, { 19: 23, 14: $Vd, 21: [1, 24] }), o($Vb, $Vc, { 19: 26, 14: $Vd }), o($Vb, [2, 22]), o($Ve, $V1, { 11: 11, 9: 27, 12: $V3 }), o($Vb, [2, 67]), o($Vb, [2, 68]), o($Vb, [2, 69]), o($Vb, [2, 70]), { 2: [1, 30], 8: $Vf, 10: 32, 12: [1, 29], 13: 28, 17: 33, 18: $V4, 20: $V5, 21: $V6, 22: 10, 23: $Vg, 26: $Vh, 27: $Vi, 28: $Vj, 29: $Vk, 30: $Vl, 31: $Vm, 32: $Vn, 33: $Vo, 34: $Vp, 35: $Vq, 36: $Vr, 37: $Vs, 38: $V7, 39: $V8, 60: $V9, 61: $Va }, { 1: [2, 1] }, o($V0, $V1, { 6: 3, 10: 5, 9: 6, 22: 10, 11: 11, 4: 47, 8: $V2, 12: $V3, 18: $V4, 20: $V5, 21: $V6, 38: $V7, 39: $V8, 60: $V9, 61: $Va }), o($V0, [2, 4]), o($V0, [2, 5]), o($Vb, $Vc, { 19: 48, 14: $Vd }), o($Vb, $Vc, { 19: 49, 14: $Vd }), o($Vb, [2, 19]), o($Vb, $Vc, { 19: 50, 14: $Vd }), { 8: $Vt, 15: 51, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($Vb, [2, 21]), o($Ve, [2, 7]), o($Vb, [2, 9]), { 2: [1, 64], 8: $Vf, 10: 32, 13: 63, 17: 33, 18: $V4, 20: $V5, 21: $V6, 22: 10, 23: $Vg, 26: $Vh, 27: $Vi, 28: $Vj, 29: $Vk, 30: $Vl, 31: $Vm, 32: $Vn, 33: $Vo, 34: $Vp, 35: $Vq, 36: $Vr, 37: $Vs, 38: $V7, 39: $V8, 60: $V9, 61: $Va }, o($Vb, [2, 11]), o($Vb, [2, 13], { 14: [1, 65] }), o($Vb, [2, 15]), o($Vb, [2, 16]), { 24: [1, 66] }, { 24: [1, 67] }, { 24: [1, 68] }, { 24: [1, 69] }, { 24: [1, 70] }, { 24: [1, 71] }, { 24: [1, 72] }, { 24: [1, 73] }, { 24: [1, 74] }, { 24: [1, 75] }, { 24: [1, 76] }, { 24: [1, 77] }, { 24: [1, 78] }, { 5: [2, 2] }, o($Vb, [2, 17]), o($Vb, [2, 18]), o($Vb, [2, 20]), { 16: [1, 79], 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN }, o($VO, [2, 42]), o($VO, [2, 43]), o($VO, [2, 58]), o($VO, [2, 59]), o($VO, [2, 60]), o($VO, [2, 61]), { 8: [1, 93], 20: [1, 94] }, o($VO, [2, 64]), o($VO, $V1, { 11: 11, 9: 95, 12: $V3 }), o($VO, [2, 66]), { 8: $Vt, 15: 96, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($Vb, [2, 10]), o($Vb, [2, 12]), { 8: $Vt, 15: 97, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $VP, 20: $VQ, 25: 98, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 103, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 104, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 105, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 106, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 107, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 108, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 109, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 110, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 111, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 112, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 113, 38: $VR, 39: $VS }, { 8: $VP, 20: $VQ, 25: 114, 38: $VR, 39: $VS }, o($Vb, [2, 40]), { 8: $Vt, 15: 115, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 116, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 117, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 118, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 119, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 120, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 121, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 122, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 123, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 124, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 125, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 126, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, { 8: $Vt, 15: 127, 18: $Vu, 21: $Vv, 22: 61, 38: $V7, 39: $V8, 40: 52, 41: 53, 54: $Vw, 56: $Vx, 57: $Vy, 58: $Vz, 59: $VA, 60: $V9, 61: $Va }, o($VO, [2, 62]), o($VO, [2, 63]), o($VO, [2, 65]), { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN, 55: [1, 128] }, { 16: [1, 129], 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 51: $VL, 52: $VM, 53: $VN }, o($Vb, [2, 23]), o($Vb, $Vc, { 19: 130, 14: $Vd }), o($Vb, $Vc, { 19: 131, 14: $Vd }), o($Vb, $Vc, { 19: 132, 14: $Vd }), o($Vb, $Vc, { 19: 133, 14: $Vd }), o($Vb, [2, 24]), o($Vb, [2, 25]), o($Vb, [2, 26]), o($Vb, [2, 27]), o($Vb, [2, 28]), o($Vb, [2, 29]), o($Vb, [2, 30]), o($Vb, [2, 31]), o($Vb, [2, 32]), o($Vb, [2, 33]), o($Vb, [2, 34]), o($Vb, [2, 35]), o($VO, [2, 44]), o($VT, [2, 45], { 20: $VB, 44: $VE, 53: $VN }), o($VT, [2, 46], { 20: $VB, 44: $VE, 53: $VN }), o($VO, [2, 47]), o($VU, [2, 48], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 49], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 50], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 51], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 52], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o($VU, [2, 53], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 53: $VN }), o([16, 51, 55], [2, 54], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 52: $VM, 53: $VN }), o([16, 51, 52, 55], [2, 55], { 20: $VB, 42: $VC, 43: $VD, 44: $VE, 45: $VF, 46: $VG, 47: $VH, 48: $VI, 49: $VJ, 50: $VK, 53: $VN }), o($VO, [2, 56]), o($VO, [2, 57]), o($Vb, [2, 14]), o($Vb, [2, 36]), o($Vb, [2, 37]), o($Vb, [2, 38]), o($Vb, [2, 39])],\r\n        defaultActions: { 17: [2, 1], 47: [2, 2] },\r\n        parseError: function parseError(str, hash) {\r\n            if (hash.recoverable) {\r\n                this.trace(str);\r\n            }\r\n            else {\r\n                var error = new Error(str);\r\n                error.hash = hash;\r\n                throw error;\r\n            }\r\n        },\r\n        parse: function parse(input) {\r\n            var self = this, stack = [0], tstack = [], // token stack\r\n            vstack = [null], // semantic value stack\r\n            lstack = [], // location stack\r\n            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n            var args = lstack.slice.call(arguments, 1);\r\n            //this.reductionCount = this.shiftCount = 0;\r\n            var lexer = Object.create(this.lexer);\r\n            var sharedState = { yy: {} };\r\n            // copy state\r\n            for (var k in this.yy) {\r\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n                    sharedState.yy[k] = this.yy[k];\r\n                }\r\n            }\r\n            lexer.setInput(input, sharedState.yy);\r\n            sharedState.yy.lexer = lexer;\r\n            sharedState.yy.parser = this;\r\n            if (typeof lexer.yylloc == 'undefined') {\r\n                lexer.yylloc = {};\r\n            }\r\n            var yyloc = lexer.yylloc;\r\n            lstack.push(yyloc);\r\n            var ranges = lexer.options && lexer.options.ranges;\r\n            if (typeof sharedState.yy.parseError === 'function') {\r\n                this.parseError = sharedState.yy.parseError;\r\n            }\r\n            else {\r\n                this.parseError = Object.getPrototypeOf(this).parseError;\r\n            }\r\n            function popStack(n) {\r\n                stack.length = stack.length - 2 * n;\r\n                vstack.length = vstack.length - n;\r\n                lstack.length = lstack.length - n;\r\n            }\r\n            _token_stack: var lex = function () {\r\n                var token;\r\n                token = lexer.lex() || EOF;\r\n                // if token isn't its numeric value, convert\r\n                if (typeof token !== 'number') {\r\n                    token = self.symbols_[token] || token;\r\n                }\r\n                return token;\r\n            };\r\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n            while (true) {\r\n                // retreive state number from top of stack\r\n                state = stack[stack.length - 1];\r\n                // use default actions if available\r\n                if (this.defaultActions[state]) {\r\n                    action = this.defaultActions[state];\r\n                }\r\n                else {\r\n                    if (symbol === null || typeof symbol == 'undefined') {\r\n                        symbol = lex();\r\n                    }\r\n                    // read action for current state and first input\r\n                    action = table[state] && table[state][symbol];\r\n                }\r\n                _handle_error: \r\n                // handle parse error\r\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                    var error_rule_depth;\r\n                    var errStr = '';\r\n                    // Return the rule stack depth where the nearest error rule can be found.\r\n                    // Return FALSE when no error recovery rule was found.\r\n                    function locateNearestErrorRecoveryRule(state) {\r\n                        var stack_probe = stack.length - 1;\r\n                        var depth = 0;\r\n                        // try to recover from error\r\n                        for (;;) {\r\n                            // check for error recovery rule in this state\r\n                            if ((TERROR.toString()) in table[state]) {\r\n                                return depth;\r\n                            }\r\n                            if (state === 0 || stack_probe < 2) {\r\n                                return false; // No suitable error recovery rule available.\r\n                            }\r\n                            stack_probe -= 2; // popStack(1): [symbol, action]\r\n                            state = stack[stack_probe];\r\n                            ++depth;\r\n                        }\r\n                    }\r\n                    if (!recovering) {\r\n                        // first see if there's any chance at hitting an error recovery rule:\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                        // Report error\r\n                        expected = [];\r\n                        for (p in table[state]) {\r\n                            if (this.terminals_[p] && p > TERROR) {\r\n                                expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                            }\r\n                        }\r\n                        if (lexer.showPosition) {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n                        }\r\n                        else {\r\n                            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" +\r\n                                (symbol == EOF ? \"end of input\" :\r\n                                    (\"'\" + (this.terminals_[symbol] || symbol) + \"'\"));\r\n                        }\r\n                        this.parseError(errStr, {\r\n                            text: lexer.match,\r\n                            token: this.terminals_[symbol] || symbol,\r\n                            line: lexer.yylineno,\r\n                            loc: yyloc,\r\n                            expected: expected,\r\n                            recoverable: (error_rule_depth !== false)\r\n                        });\r\n                    }\r\n                    else if (preErrorSymbol !== EOF) {\r\n                        error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n                    }\r\n                    // just recovered from another error\r\n                    if (recovering == 3) {\r\n                        if (symbol === EOF || preErrorSymbol === EOF) {\r\n                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                        }\r\n                        // discard current lookahead and grab another\r\n                        yyleng = lexer.yyleng;\r\n                        yytext = lexer.yytext;\r\n                        yylineno = lexer.yylineno;\r\n                        yyloc = lexer.yylloc;\r\n                        symbol = lex();\r\n                    }\r\n                    // try to recover from error\r\n                    if (error_rule_depth === false) {\r\n                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n                    }\r\n                    popStack(error_rule_depth);\r\n                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n                    symbol = TERROR; // insert generic error symbol as new lookahead\r\n                    state = stack[stack.length - 1];\r\n                    action = table[state] && table[state][TERROR];\r\n                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n                }\r\n                // this shouldn't happen, unless resolve defaults are off\r\n                if (action[0] instanceof Array && action.length > 1) {\r\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n                }\r\n                switch (action[0]) {\r\n                    case 1: // shift\r\n                        //this.shiftCount++;\r\n                        stack.push(symbol);\r\n                        vstack.push(lexer.yytext);\r\n                        lstack.push(lexer.yylloc);\r\n                        stack.push(action[1]); // push state\r\n                        symbol = null;\r\n                        if (!preErrorSymbol) { // normal execution/no error\r\n                            yyleng = lexer.yyleng;\r\n                            yytext = lexer.yytext;\r\n                            yylineno = lexer.yylineno;\r\n                            yyloc = lexer.yylloc;\r\n                            if (recovering > 0) {\r\n                                recovering--;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // error just occurred, resume old lookahead f/ before error\r\n                            symbol = preErrorSymbol;\r\n                            preErrorSymbol = null;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // reduce\r\n                        //this.reductionCount++;\r\n                        len = this.productions_[action[1]][1];\r\n                        // perform semantic action\r\n                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\r\n                        // default location, uses first token for firsts, last for lasts\r\n                        yyval._$ = {\r\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                            last_line: lstack[lstack.length - 1].last_line,\r\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                            last_column: lstack[lstack.length - 1].last_column\r\n                        };\r\n                        if (ranges) {\r\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\r\n                        }\r\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n                        if (typeof r !== 'undefined') {\r\n                            return r;\r\n                        }\r\n                        // pop off stack\r\n                        if (len) {\r\n                            stack = stack.slice(0, -1 * len * 2);\r\n                            vstack = vstack.slice(0, -1 * len);\r\n                            lstack = lstack.slice(0, -1 * len);\r\n                        }\r\n                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\r\n                        vstack.push(yyval.$);\r\n                        lstack.push(yyval._$);\r\n                        // goto new state = table[STATE][NONTERMINAL]\r\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n                        stack.push(newState);\r\n                        break;\r\n                    case 3:\r\n                        // accept\r\n                        return true;\r\n                }\r\n            }\r\n            return true;\r\n        } };\r\n    //const Nodo = require(\"./AST/nodo_arbol\");\r\n    //var raiz;\r\n    const { Primitiva } = require(\"../Expresiones/Primitiva\");\r\n    const { Operacion } = require(\"../Expresiones/Operacion\");\r\n    const { Consulta } = require(\"../XPath/Consulta\");\r\n    const { Nodo } = require(\"../XPath/Nodo\");\r\n    const { Predicate } = require(\"../XPath/Predicate\");\r\n    const { TipoPrim } = require(\"../Expresiones/Primitiva\");\r\n    const { TipoOperacion } = require(\"../Expresiones/Operacion\");\r\n    const { TipoNodo } = require(\"../XPath/Nodo\");\r\n    const { TipoAxis } = require(\"../XPath/Nodo\");\r\n    const errores = require('../Global/ListaError');\r\n    /* generated by jison-lex 0.3.4 */\r\n    var lexer = (function () {\r\n        var lexer = ({\r\n            EOF: 1,\r\n            parseError: function parseError(str, hash) {\r\n                if (this.yy.parser) {\r\n                    this.yy.parser.parseError(str, hash);\r\n                }\r\n                else {\r\n                    throw new Error(str);\r\n                }\r\n            },\r\n            // resets the lexer, sets new input\r\n            setInput: function (input, yy) {\r\n                this.yy = yy || this.yy || {};\r\n                this._input = input;\r\n                this._more = this._backtrack = this.done = false;\r\n                this.yylineno = this.yyleng = 0;\r\n                this.yytext = this.matched = this.match = '';\r\n                this.conditionStack = ['INITIAL'];\r\n                this.yylloc = {\r\n                    first_line: 1,\r\n                    first_column: 0,\r\n                    last_line: 1,\r\n                    last_column: 0\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [0, 0];\r\n                }\r\n                this.offset = 0;\r\n                return this;\r\n            },\r\n            // consumes and returns one char from the input\r\n            input: function () {\r\n                var ch = this._input[0];\r\n                this.yytext += ch;\r\n                this.yyleng++;\r\n                this.offset++;\r\n                this.match += ch;\r\n                this.matched += ch;\r\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno++;\r\n                    this.yylloc.last_line++;\r\n                }\r\n                else {\r\n                    this.yylloc.last_column++;\r\n                }\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range[1]++;\r\n                }\r\n                this._input = this._input.slice(1);\r\n                return ch;\r\n            },\r\n            // unshifts one char (or a string) into the input\r\n            unput: function (ch) {\r\n                var len = ch.length;\r\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                this._input = ch + this._input;\r\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n                //this.yyleng -= len;\r\n                this.offset -= len;\r\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                this.match = this.match.substr(0, this.match.length - 1);\r\n                this.matched = this.matched.substr(0, this.matched.length - 1);\r\n                if (lines.length - 1) {\r\n                    this.yylineno -= lines.length - 1;\r\n                }\r\n                var r = this.yylloc.range;\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: lines ?\r\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n                        this.yylloc.first_column - len\r\n                };\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n                }\r\n                this.yyleng = this.yytext.length;\r\n                return this;\r\n            },\r\n            // When called from action, caches matched text and appends it on next action\r\n            more: function () {\r\n                this._more = true;\r\n                return this;\r\n            },\r\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n            reject: function () {\r\n                if (this.options.backtrack_lexer) {\r\n                    this._backtrack = true;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            // retain first n characters of the match\r\n            less: function (n) {\r\n                this.unput(this.match.slice(n));\r\n            },\r\n            // displays already matched input, i.e. for error messages\r\n            pastInput: function () {\r\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\r\n            },\r\n            // displays upcoming input, i.e. for error messages\r\n            upcomingInput: function () {\r\n                var next = this.match;\r\n                if (next.length < 20) {\r\n                    next += this._input.substr(0, 20 - next.length);\r\n                }\r\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n            },\r\n            // displays the character position where the lexing error occurred, i.e. for error messages\r\n            showPosition: function () {\r\n                var pre = this.pastInput();\r\n                var c = new Array(pre.length + 1).join(\"-\");\r\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n            },\r\n            // test the lexed token: return FALSE when not a match, otherwise return token\r\n            test_match: function (match, indexed_rule) {\r\n                var token, lines, backup;\r\n                if (this.options.backtrack_lexer) {\r\n                    // save context\r\n                    backup = {\r\n                        yylineno: this.yylineno,\r\n                        yylloc: {\r\n                            first_line: this.yylloc.first_line,\r\n                            last_line: this.last_line,\r\n                            first_column: this.yylloc.first_column,\r\n                            last_column: this.yylloc.last_column\r\n                        },\r\n                        yytext: this.yytext,\r\n                        match: this.match,\r\n                        matches: this.matches,\r\n                        matched: this.matched,\r\n                        yyleng: this.yyleng,\r\n                        offset: this.offset,\r\n                        _more: this._more,\r\n                        _input: this._input,\r\n                        yy: this.yy,\r\n                        conditionStack: this.conditionStack.slice(0),\r\n                        done: this.done\r\n                    };\r\n                    if (this.options.ranges) {\r\n                        backup.yylloc.range = this.yylloc.range.slice(0);\r\n                    }\r\n                }\r\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n                if (lines) {\r\n                    this.yylineno += lines.length;\r\n                }\r\n                this.yylloc = {\r\n                    first_line: this.yylloc.last_line,\r\n                    last_line: this.yylineno + 1,\r\n                    first_column: this.yylloc.last_column,\r\n                    last_column: lines ?\r\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                        this.yylloc.last_column + match[0].length\r\n                };\r\n                this.yytext += match[0];\r\n                this.match += match[0];\r\n                this.matches = match;\r\n                this.yyleng = this.yytext.length;\r\n                if (this.options.ranges) {\r\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n                }\r\n                this._more = false;\r\n                this._backtrack = false;\r\n                this._input = this._input.slice(match[0].length);\r\n                this.matched += match[0];\r\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n                if (this.done && this._input) {\r\n                    this.done = false;\r\n                }\r\n                if (token) {\r\n                    return token;\r\n                }\r\n                else if (this._backtrack) {\r\n                    // recover context\r\n                    for (var k in backup) {\r\n                        this[k] = backup[k];\r\n                    }\r\n                    return false; // rule action called reject() implying the next rule should be tested instead.\r\n                }\r\n                return false;\r\n            },\r\n            // return next match in input\r\n            next: function () {\r\n                if (this.done) {\r\n                    return this.EOF;\r\n                }\r\n                if (!this._input) {\r\n                    this.done = true;\r\n                }\r\n                var token, match, tempMatch, index;\r\n                if (!this._more) {\r\n                    this.yytext = '';\r\n                    this.match = '';\r\n                }\r\n                var rules = this._currentRules();\r\n                for (var i = 0; i < rules.length; i++) {\r\n                    tempMatch = this._input.match(this.rules[rules[i]]);\r\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        match = tempMatch;\r\n                        index = i;\r\n                        if (this.options.backtrack_lexer) {\r\n                            token = this.test_match(tempMatch, rules[i]);\r\n                            if (token !== false) {\r\n                                return token;\r\n                            }\r\n                            else if (this._backtrack) {\r\n                                match = false;\r\n                                continue; // rule action called reject() implying a rule MISmatch.\r\n                            }\r\n                            else {\r\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (!this.options.flex) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (match) {\r\n                    token = this.test_match(match, rules[index]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    }\r\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                    return false;\r\n                }\r\n                if (this._input === \"\") {\r\n                    return this.EOF;\r\n                }\r\n                else {\r\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                }\r\n            },\r\n            // return next match that has a token\r\n            lex: function lex() {\r\n                var r = this.next();\r\n                if (r) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    return this.lex();\r\n                }\r\n            },\r\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n            begin: function begin(condition) {\r\n                this.conditionStack.push(condition);\r\n            },\r\n            // pop the previously active lexer condition state off the condition stack\r\n            popState: function popState() {\r\n                var n = this.conditionStack.length - 1;\r\n                if (n > 0) {\r\n                    return this.conditionStack.pop();\r\n                }\r\n                else {\r\n                    return this.conditionStack[0];\r\n                }\r\n            },\r\n            // produce the lexer rule set which is active for the currently active lexer condition state\r\n            _currentRules: function _currentRules() {\r\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n                }\r\n                else {\r\n                    return this.conditions[\"INITIAL\"].rules;\r\n                }\r\n            },\r\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n            topState: function topState(n) {\r\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n                if (n >= 0) {\r\n                    return this.conditionStack[n];\r\n                }\r\n                else {\r\n                    return \"INITIAL\";\r\n                }\r\n            },\r\n            // alias for begin(condition)\r\n            pushState: function pushState(condition) {\r\n                this.begin(condition);\r\n            },\r\n            // return the number of states currently on the stack\r\n            stateStackSize: function stateStackSize() {\r\n                return this.conditionStack.length;\r\n            },\r\n            options: { \"case-insensitive\": true },\r\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                var YYSTATE = YY_START;\r\n                switch ($avoiding_name_collisions) {\r\n                    case 0: /* skip whitespace */\r\n                        break;\r\n                    case 1:\r\n                        return 49;\r\n                        break;\r\n                    case 2:\r\n                        return 12;\r\n                        break;\r\n                    case 3:\r\n                        return \"dot\";\r\n                        break;\r\n                    case 4:\r\n                        return \"attr\";\r\n                        break;\r\n                    case 5:\r\n                        return \"corA\";\r\n                        break;\r\n                    case 6:\r\n                        return \"corC\";\r\n                        break;\r\n                    case 7:\r\n                        return \"andSelect\";\r\n                        break;\r\n                    case 8:\r\n                        return \"dospuntos\";\r\n                        break;\r\n                    case 9:\r\n                        return \"parA\";\r\n                        break;\r\n                    case 10:\r\n                        return \"parC\";\r\n                        break;\r\n                    case 11:\r\n                        return 20;\r\n                        break;\r\n                    case 12:\r\n                        return \"mas\";\r\n                        break;\r\n                    case 13:\r\n                        return \"menos\";\r\n                        break;\r\n                    case 14:\r\n                        return \"div\";\r\n                        break;\r\n                    case 15:\r\n                        return 45;\r\n                        break;\r\n                    case 16:\r\n                        return \"gte\";\r\n                        break;\r\n                    case 17:\r\n                        return 46;\r\n                        break;\r\n                    case 18:\r\n                        return 48;\r\n                        break;\r\n                    case 19:\r\n                        return \"nequal\";\r\n                        break;\r\n                    case 20:\r\n                        return \"or\";\r\n                        break;\r\n                    case 21:\r\n                        return \"and\";\r\n                        break;\r\n                    case 22:\r\n                        return \"mod\";\r\n                        break;\r\n                    case 23:\r\n                        return \"ancestorSelf\";\r\n                        break;\r\n                    case 24:\r\n                        return \"ancestor\";\r\n                        break;\r\n                    case 25:\r\n                        return \"attribute\";\r\n                        break;\r\n                    case 26:\r\n                        return \"child\";\r\n                        break;\r\n                    case 27:\r\n                        return \"descendantSelf\";\r\n                        break;\r\n                    case 28:\r\n                        return \"descendant\";\r\n                        break;\r\n                    case 29:\r\n                        return \"followingSib\";\r\n                        break;\r\n                    case 30:\r\n                        return \"following\";\r\n                        break;\r\n                    case 31:\r\n                        return \"namespace\";\r\n                        break;\r\n                    case 32:\r\n                        return \"parent\";\r\n                        break;\r\n                    case 33:\r\n                        return \"precedSib\";\r\n                        break;\r\n                    case 34:\r\n                        return \"preced\";\r\n                        break;\r\n                    case 35:\r\n                        return \"self\";\r\n                        break;\r\n                    case 36:\r\n                        return \"lastFunc\";\r\n                        break;\r\n                    case 37:\r\n                        return \"positionFunc\";\r\n                        break;\r\n                    case 38:\r\n                        return \"nodeFunc\";\r\n                        break;\r\n                    case 39:\r\n                        return \"textFunc\";\r\n                        break;\r\n                    case 40:\r\n                        return 56;\r\n                        break;\r\n                    case 41:\r\n                        return 57;\r\n                        break;\r\n                    case 42:\r\n                        return 8;\r\n                        break;\r\n                    case 43:\r\n                        return 58;\r\n                        break;\r\n                    case 44:\r\n                        return 59;\r\n                        break;\r\n                    case 45:\r\n                        console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                        break;\r\n                    case 46:\r\n                        return 5;\r\n                        break;\r\n                }\r\n            },\r\n            rules: [/^(?:\\s+)/i, /^(?:=)/i, /^(?:\\/)/i, /^(?:\\.)/i, /^(?:@)/i, /^(?:\\[)/i, /^(?:\\])/i, /^(?:\\|)/i, /^(?:::)/i, /^(?:\\()/i, /^(?:\\))/i, /^(?:\\*)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:div\\b)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:!=)/i, /^(?:or\\b)/i, /^(?:and\\b)/i, /^(?:mod\\b)/i, /^(?:ancestor-or-self\\b)/i, /^(?:ancestor\\b)/i, /^(?:attribute\\b)/i, /^(?:child\\b)/i, /^(?:descendant-or-self\\b)/i, /^(?:descendant\\b)/i, /^(?:following-sibling\\b)/i, /^(?:following\\b)/i, /^(?:namespace\\b)/i, /^(?:parent\\b)/i, /^(?:preceding-sibling\\b)/i, /^(?:preceding\\b)/i, /^(?:self\\b)/i, /^(?:last\\(\\))/i, /^(?:position\\(\\))/i, /^(?:node\\(\\))/i, /^(?:text\\(\\))/i, /^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i, /^(?:[0-9]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ.-]*)/i, /^(?:(\"((\\\\([\\'\\\"\\\\]))|([^\\\"\\\\]+))*\"))/i, /^(?:('((\\\\([\\'\\\"\\\\]))|([^\\'\\\\]))*'))/i, /^(?:.)/i, /^(?:$)/i],\r\n            conditions: { \"comment\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], \"inclusive\": true } }\r\n        });\r\n        return lexer;\r\n    })();\r\n    parser.lexer = lexer;\r\n    function Parser() {\r\n        this.yy = {};\r\n    }\r\n    Parser.prototype = parser;\r\n    parser.Parser = Parser;\r\n    return new Parser;\r\n})();\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\n    exports.parser = XPath_GramaticaDesc;\r\n    exports.Parser = XPath_GramaticaDesc.Parser;\r\n    exports.parse = function () { return XPath_GramaticaDesc.parse.apply(XPath_GramaticaDesc, arguments); };\r\n    exports.main = function commonjsMain(args) {\r\n        if (!args[1]) {\r\n            console.log('Usage: ' + args[0] + ' FILE');\r\n            process.exit(1);\r\n        }\r\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n        return exports.parser.parse(source);\r\n    };\r\n    if (typeof module !== 'undefined' && require.main === module) {\r\n        exports.main(process.argv.slice(1));\r\n    }\r\n}\r\n","export class Nodo {\r\n    constructor(nombre, tipo, linea, columna, predicado, tipoAxis, nodeTest) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.tipo = tipo;\r\n        this.nombre = nombre;\r\n        this.predicado = predicado;\r\n        this.fromRoot = true;\r\n        this.tipoAxis = tipoAxis;\r\n        this.NodeTest = nodeTest;\r\n    }\r\n    isFromRoot() {\r\n        return this.fromRoot;\r\n    }\r\n    setFromRoot(fromRoot) {\r\n        this.fromRoot = fromRoot;\r\n    }\r\n    getValorInicial() {\r\n        return this.nombre;\r\n    }\r\n    getValor() {\r\n        if (this.NodeTest != undefined) {\r\n            return this.NodeTest.getNombre();\r\n        }\r\n        return this.nombre;\r\n    }\r\n    getNombre() {\r\n        return this.nombre;\r\n    }\r\n    getPredicado() {\r\n        if (this.NodeTest != undefined) {\r\n            return this.NodeTest.getPredicado();\r\n        }\r\n        return this.predicado;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    isAxis() {\r\n        if (this.tipoAxis != undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getTipoAxis() {\r\n        return this.tipoAxis;\r\n    }\r\n}\r\nexport var TipoNodo;\r\n(function (TipoNodo) {\r\n    TipoNodo[TipoNodo[\"IDENTIFIER\"] = 0] = \"IDENTIFIER\";\r\n    TipoNodo[TipoNodo[\"ATRIBUTO\"] = 1] = \"ATRIBUTO\";\r\n    TipoNodo[TipoNodo[\"DOT\"] = 2] = \"DOT\";\r\n    TipoNodo[TipoNodo[\"DOTDOT\"] = 3] = \"DOTDOT\";\r\n    TipoNodo[TipoNodo[\"ASTERISCO\"] = 4] = \"ASTERISCO\";\r\n    TipoNodo[TipoNodo[\"AXIS\"] = 5] = \"AXIS\";\r\n    TipoNodo[TipoNodo[\"FUNCION\"] = 6] = \"FUNCION\";\r\n    TipoNodo[TipoNodo[\"NODOERROR\"] = 7] = \"NODOERROR\";\r\n})(TipoNodo || (TipoNodo = {}));\r\nexport var TipoAxis;\r\n(function (TipoAxis) {\r\n    TipoAxis[TipoAxis[\"ANCESTOR\"] = 0] = \"ANCESTOR\";\r\n    TipoAxis[TipoAxis[\"ANCESTORORSELF\"] = 1] = \"ANCESTORORSELF\";\r\n    TipoAxis[TipoAxis[\"ATTRIBUTE\"] = 2] = \"ATTRIBUTE\";\r\n    TipoAxis[TipoAxis[\"CHILD\"] = 3] = \"CHILD\";\r\n    TipoAxis[TipoAxis[\"DESCENDANT\"] = 4] = \"DESCENDANT\";\r\n    TipoAxis[TipoAxis[\"DESCENDANTORSELF\"] = 5] = \"DESCENDANTORSELF\";\r\n    TipoAxis[TipoAxis[\"FOLLOWING\"] = 6] = \"FOLLOWING\";\r\n    TipoAxis[TipoAxis[\"FOLLOWINGSIBLING\"] = 7] = \"FOLLOWINGSIBLING\";\r\n    TipoAxis[TipoAxis[\"PARENT\"] = 8] = \"PARENT\";\r\n    TipoAxis[TipoAxis[\"PRECEDING\"] = 9] = \"PRECEDING\";\r\n    TipoAxis[TipoAxis[\"PRECEDINGSIBLING\"] = 10] = \"PRECEDINGSIBLING\";\r\n    TipoAxis[TipoAxis[\"SELF\"] = 11] = \"SELF\";\r\n    TipoAxis[TipoAxis[\"NAMESPACE\"] = 12] = \"NAMESPACE\";\r\n})(TipoAxis || (TipoAxis = {}));\r\n","import React, { Component } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/xquery/xquery'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(props)\r\n        this.state = {\r\n            open: true,\r\n            language: this.props.language,\r\n            displayName: this.props.displayName,\r\n            value: this.props.value,\r\n            onChange: this.props.onChange,\r\n        }\r\n    }\r\n\r\n    handleChange = (editor, data, value) => {\r\n        //console.log(value);\r\n        this.props.onChange(value)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={`editor-container`}>\r\n                <div className=\"editor-title\">\r\n                    {this.state.displayName}\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => this.setState({open: !this.state.open})}\r\n                    >\r\n                    <FontAwesomeIcon icon={this.state.open ? faCompressAlt : faExpandAlt} />\r\n                    </button>\r\n                </div>\r\n                <ControlledEditor\r\n                    onBeforeChange={this.handleChange}\r\n                    value={this.props.value}\r\n                    className=\"code-mirror-wrapper\"\r\n                    options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: this.props.language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import * as XMLGramAsc from './Gramatica/XML_GramaticaAsc';\r\nimport { Entorno } from './AST/Entorno';\r\nimport { Objeto } from './XML/Objeto';\r\nimport { Atributo } from './XML/Atributo';\r\nimport * as XMLGramDesc from './Gramatica/XML_GramaticaDesc';\r\nimport errores from './Global/ListaError';\r\nimport * as XPathGramAsc from './Gramatica/XPath_GramaticaAsc';\r\nimport * as XPathGramDesc from \"./Gramatica/XPath_GramaticaDesc\";\r\nimport { cstXmlAsc, cstXmlDesc } from './Reporte/CST';\r\n//const XPathGramAsc = require('../XPath_GramaticaAsc');\r\n//const XPathGramDesc = require('../XPath_GramaticaDesc');\r\nclass Analizador {\r\n    constructor() {\r\n        this.global = new Entorno('global', null, null);\r\n        errores.limpiar();\r\n        this.indice = 0;\r\n        if (typeof Analizador._instance === \"object\") {\r\n            return Analizador._instance;\r\n        }\r\n        Analizador._instance = this;\r\n        return this;\r\n    }\r\n    static getInstance() {\r\n        return this._instance;\r\n    }\r\n    iniciarVariables() {\r\n        this.global = new Entorno('global', null, null);\r\n        errores.limpiar();\r\n    }\r\n    xmlDescendente(entrada) {\r\n        console.log(\"---GRAMATICA DESCENDENTE---\");\r\n        cstXmlDesc.id = 0;\r\n        const objetos = XMLGramDesc.parse(entrada);\r\n        objetos.forEach((elem) => {\r\n            if (elem instanceof Objeto || elem instanceof Atributo) {\r\n                elem.ejecutar(this.global);\r\n            }\r\n        });\r\n        console.log(this.global);\r\n        console.log(errores);\r\n    }\r\n    xmlAscendente(entrada) {\r\n        console.log(\"---GRAMATICA ASCENDENTE---\");\r\n        cstXmlAsc.id = 0;\r\n        const objetos = XMLGramAsc.parse(entrada);\r\n        this.global = new Entorno('global', null, null);\r\n        if (objetos !== null) {\r\n            objetos.forEach((elem) => {\r\n                console.log('Elemento: ' + elem);\r\n                if (elem instanceof Objeto || elem instanceof Atributo) {\r\n                    elem.ejecutar(this.global);\r\n                }\r\n            });\r\n        }\r\n        console.log(this.global);\r\n        console.log(errores);\r\n        /*global.tsimbolos.forEach((elem:any) => {\r\n          console.log(elem);\r\n        });*/\r\n    }\r\n    XPathAscendente(entrada) {\r\n        console.log(\"-- XPATH ASCENDENTE -- \");\r\n        const consultas = XPathGramAsc.parse(entrada);\r\n        let salida = \"\";\r\n        console.log(\"---------------------------------------\");\r\n        consultas.forEach((elem) => {\r\n            console.log(\"CONSULTA: \" + elem.ToString());\r\n            let resultado = elem.ejecutar(this.global);\r\n            salida += resultado;\r\n            console.log(\"-----------RESULTADO----------------\");\r\n            console.log(resultado);\r\n            console.log(\"---------------FIN---------------------\");\r\n        });\r\n        return salida;\r\n    }\r\n    XPathDescendente(entrada) {\r\n        console.log(\"-- XPATH DESCENDENTE -- \");\r\n        const consultas = XPathGramDesc.parse(entrada);\r\n        let salida = \"\";\r\n        console.log(\"---------------------------------------\");\r\n        consultas.forEach((elem) => {\r\n            console.log(\"CONSULTA: \" + elem.ToString());\r\n            let resultado = elem.ejecutar(this.global);\r\n            salida += resultado;\r\n            console.log(\"-----------RESULTADO----------------\");\r\n            console.log(resultado);\r\n            console.log(\"---------------FIN---------------------\");\r\n        });\r\n        return salida;\r\n    }\r\n    getTablaSimbolos() {\r\n        return this.global;\r\n    }\r\n    getErrores() {\r\n        let err = '';\r\n        errores.listaError.forEach((elem) => {\r\n            err = err + elem.getMensaje() + '\\n';\r\n        });\r\n        return err;\r\n    }\r\n    getRepTablaSimbolos() {\r\n        let cadenaDot = '';\r\n        let tabla = this.global.tsimbolos;\r\n        this.indice = 0;\r\n        cadenaDot = 'digraph {'\r\n            + 'tbl ['\r\n            + 'shape=plaintext,'\r\n            + 'label=<'\r\n            + '<table border=\"0\" cellborder=\"1\" color=\"#ddd\" cellspacing=\"0\">'\r\n            + '<tr bgcolor=\"#04AA6D\">'\r\n            + '<td><b>NO.</b></td>'\r\n            + '<td><b>NOMBRE</b></td>'\r\n            + '<td><b>TIPO</b></td>'\r\n            + '<td><b>AMBITO</b></td>'\r\n            + '<td><b>NODO</b></td>'\r\n            + '<td><b>VALOR</b></td>'\r\n            + '<td><b>FILA</b></td><td><b>COLUMNA</b></td>'\r\n            + '</tr>';\r\n        cadenaDot = cadenaDot + this.getSimbolosEntorno(this.global);\r\n        cadenaDot = cadenaDot + '</table>'\r\n            + '>];'\r\n            + '}';\r\n        return cadenaDot;\r\n    }\r\n    getSimbolosEntorno(entrada) {\r\n        let simbolos = '';\r\n        entrada.tsimbolos.forEach((elem) => {\r\n            if (elem.valor.valor instanceof Entorno) {\r\n                this.indice++;\r\n                simbolos = simbolos\r\n                    + '<tr>'\r\n                    + '<td>' + this.indice + '</td>'\r\n                    + '<td>' + elem.valor.nombre + '</td>'\r\n                    + '<td>' + this.getTipoDato(elem.valor.tipo) + '</td>'\r\n                    + '<td>' + entrada.nombre + '</td>'\r\n                    + '<td>' + elem.nombre + '</td>'\r\n                    + '<td>' + elem.valor.valor.toString().replace('&', 'and') + '</td>'\r\n                    + '<td>' + elem.valor.linea + '</td>'\r\n                    + '<td>' + elem.valor.columna + '</td>'\r\n                    + '</tr>';\r\n                simbolos = simbolos + this.getSimbolosEntorno(elem.valor.valor);\r\n            }\r\n            else {\r\n                if (elem.valor.valor !== false) {\r\n                    this.indice++;\r\n                    simbolos = simbolos\r\n                        + '<tr>'\r\n                        + '<td>' + this.indice + '</td>'\r\n                        + '<td>' + elem.valor.nombre + '</td>'\r\n                        + '<td>' + this.getTipoDato(elem.valor.tipo) + '</td>'\r\n                        + '<td>' + entrada.nombre + '</td>'\r\n                        + '<td>' + elem.nombre + '</td>'\r\n                        + '<td>' + elem.valor.valor.toString().replace('&', 'and') + '</td>'\r\n                        + '<td>' + elem.valor.linea + '</td>'\r\n                        + '<td>' + elem.valor.columna + '</td>'\r\n                        + '</tr>';\r\n                }\r\n            }\r\n        });\r\n        return simbolos;\r\n    }\r\n    getTipoDato(t) {\r\n        switch (t) {\r\n            case 0:\r\n                return 'Texto';\r\n            case 1:\r\n                return 'Cadena';\r\n            case 2:\r\n                return 'Etiqueta';\r\n            case 3:\r\n                return 'Atributo';\r\n        }\r\n        ;\r\n        return '';\r\n    }\r\n    getRepErrores() {\r\n        let cadenaDot = '';\r\n        let indice = 0;\r\n        cadenaDot = 'digraph {'\r\n            + 'tbl ['\r\n            + 'shape=plaintext,'\r\n            + 'label=<'\r\n            + '<table border=\"0\" cellborder=\"1\" color=\"blue\" cellspacing=\"0\">'\r\n            + '<tr>'\r\n            + '<td>No.</td><td>Tipo</td><td>Descripcion</td><td>Linea</td><td>Columna</td>'\r\n            + '</tr>';\r\n        errores.listaError.forEach((elem) => {\r\n            indice++;\r\n            cadenaDot = cadenaDot\r\n                + '<tr>'\r\n                + '<td>' + indice + '</td>'\r\n                + '<td>' + elem.getTipo() + '</td>'\r\n                + '<td>' + elem.getDescripcion() + '</td>'\r\n                + '<td>' + elem.getLinea() + '</td>'\r\n                + '<td>' + elem.getColumna() + '</td>'\r\n                + '</tr>';\r\n        });\r\n        cadenaDot = cadenaDot + '</table>'\r\n            + '>];'\r\n            + '}';\r\n        return cadenaDot;\r\n    }\r\n    getCSTXmlAsc() {\r\n        let cadenaDot = 'digraph {';\r\n        cadenaDot = cadenaDot + this.recorridoCst(cstXmlAsc.getRaiz());\r\n        cadenaDot = cadenaDot + '}';\r\n        return cadenaDot;\r\n    }\r\n    getCSTXmlDesc() {\r\n        let cadenaDot = 'digraph {';\r\n        cadenaDot += this.recorridoCst(cstXmlDesc.getRaiz());\r\n        cadenaDot += '}';\r\n        return cadenaDot;\r\n    }\r\n    recorridoCst(nodo) {\r\n        let concatena = '';\r\n        if (nodo !== null) {\r\n            concatena += nodo.id + '[label=\"' + nodo.valor + '\"];\\n';\r\n            nodo.hijos.forEach((hijo) => {\r\n                concatena += this.recorridoCst(hijo);\r\n                concatena += nodo.id + ' -> ' + hijo.id + ';\\n';\r\n            });\r\n        }\r\n        return concatena;\r\n    }\r\n}\r\nconst analizador = new Analizador();\r\nexport default analizador;\r\n/*\r\nfunction xpathAscendente(entrada:string){\r\n  console.log(\"-- XPATH ASCENDENTE -- \")\r\n  const objetos = XPathGramAsc.parse(entrada);\r\n\r\n  objetos.forEach((elem: any) => {\r\n      console.log(elem);\r\n  });\r\n}\r\n\r\nfunction xpathDescendente(entrada:string){\r\n  console.log(\"-- XPATH DESCENDENTE -- \")\r\n  const objetos = XPathGramDesc.parse(entrada);\r\n\r\n  objetos.forEach((elem: any) => {\r\n      console.log(elem);\r\n  });\r\n}\r\n\r\nXPathAscendente(`\r\nbookstore/book\r\n|\r\n//@category\r\n`);\r\n*/\r\n/*\r\nxmlAscendente(`\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<bookstore>\r\n  <book category=\"children\">\r\n    <title>Harry Potter</title>\r\n    <author>J K. Rowlin</author>\r\n    <price at=\"asd\"></price>\r\n    <hola> </hola>\r\n  </book>\r\n  <book category=\"web\">\r\n    <title>Learning XML</title>\r\n    <author>Erik T. Ray</author>\r\n    <year>2003</year>\r\n    <price>39.95 &lt 30</price>\r\n  </book>\r\n</bookstore>\r\n`);*/\r\n//export default Analizador;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../Styles/App.css';\r\nimport Editor from './Editor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileAlt, faFileUpload, faPlay, faSave } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {Graphviz} from 'graphviz-react';\r\n\r\nimport analizador from '../Analizador/indexAnalizador';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    open: false,\r\n    modalOpen: false,\r\n    modalOpenCst: false,\r\n    alertOpen: false,\r\n    opcion: '',\r\n    consoleText: '',\r\n    fileName: '',\r\n    xml: '',\r\n    xpath: '',\r\n    fileDownloadUrl: null,\r\n    selectedOption: '',\r\n    dot:`digraph {}`,\r\n  }\r\n\r\n  abrirModal = () => {\r\n    this.setState({modalOpen: !this.state.modalOpen});\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({open: false});\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({open: true});\r\n  }\r\n  \r\n  handleXML = (value) => {\r\n    this.setState({xml: value});\r\n  }\r\n\r\n  handleXPath = (value) => {\r\n    this.setState({xpath: value});\r\n  }\r\n\r\n  handleDot = (value) => {\r\n    this.setState({dot: value});\r\n  }\r\n\r\n  nuevo = () => {\r\n    this.setState({fileName: '', xml: '', xpath: ''});\r\n  }\r\n\r\n  upload = (event) => {\r\n  \tevent.preventDefault();\r\n    this.dofileUpload.click()\r\n  }\r\n\r\n  open = (evt) => {\r\n    const fileObj = evt.target.files[0];\r\n    const reader = new FileReader();\r\n        \r\n    let fileloaded = e => {\r\n      // e.target.result is the file's content as text\r\n      const fileContents = e.target.result;\r\n      this.setState ({xml: fileContents, fileName: fileObj.name})\r\n    }\r\n    \r\n    // Mainline of the method\r\n    fileloaded = fileloaded.bind(this);\r\n    reader.onload = fileloaded;\r\n    reader.readAsText(fileObj);  \r\n  }\r\n\r\n  downloadXML = (event) => {\r\n    event.preventDefault();\r\n  \t// Prepare the file\r\n    let output;\r\n    output = this.state.xml;\r\n    // Download it\r\n    const blob = new Blob([output]);\r\n    const fileDownloadUrl = URL.createObjectURL(blob);\r\n    if(this.state.fileName === null || this.state.fileName === ''){\r\n      var hoy = new Date();\r\n      var dd = hoy.getDate();\r\n      var mm = hoy.getMonth() + 1;\r\n      var yyyy = hoy.getFullYear();\r\n      var HH = hoy.getHours();\r\n      var MM = hoy.getMinutes();\r\n      var formato = dd + \"_\" + mm + \"_\" + yyyy + \"_\" + HH + \"_\" + MM;\r\n      this.setState({fileName: formato})\r\n    }\r\n    this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n      () => {\r\n        this.dofileDownload.click(); \r\n        URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n        this.setState({fileDownloadUrl: \"\"})\r\n    })    \r\n  }\r\n\r\n  downloadXPath = (event) => {\r\n    event.preventDefault();\r\n  \t// Prepare the file\r\n    let output;\r\n    output = this.state.xml;\r\n    // Download it\r\n    const blob = new Blob([output]);\r\n    const fileDownloadUrl = URL.createObjectURL(blob);\r\n    if(this.state.fileName === null || this.state.fileName === ''){\r\n      var hoy = new Date();\r\n      var dd = hoy.getDate();\r\n      var mm = hoy.getMonth() + 1;\r\n      var yyyy = hoy.getFullYear();\r\n      var HH = hoy.getHours();\r\n      var MM = hoy.getMinutes();\r\n      var formato = dd + \"_\" + mm + \"_\" + yyyy + \"_\" + HH + \"_\" + MM;\r\n      this.setState({fileName: formato})\r\n    }\r\n    this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n      () => {\r\n        this.dofileDownload.click(); \r\n        URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n        this.setState({fileDownloadUrl: \"\"})\r\n    })    \r\n  }\r\n\r\n  onValueChange = (event) => {\r\n    this.setState({\r\n      selectedOption: event.target.value\r\n    });\r\n  }\r\n\r\n  formSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.selectedOption)\r\n  }\r\n\r\n  analizar = (event) => {\r\n    this.abrirModal();\r\n    let resultado = '';\r\n    switch(this.state.selectedOption){\r\n      case 'Ascendente':\r\n        analizador.xmlAscendente(this.state.xml);\r\n        resultado = this.state.xpath !== ''?analizador.XPathAscendente(this.state.xpath):'';\r\n        break;\r\n      case 'Descendente':\r\n        analizador.xmlDescendente(this.state.xml);\r\n        resultado = this.state.xpath !== ''?analizador.XPathDescendente(this.state.xpath):'';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({consoleText:resultado});\r\n    if (this.state.selectedOption !== '') \r\n      this.setState({alertOpen: true});\r\n  }\r\n\r\n  reporteTablaSimbolos = (event) => {\r\n    this.setState({dot:analizador.getRepTablaSimbolos()});\r\n  }\r\n\r\n  reporteListaErrores = (event) => {\r\n    this.setState({dot:analizador.getRepErrores()});\r\n  }\r\n\r\n  mostrarCst = () => {\r\n    this.setState({modalOpenCst: !this.state.modalOpenCst});\r\n    //this.setState({dot:analizador.getCSTXmlAsc()});\r\n  }\r\n\r\n  reporteCst = (event) => {\r\n    this.mostrarCst();\r\n    switch(this.state.selectedOption){\r\n      case 'Xml Ascendente':\r\n        this.setState({dot:analizador.getCSTXmlAsc()});\r\n        break;\r\n      case 'Xml Descendente':\r\n        this.setState({dot:analizador.getCSTXmlDesc()});\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const modalStyles={\r\n      position: \"absolute\",\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n    }\r\n    return (\r\n      <>\r\n      <div className=\"App\" style={{width:\"100%\"}}>\r\n        <header className=\"App-header\">\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className=\"title\">\r\n                TytusX\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </header>\r\n        <div className=\"App-body\">\r\n          <Grid container spacing={3}>\r\n          <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <div className=\"row\">\r\n                <div> \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\"}} onClick={this.nuevo}>\r\n                    <FontAwesomeIcon icon={faFileAlt} /> \r\n                  </button>\r\n                  <button onClick={this.upload} className=\"Boton\" style={{backgroundColor:\"white\", color:\"yellowgreen\"}}>\r\n                    <FontAwesomeIcon icon={faFileUpload} /> \r\n                  </button> \r\n                  <input type=\"file\" style={{display:'none'}}\r\n                    multiple={false}\r\n                    accept=\".xml,application/xml\"\r\n                    onChange={evt => this.open(evt)}\r\n                    ref={e=>this.dofileUpload = e}\r\n                  />\r\n                  <div style={{display:\"inline-block\", padding:'0px 10px 0px 10px'}}>\r\n                    <Typography style={{color:\"black\"}}>Guardar XML</Typography>\r\n                    <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.downloadXML}>\r\n                      <FontAwesomeIcon icon={faSave} />\r\n                    </button> \r\n                    <a style={{display:'none'}}\r\n                        download={this.state.fileName}\r\n                        href={this.state.fileDownloadUrl}\r\n                        ref={e=>this.dofileDownload = e}>download it</a>\r\n                  </div> \r\n\r\n                  <div style={{display:\"inline-block\", padding:'0px 5px 0px 5px'}}>  \r\n                    <Typography style={{color:\"black\"}}>Guardar XPath</Typography>\r\n                    <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"gray\"}} onClick={this.downloadXPath}>\r\n                      <FontAwesomeIcon icon={faSave} /> \r\n                    </button>\r\n                    <a style={{display:'none'}}\r\n                        download={this.state.fileName}\r\n                        href={this.state.fileDownloadUrl}\r\n                        ref={e=>this.dofileDownload = e}>download it</a>\r\n                  </div>        \r\n                  <button className=\"Boton\" style={{backgroundColor:\"white\", color:\"green\"}} onClick={this.abrirModal}>\r\n                    <FontAwesomeIcon icon={faPlay} /> \r\n                  </button>     \r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={5}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/>\r\n                <Editor\r\n                  language=\"xml\"\r\n                  displayName=\"XML\"\r\n                  value={this.state.xml}\r\n                  onChange={this.handleXML}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/>\r\n                <Editor \r\n                  language=\"xquery\"\r\n                  displayName=\"XPATH\"\r\n                  value={this.state.xpath}\r\n                  onChange={this.handleXPath}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\"  /*style={{background: 'rgba(96,113,121,0.3)'}}*/>          \r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                      <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>CONSOLA</InputLabel> \r\n                      <div id=\"consola\">\r\n                        <textarea \r\n                          id=\"txtConsola\" \r\n                          value={this.state.consoleText} \r\n                          name=\"txtConsola\" \r\n                          disabled={true} \r\n                          className=\"consola\" \r\n                          rows=\"8\" style={{width: \"100%\"}}/>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper className=\"paper\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <br></br>\r\n                    <InputLabel style={{fontWeight: 'bold', fontFamily: 'sans-serif'}}>Reportes</InputLabel>\r\n                    <Button className=\"btn bg-primary\" onClick={this.reporteTablaSimbolos}>Tabla de Simbolos</Button> |\r\n                    <Button className=\"btn bg-secondary\">AST</Button> |\r\n                    <Button className=\"btn bg-success\" onClick={this.mostrarCst}>CST</Button> |\r\n                    <Button className=\"btn bg-danger\" onClick={this.reporteListaErrores}>Lista de Errores</Button> |\r\n                    <Button className=\"btn bg-warning\">GRAMATICA</Button>\r\n                    <br></br>\r\n                    <div style={{borderStyle: 'solid', borderRadius: '2em'}}>\r\n                      <Graphviz dot={this.state.dot} options={{fit:true, width:950,zoom: true}}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Paper> \r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      <Collapse in={this.state.alertOpen} style={{position: 'fixed', top: '90%', left:'50%', transform: 'translate(-50%, -50%)'}}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                this.setState({alertOpen: false});\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          Analizado correctamente!\r\n        </Alert>\r\n      </Collapse>\r\n\r\n      <Modal isOpen={this.state.modalOpen} style={modalStyles}>\r\n      <ModalHeader>\r\n        Analizar\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={this.formSubmit}>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"Ascendente\"\r\n                checked={this.state.selectedOption === \"Ascendente\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              Ascendente\r\n            </label>\r\n          </div>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"Descendente\"\r\n                checked={this.state.selectedOption === \"Descendente\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              Descendente\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.analizar}>Analizar</Button>\r\n          <Button color=\"secondary\" onClick={() => {this.setState({selectedOption: ''}); this.abrirModal();}}>Cerrar</Button>\r\n      </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n      <Modal isOpen={this.state.modalOpenCst} style={modalStyles}>\r\n      <ModalHeader>\r\n        Reporte CST\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={this.formSubmit}>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"Xml Ascendente\"\r\n                checked={this.state.selectedOption === \"Xml Ascendente\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              Xml Ascendente\r\n            </label>\r\n          </div>\r\n          <div className=\"radio\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"Xml Descendente\"\r\n                checked={this.state.selectedOption === \"Xml Descendente\"}\r\n                onChange={this.onValueChange}\r\n              />\r\n              Xml Descendente\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.reporteCst}>Generar Reporte</Button>\r\n          <Button color=\"secondary\" onClick={() => {this.setState({selectedOption: ''}); this.mostrarCst();}}>Cerrar</Button>\r\n      </ModalFooter>\r\n      </Modal>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n","export var Tipo;\r\n(function (Tipo) {\r\n    Tipo[Tipo[\"STRING\"] = 0] = \"STRING\";\r\n    Tipo[Tipo[\"ETIQUETA\"] = 1] = \"ETIQUETA\";\r\n    Tipo[Tipo[\"ATRIBUTO\"] = 2] = \"ATRIBUTO\";\r\n    Tipo[Tipo[\"ETIQUETA_UNIQUE\"] = 3] = \"ETIQUETA_UNIQUE\";\r\n})(Tipo || (Tipo = {}));\r\n","class CST {\r\n    constructor() {\r\n        this.id = 0;\r\n        this.pila = [];\r\n        this.raiz = null;\r\n    }\r\n    agregarPila(nodo) {\r\n        this.pila.push(nodo);\r\n    }\r\n    obtenerUltimoNodo() {\r\n        return this.pila.pop();\r\n    }\r\n    setRaiz(root) {\r\n        this.raiz = root;\r\n    }\r\n    getRaiz() {\r\n        return this.raiz;\r\n    }\r\n    getId() {\r\n        this.id = this.id + 1;\r\n        return this.id;\r\n    }\r\n}\r\nconst cstXmlAsc = new CST();\r\nconst cstXmlDesc = new CST();\r\nconst cstXpathAsc = new CST();\r\nconst cstXpathDesc = new CST();\r\nexport { cstXmlAsc, cstXmlDesc, cstXpathAsc, cstXpathDesc };\r\n","export class Simbolo {\r\n    constructor(tipo, nombre, valor, linea, columna) {\r\n        this.tipo = tipo;\r\n        this.nombre = nombre;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getTipo() {\r\n        return this.tipo;\r\n    }\r\n    getNombre() {\r\n        return this.nombre;\r\n    }\r\n    getValor() {\r\n        return this.valor;\r\n    }\r\n    getLinea() {\r\n        return this.linea;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n}\r\n","import { Entorno } from '../AST/Entorno';\r\nimport { Simbolo } from '../AST/Simbolo';\r\nimport { Tipo } from '../AST/Tipo';\r\nexport class Objeto {\r\n    constructor(id, texto, linea, columna, listaAtributos, listaO, isUnica) {\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaAtributos = listaAtributos;\r\n        this.listaObjetos = listaO;\r\n        this.isUnica = isUnica;\r\n    }\r\n    ejecutar(entorno) {\r\n        let local = new Entorno(this.identificador, entorno, entorno.global);\r\n        local.agregarSimbolo('Etiqueta unica', new Simbolo(Tipo.ETIQUETA_UNIQUE, 'Etiqueta unica', this.isUnica, this.linea, this.columna));\r\n        this.listaAtributos.forEach((elem) => {\r\n            elem.ejecutar(local);\r\n        });\r\n        this.listaObjetos.forEach((obj) => {\r\n            obj.ejecutar(local);\r\n        });\r\n        if (this.texto !== '')\r\n            local.agregarSimbolo('Texto', new Simbolo(Tipo.STRING, 'Texto', this.texto, this.linea, this.columna));\r\n        entorno.agregarSimbolo(this.identificador, new Simbolo(this.isUnica ? Tipo.ETIQUETA_UNIQUE : Tipo.ETIQUETA, this.identificador, local, this.linea, this.columna));\r\n    }\r\n}\r\n","import { Simbolo } from \"../AST/Simbolo\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport errores from '../Global/ListaError';\r\nexport class Atributo {\r\n    constructor(id, valor, linea, columna) {\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ejecutar(entorno) {\r\n        /* Se debe verificar que no exista el atributo */\r\n        if (!entorno.existeSimbolo(this.identificador)) {\r\n            entorno.agregarSimbolo(this.identificador, new Simbolo(Tipo.ATRIBUTO, this.identificador, this.valor, this.linea, this.columna));\r\n        }\r\n        else {\r\n            /*  Error semantico */\r\n            errores.agregarError('semantico', 'Ya existe el simbolo ' + this.identificador, this.linea, this.columna);\r\n        }\r\n    }\r\n}\r\n","export default class mierror {\r\n    constructor(tipoError, descripcion, linea, columna) {\r\n        this.tipoError = tipoError;\r\n        this.descripcion = descripcion;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    getTipo() {\r\n        return this.tipoError;\r\n    }\r\n    getDescripcion() {\r\n        return this.descripcion;\r\n    }\r\n    getLinea() {\r\n        return this.linea;\r\n    }\r\n    getColumna() {\r\n        return this.columna;\r\n    }\r\n    getMensaje() {\r\n        return ('Error ' + this.tipoError + ': ' +\r\n            this.descripcion +\r\n            ' en la linea ' + this.linea +\r\n            ' y columna ' + this.columna);\r\n    }\r\n}\r\n","import mierror from './Error';\r\nclass ListaError {\r\n    constructor() {\r\n        this.listaError = new Array();\r\n        if (typeof ListaError._instance === \"object\") {\r\n            return ListaError._instance;\r\n        }\r\n        ListaError._instance = this;\r\n        return this;\r\n    }\r\n    static getInstance() {\r\n        return this._instance;\r\n    }\r\n    agregarError(tipo, descripcion, linea, columna) {\r\n        this.listaError.push(new mierror(tipo, descripcion, linea, columna));\r\n    }\r\n    getSize() {\r\n        return this.listaError.length;\r\n    }\r\n    getError(indice) {\r\n        return this.listaError[indice];\r\n    }\r\n    limpiar() {\r\n        this.listaError = [];\r\n    }\r\n}\r\nconst errores = new ListaError();\r\nexport default errores;\r\n","import { Entorno } from \"../AST/Entorno\";\r\nimport { Tipo } from \"../AST/Tipo\";\r\nimport { TipoPrim } from \"./Primitiva\";\r\nimport errores from '../Global/ListaError';\r\nexport class Operacion {\r\n    constructor(operacion, op_izq, op_der, linea, columna) {\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.op_izq = op_izq;\r\n        this.op_der = op_der;\r\n        this.operacion = operacion;\r\n    }\r\n    getTipo(ent) {\r\n        return this.tipo;\r\n    }\r\n    getValorInicial(ent) {\r\n        return \"\";\r\n    }\r\n    getValor(entorno) {\r\n        if (this.operacion === TipoOperacion.PAR) {\r\n            //Devolver la expresion del parentesis\r\n            let res = this.op_izq.getValor(entorno);\r\n            this.tipo = this.op_izq.getTipo(entorno);\r\n            return res;\r\n        }\r\n        let opIzq;\r\n        let opDer;\r\n        let resultado;\r\n        let aux;\r\n        let valIzq;\r\n        let typeIzq;\r\n        let valDer;\r\n        let typeDer;\r\n        if (this.op_izq.getTipo(entorno) != TipoPrim.ATRIBUTO && this.op_izq.getTipo(entorno) != TipoPrim.CONSULTA) {\r\n            valIzq = this.op_izq.getValor(entorno);\r\n        }\r\n        typeIzq = this.op_izq.getTipo(entorno);\r\n        if (this.op_der.getTipo(entorno) != TipoPrim.ATRIBUTO) {\r\n            valDer = this.op_der.getValor(entorno);\r\n        }\r\n        typeDer = this.op_der.getTipo(entorno);\r\n        if (valIzq === null) {\r\n            if (this.op_izq.getValorInicial(entorno) === entorno.nombre) {\r\n                valIzq = entorno.obtenerSimbolo(this.op_izq.getValorInicial(entorno));\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        switch (this.operacion) {\r\n            case TipoOperacion.SUMA:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede sumar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede sumar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.RESTA:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq - opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede restar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede restar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MULTIPLICACION:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq * opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede multiplicar ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.DIVISION:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq / opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MOD:\r\n                this.tipo = this.tipoDominanteAritmetica(typeIzq, typeDer);\r\n                if (this.tipo === TipoPrim.ERROR)\r\n                    return resultado;\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseInt(valIzq);\r\n                                opDer = parseInt(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq % opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                if (opDer != 0) {\r\n                                    resultado = opIzq % opDer;\r\n                                    return resultado;\r\n                                }\r\n                                errores.agregarError('semantico', 'El denominador debe ser diferente de 0', this.linea, this.columna);\r\n                                return ('Error semantico: El denominador debe ser diferente de 0 en la linea '\r\n                                    + this.linea + ' y columna ' + this.columna);\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            case TipoPrim.DOUBLE:\r\n                                opIzq = parseFloat(valIzq);\r\n                                opDer = parseFloat(valDer);\r\n                                resultado = opIzq + opDer;\r\n                                return resultado;\r\n                            default:\r\n                                errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                    + this.getStringTipo(typeDer)\r\n                                    + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    default:\r\n                        errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                        return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                            + this.getStringTipo(typeDer)\r\n                            + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                }\r\n            case TipoOperacion.MAYORQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    // ej: 3 > position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq > indice && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es mayor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //position > 3\r\n                                    let der = parseInt(valDer);\r\n                                    //Devolver un entorno con los simbolos encontrados\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice > der && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es mayor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() == entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        else {\r\n                            errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                            return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                + this.getStringTipo(typeDer)\r\n                                + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                        }\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MENORQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 < position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq < indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice < der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MAYORIGUALQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 >= position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq >= indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() >= 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice >= der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MAYORIGUALQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.MENORIGUALQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 < position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq <= indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice <= der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.MENORIGUALQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.IGUAL:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 = position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq === indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es menor, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.ATRIBUTO:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valIzq = this.op_izq.getValor(entorno);\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valDer === \"*\" || tmp.getNombre() === valDer)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valIzq === tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valDer = this.op_der.getValor(entorno);\r\n                                //ValIzq es el nombre del atributo que se quiere buscar.\r\n                                valIzq = this.op_izq.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valIzq === \"*\" || tmp.getNombre() === valIzq)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valDer === tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                            case TipoPrim.ATRIBUTO:\r\n                                //Atributo con Atributo:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //ValIzq es el nombre del atributo que se quiere buscar.\r\n                                valIzq = this.op_izq.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporalAT = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padreAT = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padreAT.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valIzq === \"*\" || tmp.getNombre() === valIzq)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valDer === valIzq) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporalAT.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporalAT;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice === der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si son iguales, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.IGUAL, TipoPrim.DOUBLE);\r\n                            case TipoPrim.CADENA:\r\n                                return this.resolverOperacionIdCadena(valIzq, valDer, entorno, TipoOperacion.IGUAL);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.CONSULTA:\r\n                        //Merge /hola/@hola = \"asd\" <-- \r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                let l = this.op_izq.getValorInicial(entorno);\r\n                                let fromR = l[l.length - 1].isFromRoot();\r\n                                let lastNodeName = l[l.length - 1].getNombre();\r\n                                let entConsultaTemp = this.op_izq.getValor(entorno);\r\n                                entTemporal = this.resolverConsultaRecursiva(entConsultaTemp, valDer, lastNodeName, fromR, TipoOperacion.IGUAL);\r\n                                return entTemporal;\r\n                            default:\r\n                                return null;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.DIFERENTEQUE:\r\n                switch (typeIzq) {\r\n                    case TipoPrim.INTEGER:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                break;\r\n                            case TipoPrim.DOUBLE:\r\n                                break;\r\n                            case TipoPrim.FUNCION:\r\n                                //Ver si es position()\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                if (valDer.toLowerCase() == \"position()\") {\r\n                                    //Ejemplo: 3 != position()\r\n                                    let izq = parseInt(valIzq);\r\n                                    //Devolver los entornos que abarcan esto.\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (izq != indice && elem.getNombre() == entorno.nombre) {\r\n                                            //Si es diferente de !=, meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                }\r\n                                else {\r\n                                    errores.agregarError('semantico', 'No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede hacer relacional ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                                }\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.DOUBLE:\r\n                        switch (typeIzq) {\r\n                            case TipoPrim.IDENTIFIER:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                return this.resolverOperacionNumeroId(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.DOUBLE);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    case TipoPrim.CADENA:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.ATRIBUTO:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valIzq = this.op_izq.getValor(entorno);\r\n                                valDer = this.op_der.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valDer === \"*\" || tmp.getNombre() === valDer)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valIzq != tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.ATRIBUTO:\r\n                        switch (typeDer) {\r\n                            case TipoPrim.CADENA:\r\n                                this.tipo = TipoPrim.FUNCION;\r\n                                valDer = this.op_der.getValor(entorno);\r\n                                //ValIzq es el nombre del atributo que se quiere buscar.\r\n                                valIzq = this.op_izq.getValorInicial(entorno);\r\n                                //Esta operacion devuelve un entorno temporan con los elementos encontrados\r\n                                let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                //Obtener entorno padre.\r\n                                let padre = entorno.padre;\r\n                                //Con el padre buscar todos las etiquetas que tengan nombre entorno.nombre\r\n                                padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                        //Se encontro, ver si este elemento tiene el atributo\r\n                                        //  que se encuentre en valDer\r\n                                        let flag = false;\r\n                                        elem.valor.tsimbolos.forEach((c2) => {\r\n                                            let tmp = c2.valor;\r\n                                            if (tmp.getTipo() === Tipo.ATRIBUTO && (valIzq === \"*\" || tmp.getNombre() === valIzq)) {\r\n                                                //Por ultimo comparar, si el valor del atributo\r\n                                                //Es igual a la cadena\r\n                                                if (valDer != tmp.getValor()) {\r\n                                                    //Cadena === valoratributo\r\n                                                    //Se agrega el simbolo. (elem)\r\n                                                    if (!flag) {\r\n                                                        entTemporal.agregarSimbolo(elem.getNombre(), elem);\r\n                                                        flag = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                                return entTemporal;\r\n                        }\r\n                        break;\r\n                    case TipoPrim.FUNCION:\r\n                        //Ver si es position()\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        if (valIzq.toLowerCase() == \"position()\") {\r\n                            switch (typeDer) {\r\n                                case TipoPrim.INTEGER:\r\n                                    //Ej: position() < 3\r\n                                    let der = parseInt(valDer);\r\n                                    //En un entorno temporal, devolver los que corresponden a la busqueda\r\n                                    let entTemporal = new Entorno(\"Temporal\", null, null);\r\n                                    //1. Obtener entorno padre.\r\n                                    let padre = entorno.padre;\r\n                                    //2. Con el padre, ver quienes son mayor a valDer\r\n                                    let indice = 1;\r\n                                    padre.tsimbolos.forEach((e) => {\r\n                                        let elem = e.valor;\r\n                                        if (indice != der && elem.getNombre() === entorno.nombre) {\r\n                                            //Si es diferente de , meter al array de entornos.\r\n                                            entTemporal.agregarSimbolo(entorno.nombre, elem);\r\n                                        }\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                                            indice++;\r\n                                        }\r\n                                    });\r\n                                    return entTemporal;\r\n                                default:\r\n                                    errores.agregarError('semantico', 'No se puede dividir ' + this.getStringTipo(typeIzq) + ' con ' + this.getStringTipo(typeDer), this.linea, this.columna);\r\n                                    return ('Error semantico: No se puede dividir ' + this.getStringTipo(typeIzq) + ' con '\r\n                                        + this.getStringTipo(typeDer)\r\n                                        + ' en la linea ' + this.linea + ' y columna ' + this.columna);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoPrim.IDENTIFIER:\r\n                        this.tipo = TipoPrim.FUNCION;\r\n                        switch (typeDer) {\r\n                            case TipoPrim.INTEGER:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.INTEGER);\r\n                            case TipoPrim.DOUBLE:\r\n                                return this.resolverOperacionIdNumero(valIzq, valDer, entorno, TipoOperacion.DIFERENTEQUE, TipoPrim.DOUBLE);\r\n                            case TipoPrim.IDENTIFIER:\r\n                                break;\r\n                        }\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoOperacion.AND:\r\n                break;\r\n            case TipoOperacion.OR:\r\n                break;\r\n        }\r\n    }\r\n    getStringTipo(operadorTipo) {\r\n        switch (operadorTipo) {\r\n            case TipoPrim.INTEGER:\r\n                return 'entero';\r\n            case TipoPrim.DOUBLE:\r\n                return 'doble';\r\n            case TipoPrim.CADENA:\r\n                return 'cadena';\r\n            case TipoPrim.IDENTIFIER:\r\n                return 'id';\r\n            case TipoPrim.ATRIBUTO:\r\n                return 'atributo';\r\n            case TipoPrim.DOT:\r\n                return 'dot';\r\n            case TipoPrim.BOOLEAN:\r\n                return 'boolean';\r\n            case TipoPrim.FUNCION:\r\n                return \"Funcion mae\";\r\n            case TipoPrim.CONSULTA:\r\n                return \"Consulta\";\r\n            default:\r\n                return \"ERROR\";\r\n        }\r\n    }\r\n    buscarTexto(elem) {\r\n        for (let i = 0; i < elem.valor.tsimbolos.length; i++) {\r\n            let xd = elem.valor.tsimbolos[i].valor;\r\n            if (xd.getTipo() === Tipo.STRING) {\r\n                return xd.getValor();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    tipoDominanteAritmetica(ex1, ex2) {\r\n        if (ex1 == TipoPrim.ERROR || ex2 == TipoPrim.ERROR)\r\n            return TipoPrim.ERROR;\r\n        if (ex1 == TipoPrim.DOUBLE || ex2 == TipoPrim.DOUBLE)\r\n            return TipoPrim.DOUBLE;\r\n        else if (ex1 == TipoPrim.INTEGER || ex2 == TipoPrim.INTEGER)\r\n            return TipoPrim.INTEGER;\r\n        return TipoPrim.ERROR;\r\n    }\r\n    tipoDominanteOperacion(ex1, ex2) {\r\n        if (ex1 == TipoPrim.ERROR || ex2 == TipoPrim.ERROR)\r\n            return TipoPrim.ERROR;\r\n        if (ex1 == TipoPrim.DOUBLE || ex2 == TipoPrim.DOUBLE)\r\n            return TipoPrim.DOUBLE;\r\n        else if (ex1 == TipoPrim.INTEGER || ex2 == TipoPrim.INTEGER)\r\n            return TipoPrim.INTEGER;\r\n        return TipoPrim.ERROR;\r\n    }\r\n    resolverOperacionIdNumero(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        let der;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            der = parseInt(valDer);\r\n        }\r\n        else {\r\n            der = parseFloat(valDer);\r\n        }\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === izq) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        //Ver si el texto se puede castear a NUMERO\r\n                        if (texto != null) {\r\n                            let numCompare = +texto;\r\n                            //Comparar los numeros\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (numCompare > der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (numCompare < der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (numCompare >= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (numCompare <= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (numCompare === der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (numCompare != der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverOperacionIdCadena(valIzq, valDer, entorno, relacional) {\r\n        let der = valDer;\r\n        let izq = valIzq.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === izq) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        der = der.replace(\"\\\"\", \"\");\r\n                        if (texto != null) {\r\n                            //Comparar los textos\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (texto > der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (texto < der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (texto >= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (texto <= der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (texto === der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (texto != der) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n    resolverConsultaRecursiva(entConsultaTemp, valDer, lastNodeName, isFromRoot, op) {\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //Sobre estos ver quienes tienen valDer\r\n        let flag = false;\r\n        entConsultaTemp.tsimbolos.forEach((e) => {\r\n            let elemEnt = e.valor;\r\n            flag = false;\r\n            elemEnt.valor.tsimbolos.forEach((c1) => {\r\n                let elem = c1.valor;\r\n                if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                    elem.valor.tsimbolos.forEach((c2) => {\r\n                        let elemfinal = c2.valor;\r\n                        if (op === TipoOperacion.IGUAL) {\r\n                            if (elemfinal.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || elemfinal.getNombre() === lastNodeName) && elemfinal.getValor() === valDer) {\r\n                                if (!flag) {\r\n                                    entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                    flag = true;\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA && !isFromRoot) {\r\n                                //Buscar recursivamente atributos.\r\n                                let found = this.buscarAtributosRecursivamente(elem, valDer, lastNodeName, op);\r\n                                if (found) {\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (op === TipoOperacion.DIFERENTEQUE) {\r\n                            if (elemfinal.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || elemfinal.getNombre() === lastNodeName) && elemfinal.getValor() !== valDer) {\r\n                                if (!flag) {\r\n                                    entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA && !isFromRoot) {\r\n                                //Buscar recursivamente atributos.\r\n                                let found = this.buscarAtributosRecursivamente(elem, valDer, lastNodeName, op);\r\n                                if (found) {\r\n                                    if (!flag) {\r\n                                        entTemporal.agregarSimbolo(elemEnt.nombre, elemEnt);\r\n                                        flag = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return entTemporal;\r\n    }\r\n    buscarAtributosRecursivamente(elem, valDer, lastNodeName, op) {\r\n        for (let i = 0; i < elem.valor.tsimbolos.length; i++) {\r\n            let at = elem.valor.tsimbolos[i].valor;\r\n            if (op === TipoOperacion.IGUAL) {\r\n                if (at.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || at.getNombre() === lastNodeName) && at.getValor() === valDer) {\r\n                    return true;\r\n                }\r\n                else if (at.getTipo() === Tipo.ETIQUETA) {\r\n                    //Buscar recursivamente atributos.\r\n                    let found = this.buscarAtributosRecursivamente(at, valDer, lastNodeName, op);\r\n                    if (found) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else if (op === TipoOperacion.DIFERENTEQUE) {\r\n                if (at.getTipo() === Tipo.ATRIBUTO && (lastNodeName === \"*\" || at.getNombre() === lastNodeName) && at.getValor() !== valDer) {\r\n                    return true;\r\n                }\r\n                else if (at.getTipo() === Tipo.ETIQUETA) {\r\n                    //Buscar recursivamente atributos.\r\n                    let found = this.buscarAtributosRecursivamente(at, valDer, lastNodeName, op);\r\n                    if (found) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    resolverOperacionNumeroId(valIzq, valDer, entorno, relacional, TipoNumero) {\r\n        let izq;\r\n        if (TipoNumero === TipoPrim.INTEGER) {\r\n            izq = parseInt(valIzq);\r\n        }\r\n        else {\r\n            izq = parseFloat(valIzq);\r\n        }\r\n        let der = valDer.getNombre();\r\n        //Devolver un entorno con los simbolos encontrados\r\n        let entTemporal = new Entorno(\"Temporal\", null, null);\r\n        //1. Obtener entorno padre.\r\n        let padre = entorno.padre;\r\n        //2. Sobre el padre, buscar el que tenga nombre entorno.nombre\r\n        padre.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === entorno.nombre) {\r\n                //Se encontro, ahora buscar en los simbolos de este elem\r\n                //si se encuentra el identificador (valIzq)\r\n                elem.valor.tsimbolos.forEach((insd) => {\r\n                    let elin = insd.valor;\r\n                    if (elin.getNombre() === der) {\r\n                        //Buscar el texto de este elemento.\r\n                        let texto = this.buscarTexto(elin);\r\n                        //Ver si el texto se puede castear a NUMERO\r\n                        if (texto != null) {\r\n                            let numCompare = +texto;\r\n                            //Comparar los numeros\r\n                            switch (relacional) {\r\n                                case TipoOperacion.MAYORQUE:\r\n                                    if (izq > numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORQUE:\r\n                                    if (izq < numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MAYORIGUALQUE:\r\n                                    if (izq >= numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.MENORIGUALQUE:\r\n                                    if (izq <= numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.IGUAL:\r\n                                    if (izq === numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                                case TipoOperacion.DIFERENTEQUE:\r\n                                    if (izq != numCompare) {\r\n                                        //Si lo es, meter al entorno temporal.\r\n                                        entTemporal.agregarSimbolo(elem.nombre, elem);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return entTemporal;\r\n    }\r\n}\r\nexport var TipoOperacion;\r\n(function (TipoOperacion) {\r\n    TipoOperacion[TipoOperacion[\"SUMA\"] = 0] = \"SUMA\";\r\n    TipoOperacion[TipoOperacion[\"RESTA\"] = 1] = \"RESTA\";\r\n    TipoOperacion[TipoOperacion[\"MULTIPLICACION\"] = 2] = \"MULTIPLICACION\";\r\n    TipoOperacion[TipoOperacion[\"DIVISION\"] = 3] = \"DIVISION\";\r\n    TipoOperacion[TipoOperacion[\"MAYORQUE\"] = 4] = \"MAYORQUE\";\r\n    TipoOperacion[TipoOperacion[\"MENORQUE\"] = 5] = \"MENORQUE\";\r\n    TipoOperacion[TipoOperacion[\"MAYORIGUALQUE\"] = 6] = \"MAYORIGUALQUE\";\r\n    TipoOperacion[TipoOperacion[\"MENORIGUALQUE\"] = 7] = \"MENORIGUALQUE\";\r\n    TipoOperacion[TipoOperacion[\"IGUAL\"] = 8] = \"IGUAL\";\r\n    TipoOperacion[TipoOperacion[\"DIFERENTEQUE\"] = 9] = \"DIFERENTEQUE\";\r\n    TipoOperacion[TipoOperacion[\"OR\"] = 10] = \"OR\";\r\n    TipoOperacion[TipoOperacion[\"AND\"] = 11] = \"AND\";\r\n    TipoOperacion[TipoOperacion[\"NOT\"] = 12] = \"NOT\";\r\n    TipoOperacion[TipoOperacion[\"MOD\"] = 13] = \"MOD\";\r\n    TipoOperacion[TipoOperacion[\"PAR\"] = 14] = \"PAR\";\r\n})(TipoOperacion || (TipoOperacion = {}));\r\n","import { Tipo } from \"../AST/Tipo\";\r\nimport { TipoAxis, TipoNodo } from \"./Nodo\";\r\nimport { TipoPrim } from \"../Expresiones/Primitiva\";\r\nexport class Consulta {\r\n    constructor(listaNodos, linea, columna) {\r\n        this.listaNodos = listaNodos;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n    ToString() {\r\n        let cad = \"\";\r\n        this.listaNodos.forEach((nodo) => {\r\n            if (nodo.isFromRoot()) {\r\n                cad += \"/\" + nodo.getNombre();\r\n            }\r\n            else {\r\n                cad += \"//\" + nodo.getNombre();\r\n            }\r\n            if (nodo.isAxis()) {\r\n                cad += \"::\" + nodo.getValor();\r\n            }\r\n            if (nodo.getPredicado() != undefined) {\r\n                cad += \"[\" + nodo.getPredicado() + \"]\";\r\n            }\r\n        });\r\n        return cad;\r\n    }\r\n    ejecutar(global) {\r\n        //Recorrer lista de nodos\r\n        let [salida, _] = this.obtenerSalida(0, global, null, false);\r\n        return salida;\r\n    }\r\n    obtenerSalida(pos, ent, elemAux, rompeCiclo) {\r\n        let salida = \"\";\r\n        let actualNode = this.listaNodos[pos];\r\n        switch (actualNode.getTipo()) {\r\n            case TipoNodo.IDENTIFIER:\r\n                //Buscar si este id existe en el entorno.\r\n                //Antes de entrar al foreach revisar si se debe hacer para cada elemento  o no.\r\n                for (let i = 0; i < ent.tsimbolos.length; i++) {\r\n                    //Ver si este simbolo es igual a actualNode.getNombre()\r\n                    let elem = ent.tsimbolos[i].valor;\r\n                    if (elem.getNombre() === actualNode.getNombre()) {\r\n                        //Si existe este simbolo en el entorno.\r\n                        //Revisar Si tiene predicado este nodo.\r\n                        let predicado = actualNode.getPredicado();\r\n                        if (predicado != undefined) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), false);\r\n                            salida += auxSal;\r\n                            break;\r\n                        }\r\n                        //1. Revisar si es el ultimo nodo a buscar\r\n                        if (pos + 1 < this.listaNodos.length) {\r\n                            //Aun existen mas nodos en la consulta, ir a buscar eso\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elem, rompeCiclo);\r\n                            salida += auxSal;\r\n                        }\r\n                        else {\r\n                            //Es el ultimo nodo en la consulta, escribir su informacion de objeto\r\n                            if (elem.getTipo() === Tipo.STRING) {\r\n                                salida += this.concatHijoTexto(elem, 0);\r\n                            }\r\n                            else {\r\n                                salida += this.getConsultaObjeto(elem, 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (!actualNode.isFromRoot()) {\r\n                        //Este nodo es de tipo //, entonces entrar a buscar de todos modos.\r\n                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elem, rompeCiclo);\r\n                            salida += auxSal;\r\n                        }\r\n                    }\r\n                    if (rompeCiclo) {\r\n                        //Salir del ciclo del for.\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.ATRIBUTO:\r\n                //Ver si es @algo o @*\r\n                if (actualNode.getNombre() === \"*\") {\r\n                    //Si es asterisco, obtener todos los atributos del entorno actual\r\n                    if (actualNode.isFromRoot()) {\r\n                        //Solo es /, buscar solo en el entorno actual todos los atributos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                salida += elem.valor + \"\\n\";\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        //Es //, buscar en el entorno actual y los entornos hijos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                salida += elem.valor + \"\\n\";\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.STRING) {\r\n                                /*\r\n                                  FALTAN ETIQUETAS CON TEXTO Y ATRIBUTO EJEMPLO:\r\n                                    <title atributorandom=\"hola\"> hola texto </title>\r\n                                */\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                //Ir a buscar atributos al entorno de esta etiqueta\r\n                                salida += this.getConsultaAtributos(elem, 0, \"*\");\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    //El atributo tiene identificador, buscar solo los atributos que tienen este nombre.\r\n                    if (actualNode.isFromRoot()) {\r\n                        //Solo es /, buscar solo en el entorno actual todos los atributos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                //Concatenar solo si los nombres son iguales.\r\n                                if (actualNode.getNombre() === elem.getNombre()) {\r\n                                    salida += elem.valor + \"\\n\";\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        //Es //, buscar en el entorno actual y los entornos hijos.\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                if (actualNode.getNombre() === elem.getNombre()) {\r\n                                    salida += elem.valor + \"\\n\";\r\n                                }\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.STRING) {\r\n                                /*\r\n                                  FALTAN ETIQUETAS CON TEXTO Y ATRIBUTO EJEMPLO:\r\n                                    <title atributorandom=\"hola\"> hola texto </title>\r\n                                */\r\n                            }\r\n                            else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                //Ir a buscar atributos al entorno de esta etiqueta\r\n                                salida += this.getConsultaAtributos(elem, 0, actualNode.getNombre());\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.DOTDOT:\r\n                /*\r\n                 **\r\n                 **  .. (DOTDOT) ESTA BUGGEADO :(\r\n                 **\r\n                 */\r\n                //Ver si es el ultimo o no\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    //Avanzar en la lista de nodos (pos+1) pero regresar al entorno anterior (padre)\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent.padre, ent.padre.valor, rompeCiclo);\r\n                    salida += auxSal;\r\n                    // console.log(\"SALIDA: \", salida)\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo, entonces obtener consulta sobre este entorno\r\n                    let father = ent.padre;\r\n                    salida += \"<\" + father.nombre + \" \";\r\n                    let atr = true;\r\n                    father.tsimbolos.forEach((e) => {\r\n                        //Para cada simbolo en el entorno anterior, obtener su contenido\r\n                        let elem = e.valor;\r\n                        if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                            salida += elem.getNombre() + \"=\" + elem.getValor() + \" \";\r\n                        }\r\n                        else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                            if (atr) {\r\n                                salida += \">\\n\";\r\n                                atr = false;\r\n                            }\r\n                            salida += this.getConsultaObjeto(elem, 1);\r\n                        }\r\n                        else if (elem.getTipo() === Tipo.STRING) {\r\n                            if (atr) {\r\n                                salida += \">\\n\";\r\n                                atr = false;\r\n                            }\r\n                            salida += this.concatHijoTexto(elem, 0);\r\n                        }\r\n                    });\r\n                    salida += \"</\" + father.nombre + \">\\n\";\r\n                }\r\n                break;\r\n            case TipoNodo.DOT:\r\n                //Ver si es el ultimo o no\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    //Avanzar en la lista de nodos (pos+1) pero mantener el mismo entorno\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                    salida += auxSal;\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo, entonces obtener consulta sobre este entorno\r\n                    if (elemAux.getTipo() === Tipo.STRING) {\r\n                        //Esta etiqueta contiene solo texto.\r\n                        salida += this.concatHijoTexto(elemAux, 0);\r\n                    }\r\n                    else if (elemAux.getTipo() === Tipo.ETIQUETA) {\r\n                        salida += this.getConsultaObjeto(elemAux, 0);\r\n                    }\r\n                }\r\n                break;\r\n            case TipoNodo.ASTERISCO:\r\n                //* Obtener Todo\r\n                //1. Ver si existen mas nodos\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Aun hay mas nodos.\r\n                    ent.tsimbolos.forEach((e) => {\r\n                        if (e.valor.getTipo() === Tipo.ETIQUETA) {\r\n                            let auxSal;\r\n                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, e.valor.valor, e.valor, rompeCiclo);\r\n                            salida += auxSal;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    //Es el ultimo nodo.\r\n                    ent.tsimbolos.forEach((e) => {\r\n                        let elem = e.valor;\r\n                        if (elem.getTipo() === Tipo.STRING) {\r\n                            salida += this.concatHijoTexto(elem, 0);\r\n                        }\r\n                        else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                            salida += this.getConsultaObjeto(elem, 0);\r\n                        }\r\n                    });\r\n                }\r\n                break;\r\n            case TipoNodo.FUNCION:\r\n                //El nombre de la funcion viene en el valor del nodo. (actualNode.getValor())\r\n                switch (actualNode.getValor().toLocaleLowerCase()) {\r\n                    case \"text()\":\r\n                        //Traer solo el texto que tenga adentro el entorno actual\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.STRING) {\r\n                                //Es texto, entonces devolver.\r\n                                salida += elem.valor + \"\\n\";\r\n                            }\r\n                            //Ver si el nodo es de tipo //\r\n                            if (!actualNode.isFromRoot() && elem.getTipo() == Tipo.ETIQUETA) {\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                salida += auxSal + \"\\n\";\r\n                            }\r\n                        });\r\n                        break;\r\n                    case \"node()\":\r\n                        //Todo lo que tenga adentro el nodo en el entorno actual\r\n                        ent.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                salida += this.getConsultaObjeto(elem, 0);\r\n                            }\r\n                            else if (elem.getTipo() == Tipo.STRING) {\r\n                                salida += elem.valor + \"\\n\";\r\n                            }\r\n                        });\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoNodo.AXIS:\r\n                switch (actualNode.getTipoAxis()) {\r\n                    case TipoAxis.ANCESTOR:\r\n                        /*\r\n                         ** \tSelects all ancestors (parent, grandparent, etc.) of the current node\r\n                         */\r\n                        let nombreParent = actualNode.getValor();\r\n                        if (nombreParent != \"*\") {\r\n                            //1. Buscar si existe un entorno padre de este nodo que tenga este nombre.\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt != null) {\r\n                                if (tmpEnt.nombre === nombreParent) {\r\n                                    //2. Si existe, obtener consulta a partir de este entorno\r\n                                    //0. Ver si existen mas nodos\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                    else {\r\n                                        salida += this.escribirEtiquetaPadre(tmpEnt);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //Obtener todos\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt.padre != null) {\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                salida += auxSal;\r\n                            }\r\n                            else {\r\n                                salida += this.escribirEtiquetaPadre(tmpEnt);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoAxis.ANCESTORORSELF:\r\n                        if (actualNode.getValor() != \"*\") {\r\n                            //1. Buscar si existe un entorno padre de este nodo que tenga este nombre.\r\n                            let tmpEnt = ent.padre;\r\n                            if (!actualNode.isFromRoot()) {\r\n                                //Empezar a buscar en todos.\r\n                                ent.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxS;\r\n                                        [auxS, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida += auxS;\r\n                                    }\r\n                                });\r\n                            }\r\n                            while (tmpEnt != null) {\r\n                                if (tmpEnt.nombre === actualNode.getValor()) {\r\n                                    ///0. Ver si tiene predicate\r\n                                    let predicado = actualNode.getPredicado();\r\n                                    if (predicado != undefined) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, actualNode.getValor(), true);\r\n                                        salida += auxSal;\r\n                                        break;\r\n                                    }\r\n                                    //2. Si existe, obtener consulta a partir de este entorno\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                    else {\r\n                                        salida += this.escribirEtiquetaPadre(tmpEnt);\r\n                                    }\r\n                                    //3. Obtener consulta tambien a partir del entorno actual\r\n                                    salida += this.escribirEtiquetaPadre(tmpEnt);\r\n                                    break;\r\n                                }\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //Obtener todos\r\n                            let tmpEnt = ent.padre;\r\n                            while (tmpEnt.padre != null) {\r\n                                tmpEnt = tmpEnt.padre;\r\n                            }\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                //Aun hay mas nodos despues de este, solo cambiar al entorno encontrado.\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, tmpEnt, elemAux, rompeCiclo);\r\n                                salida += auxSal;\r\n                            }\r\n                            else {\r\n                                salida += this.escribirEtiquetaPadre(tmpEnt);\r\n                            }\r\n                            //3. Obtener consulta tambien a partir del entorno actual\r\n                            salida += this.escribirEtiquetaPadre(tmpEnt);\r\n                        }\r\n                        break;\r\n                    case TipoAxis.ATTRIBUTE:\r\n                        // Selects all attributes of the current node\r\n                        //1. Sobre el entorno actual, buscar el atributo con el nombre especificado en getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Obtener todos los atributos del entorno actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                    //0. Si hay mas nodos despues de este, devolver vacio \"\"\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Revisar si el siguiente es un nodo comun o un nodo AXIS\r\n                                        if (this.listaNodos[pos + 1].getTipo() == TipoNodo.AXIS) {\r\n                                            //Es axis, entonces ir a buscar con el entorno actual\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                            salida += auxSal;\r\n                                        }\r\n                                        else {\r\n                                            //No es axis, entonces devolver consulta vacia\r\n                                            salida = \"\";\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Ya no hay mas nodos, entonces devolver la consulta sobre este entorno.\r\n                                        salida += elem.getNombre() + \"=\" + elem.getValor() + \" \";\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida += auxSal;\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Obtener solo el atributo con el nombre  tiene actualNode.getValor()\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                    if (elem.getNombre() === actualNode.getValor())\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Revisar si el siguiente es un nodo comun o un nodo AXIS\r\n                                            if (this.listaNodos[pos + 1].getTipo() == TipoNodo.AXIS) {\r\n                                                //Es axis, entonces ir a buscar con el entorno actual\r\n                                                let auxSal;\r\n                                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                                salida += auxSal;\r\n                                            }\r\n                                            else {\r\n                                                //No es axis, entonces devolver consulta vacia\r\n                                                salida = \"\";\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //Ya no hay mas nodos, entonces devolver la consulta sobre este entorno.\r\n                                            salida += elem.getNombre() + \"=\" + elem.getValor() + \" \";\r\n                                        }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida += auxSal;\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.CHILD:\r\n                        //Selects all children of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (pos + 1 < this.listaNodos.length) {\r\n                                    //Aun hay mas nodos, moverme solo de entorno\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Es el ultimo nodo, obtener la salida\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        salida += this.getConsultaObjeto(elem, 0);\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida += auxSal;\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida += auxSal;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            salida += this.getConsultaObjeto(elem, 0);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida += auxSal;\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.DESCENDANT:\r\n                        //Selects all descendants (children, grandchildren, etc.) of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (pos + 1 < this.listaNodos.length) {\r\n                                    //Aun hay mas nodos, moverme solo de entorno\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                        //Obtener tambien la salida de los hijos que pueda tener este nodo\r\n                                        let auxSal2;\r\n                                        [auxSal2, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, false, rompeCiclo);\r\n                                        salida += auxSal2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Es el ultimo nodo, obtener la salida\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        salida += this.getConsultaObjeto(elem, 0);\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, true, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida += auxSal;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            salida += this.getConsultaObjeto(elem, 0);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Si no se llaman igual, pero es etiqueta, entrar a buscar a sus hijos :2\r\n                                    if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.DESCENDANTORSELF:\r\n                        //Selects all descendants (children, grandchildren, etc.) of the current node\r\n                        //1. Ver que valor tiene nodeActual.getValor()\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Traer todos los hijos del contexto actual\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (pos + 1 < this.listaNodos.length) {\r\n                                    //Aun hay mas nodos, moverme solo de entorno\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                        //Obtener tambien la salida de los hijos que pueda tener este nodo\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, false, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Es el ultimo nodo, obtener la salida\r\n                                    if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        salida += this.getConsultaObjeto(elem, 0);\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos + 1, elem.valor, elemAux, true, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Traer el hijo en el valor\r\n                            ent.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                //2. Revisar si es el ultimo nodo o no.\r\n                                if (elem.getNombre() === actualNode.getValor()) {\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida += auxSal;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        //Es el ultimo nodo, obtener la salida\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            salida += this.getConsultaObjeto(elem, 0);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //Si no se llaman igual, pero es etiqueta, entrar a buscar a sus hijos :2\r\n                                    if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        //Aun hay mas nodos, moverme solo de entorno\r\n                                        if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                            salida += auxSal;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    case TipoAxis.FOLLOWING:\r\n                        //Selects everything in the document after the closing tag of the current node\r\n                        //1. Salir del entorno actual, ir al padre.\r\n                        let tmpPadre = ent.padre;\r\n                        //2. Con el padre buscar a quien se refiere el axis (con getValor())\r\n                        //Obtener todos los elementos que estan despues del especificado.\r\n                        let found = false; //flag para saber cuando ya se encontro el actual\r\n                        let nombreBuscar = ent.nombre;\r\n                        while (tmpPadre != null) {\r\n                            tmpPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    if (actualNode.getValor() === \"*\" ||\r\n                                        actualNode.getValor() === elem.getNombre()) {\r\n                                        //Ver si es el ultimo nodo o no\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, ir con este entorno a buscar\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida += auxSal;\r\n                                        }\r\n                                        else {\r\n                                            //Escribir elemento\r\n                                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                                salida += this.getConsultaObjeto(elem, 0);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida += auxSal;\r\n                                }\r\n                            });\r\n                            nombreBuscar = tmpPadre.nombre;\r\n                            tmpPadre = tmpPadre.padre;\r\n                            found = false;\r\n                        }\r\n                        //rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.FOLLOWINGSIBLING:\r\n                        //Selects everything in the document after the closing tag of the current node\r\n                        //1. Salir del entorno actual, ir al padre.\r\n                        let siblingPadre = ent.padre;\r\n                        //2. Con el padre buscar a quien se refiere el axis (con getValor())\r\n                        if (actualNode.getValor() === \"*\") {\r\n                            //Obtener todos los elementos que estan despues del especificado.\r\n                            let found = false; //flag para saber cuando ya se encontro el actual\r\n                            let nombreBuscar = ent.nombre;\r\n                            siblingPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    //Ver si es el ultimo nodo o no\r\n                                    if (pos + 1 < this.listaNodos.length) {\r\n                                        //Aun hay mas nodos, ir con este entorno a buscar\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                    else {\r\n                                        //Escribir elemento\r\n                                        if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                            salida += this.getConsultaObjeto(elem, 0);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida += auxSal;\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            //Obtener los elementos que tienen el nombre getValor(), que estan despues de mi entorno actual\r\n                            let found = false; //flag para saber cuando ya se encontro el actual\r\n                            let nombreBuscar = ent.nombre;\r\n                            siblingPadre.tsimbolos.forEach((e) => {\r\n                                let elem = e.valor;\r\n                                if (found) {\r\n                                    if (elem.getNombre() === actualNode.getValor()) {\r\n                                        //Ver si es el ultimo nodo o no\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Aun hay mas nodos, ir con este entorno a buscar\r\n                                            let auxSal;\r\n                                            [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida += auxSal;\r\n                                        }\r\n                                        else {\r\n                                            //Escribir elemento\r\n                                            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                                salida += this.getConsultaObjeto(elem, 0);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (!found && elem.getNombre() === nombreBuscar) {\r\n                                    //Se encontro el entorno actual, ahora si escribir a partir del proximo elemento.\r\n                                    found = true;\r\n                                }\r\n                                //Ver si el nodo es de tipo //\r\n                                if (!actualNode.isFromRoot() &&\r\n                                    elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    let auxSal;\r\n                                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                    salida += auxSal;\r\n                                }\r\n                            });\r\n                        }\r\n                        //rompeCiclo = true;\r\n                        break;\r\n                    case TipoAxis.NAMESPACE: //No se implementa.\r\n                        salida += \"\";\r\n                    case TipoAxis.PARENT:\r\n                        //Selects the parent of the current node\r\n                        //1. Obtener el padre.\r\n                        if (actualNode.getValor() === \"*\" ||\r\n                            actualNode.getValor() === ent.padre.nombre) {\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxS;\r\n                                [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, ent.padre, elemAux, rompeCiclo);\r\n                                salida += auxS;\r\n                            }\r\n                            else {\r\n                                salida += \"<\" + ent.padre.nombre + \" \";\r\n                                let atrs = false;\r\n                                ent.padre.tsimbolos.forEach((e) => {\r\n                                    let elem = e.valor;\r\n                                    if (elem.getTipo() === Tipo.ATRIBUTO) {\r\n                                        salida += elem.getNombre() + \"=\" + elem.getValor() + \" \";\r\n                                    }\r\n                                    else if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                                        if (!atrs) {\r\n                                            atrs = true;\r\n                                            salida += \">\\n\";\r\n                                        }\r\n                                        salida += this.getConsultaObjeto(elem, 1);\r\n                                    }\r\n                                    //Ver si el nodo es de tipo //\r\n                                    if (!actualNode.isFromRoot() &&\r\n                                        elem.getTipo() == Tipo.ETIQUETA) {\r\n                                        let auxSal;\r\n                                        [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                                        salida += auxSal;\r\n                                    }\r\n                                });\r\n                                salida += \"</\" + ent.padre.nombre + \">\\n\";\r\n                            }\r\n                        }\r\n                        break;\r\n                    case TipoAxis.PRECEDING || TipoAxis.PRECEDINGSIBLING:\r\n                        //Selects all nodes that appear before the\r\n                        //current node in the document, except ancestors,\r\n                        //attribute nodes and namespace nodes\r\n                        //1. Obtener Padre\r\n                        let tPadre = ent.padre;\r\n                        //2. Recorrer padre y escribir todos los que esten antes del mencionado\r\n                        let antes = true;\r\n                        tPadre.tsimbolos.forEach((e) => {\r\n                            let elem = e.valor;\r\n                            if (antes && ent.nombre === elem.getNombre()) {\r\n                                //Ya se encontro, no escribir mas.\r\n                                antes = false;\r\n                            }\r\n                            if (antes) {\r\n                                if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                                    if (actualNode.getValor() === \"*\" ||\r\n                                        actualNode.getValor() === elem.getNombre()) {\r\n                                        //Si es asi, escribirlo.\r\n                                        if (pos + 1 < this.listaNodos.length) {\r\n                                            //Hay mas nodos, solo moverme de entorno y avanzar en la posicion de listaNodos\r\n                                            let auxS;\r\n                                            [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                            salida += auxS;\r\n                                        }\r\n                                        else {\r\n                                            //Es el ultimo nodo, escribir directamente este elemento.\r\n                                            salida += this.getConsultaObjeto(elem, 0);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        break;\r\n                    case TipoAxis.SELF:\r\n                        //Selects the current node\r\n                        //Del elemAux, obtener la consulta\r\n                        if (actualNode.getValor() === \"*\" ||\r\n                            actualNode.getValor() === elemAux.getNombre()) {\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxS;\r\n                                [auxS, rompeCiclo] = this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                                salida += auxS;\r\n                            }\r\n                            else {\r\n                                salida += this.getConsultaObjeto(elemAux, 0);\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TipoNodo.NODOERROR:\r\n                if (pos + 1 < this.listaNodos.length) {\r\n                    //Ignorar este y moverme hacia el siguiente nodo.\r\n                    salida += this.obtenerSalida(pos + 1, ent, elemAux, rompeCiclo);\r\n                }\r\n                else {\r\n                    salida += \"\";\r\n                }\r\n        }\r\n        return [salida, rompeCiclo];\r\n    }\r\n    encontrarEntorno(padre, entBuscar) {\r\n        for (let i = 0; i < padre.tsimbolos.length; i++) {\r\n            let elem = padre.tsimbolos[i].valor;\r\n            if (elem.getTipo() == Tipo.ETIQUETA && elem.getNombre() == entBuscar) {\r\n                return elem.valor;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    obtenerConsultaPredicado(predicado, pos, ent, elemAux, rompeCiclo, nombreNodo, isAxis) {\r\n        let salida = \"\";\r\n        //0. Obtener entorno sobre quien quiero obtener el predicado.\r\n        let actualNode = this.listaNodos[pos];\r\n        let auxEnt;\r\n        if (!isAxis) {\r\n            auxEnt = this.encontrarEntorno(ent, nombreNodo);\r\n        }\r\n        else {\r\n            auxEnt = ent.padre;\r\n        }\r\n        if (auxEnt == null) {\r\n            return [salida, rompeCiclo];\r\n        }\r\n        else {\r\n            ent = auxEnt;\r\n        }\r\n        //1. Obtener el valor del predicado. (Para que se le asigne tipo tambien)\r\n        console.log(\"BUSCANDO EN: \", auxEnt);\r\n        let predValue = predicado.getValor(ent);\r\n        console.log(\"PREDICADO: \", predicado);\r\n        console.log(\"PREDVALUE:\", predValue);\r\n        //2. Obtener el tipo del predicado. \r\n        let predTipo = predicado.getTipo();\r\n        if (predValue === null || predValue === undefined) {\r\n            return [salida, rompeCiclo];\r\n        }\r\n        switch (predTipo) {\r\n            case TipoPrim.INTEGER:\r\n                //Ver si el numero es coherente (mayor a 0);\r\n                ent = ent.padre;\r\n                if (predValue < 1) {\r\n                    return [salida, rompeCiclo];\r\n                }\r\n                //Contar las veces que sean necesarias para obtener el nodo requerido\r\n                //Buscar actualNode n veces.\r\n                let veces = 1;\r\n                ent.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    if (elem.getTipo() === Tipo.ETIQUETA && elem.getNombre() === actualNode.getValor()) {\r\n                        if (veces == predValue) {\r\n                            //Ya, devolver el nodo.\r\n                            //Ver si es la ultima posicion o no\r\n                            if (pos + 1 < this.listaNodos.length) {\r\n                                let auxSal;\r\n                                [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                                salida += auxSal;\r\n                            }\r\n                            else {\r\n                                //Es el ultimo, devolver la consulta sobre este entorno.\r\n                                salida += this.getConsultaObjeto(elem, 0);\r\n                            }\r\n                        }\r\n                        veces++;\r\n                    }\r\n                });\r\n                break;\r\n            case TipoPrim.DOUBLE:\r\n                //Retornar vacio \"\";\r\n                break;\r\n            case TipoPrim.BOOLEAN:\r\n                break;\r\n            case TipoPrim.FUNCION:\r\n                //Un TipoPrim.Funcion devuelve un Entorno temporal que contiene\r\n                //Todas las etiquetas a escribir.\r\n                predValue.tsimbolos.forEach((e) => {\r\n                    let elem = e.valor;\r\n                    //Ver si es el ultimo nodo\r\n                    if (pos + 1 < this.listaNodos.length) {\r\n                        //Aun faltan mas nodos, para cada elemento continuar la consulta con su entorno respectivo\r\n                        let auxSal = \"\";\r\n                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, elem.valor, elemAux, rompeCiclo);\r\n                        salida += auxSal;\r\n                        if (isAxis) {\r\n                            rompeCiclo = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //Es el ultimo nodo, devolver la consulta sobre este elemento\r\n                        salida += this.getConsultaObjeto(elem, 0);\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n        return [salida, rompeCiclo];\r\n    }\r\n    addTabs(nTabs) {\r\n        let tabs = \"\";\r\n        for (let i = 0; i < nTabs; i++) {\r\n            tabs += \"    \";\r\n        }\r\n        return tabs;\r\n    }\r\n    buscarHaciaAdentro(elem, nameEncontrar, pos, elemAux, rompeCiclo) {\r\n        let salida = \"\";\r\n        elem.valor.tsimbolos.forEach((e) => {\r\n            let ex = e.valor;\r\n            if (ex.getTipo() === Tipo.ETIQUETA) {\r\n                if (ex.getNombre() == nameEncontrar) {\r\n                    if (pos + 1 < this.listaNodos.length) {\r\n                        //Aun hay mas nodos ir a buscar sobre este entorno bru.\r\n                        let auxSal;\r\n                        [auxSal, rompeCiclo] = this.obtenerSalida(pos + 1, ex.valor, elemAux, rompeCiclo);\r\n                        salida += auxSal;\r\n                    }\r\n                    else {\r\n                        //Escribir este elemento\r\n                        salida += this.getConsultaObjeto(ex, 0);\r\n                    }\r\n                }\r\n                let auxSal;\r\n                [auxSal, rompeCiclo] = this.buscarHaciaAdentro(ex, nameEncontrar, pos, elemAux, rompeCiclo);\r\n                salida += auxSal;\r\n            }\r\n        });\r\n        return [salida, rompeCiclo];\r\n    }\r\n    obtenerHijosRecursivos(pos, ent, elemAux, isLast, rompeCiclo) {\r\n        let salida = \"\";\r\n        ent.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            if (elem.getTipo() === Tipo.ETIQUETA) {\r\n                if (isLast) {\r\n                    salida += this.getConsultaObjeto(elem, 0);\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerHijosRecursivos(pos, elem.valor, elemAux, isLast, rompeCiclo);\r\n                    salida += auxSal;\r\n                }\r\n                else {\r\n                    //Aun hay mas nodos, entonces evaluar sobre eso.\r\n                    let auxSal;\r\n                    [auxSal, rompeCiclo] = this.obtenerSalida(pos, elem.valor, elemAux, rompeCiclo);\r\n                    salida += auxSal;\r\n                }\r\n            }\r\n        });\r\n        return [salida, rompeCiclo];\r\n    }\r\n    escribirEtiquetaPadre(ent) {\r\n        let salida = \"\";\r\n        ent.tsimbolos.forEach((e) => {\r\n            let elem = e.valor;\r\n            //Escribir a partir de aca\r\n            if (elem.getTipo() == Tipo.ETIQUETA) {\r\n                salida += this.getConsultaObjeto(e.valor, 0);\r\n            }\r\n        });\r\n        return salida;\r\n    }\r\n    getConsultaAtributos(elem, nTabs, atrBuscar) {\r\n        let salida = \"\";\r\n        let hijosList = elem.valor.tsimbolos;\r\n        hijosList.forEach((e) => {\r\n            let son = e.valor;\r\n            if (son.getTipo() === Tipo.ATRIBUTO) {\r\n                //Es atributo, concatenar a la salida\r\n                if (atrBuscar === \"*\") {\r\n                    salida += son.valor + \"\\n\";\r\n                }\r\n                else if (atrBuscar === son.getNombre()) {\r\n                    salida += son.valor + \"\\n\";\r\n                }\r\n            }\r\n            if (son.getTipo() === Tipo.ETIQUETA) {\r\n                salida += this.getConsultaAtributos(son, nTabs, atrBuscar);\r\n            }\r\n        });\r\n        return salida;\r\n    }\r\n    getConsultaObjeto(elem, nTabs) {\r\n        let salida = this.addTabs(nTabs) + \"\";\r\n        //Obtener todos los que se llaman nombre y sus hijos.\r\n        //1. Para cada elemento escribir su etiqueta, atributos e hijos o texto\r\n        //2 Escribir nombre:\r\n        salida += \"<\" + elem.nombre;\r\n        let hijosList = elem.valor.tsimbolos;\r\n        //3. Ver si este elemento tiene Atributos\r\n        hijosList.forEach((atr) => {\r\n            let atributo = atr.valor;\r\n            //3.1 Ver si el hijo es atributo\r\n            if (atributo.getTipo() === Tipo.ATRIBUTO) {\r\n                //3.2 Concatenar atributo a la salida ejmplo: category=\"web\"\r\n                salida += \" \" + atributo.nombre + \"=\" + atributo.valor;\r\n            }\r\n        });\r\n        if (elem.getTipo() === Tipo.ETIQUETA_UNIQUE) {\r\n            salida += \"/>\\n\";\r\n        }\r\n        else {\r\n            salida += \">\\n\";\r\n        }\r\n        //4. Ver si el elemento tiene hijos adentro\r\n        hijosList.forEach((h) => {\r\n            let hijo = h.valor;\r\n            if (hijo.getTipo() === Tipo.STRING) {\r\n                salida += this.concatHijoTexto(hijo, nTabs + 1);\r\n            }\r\n            else if (hijo.getTipo() === Tipo.ETIQUETA) {\r\n                //3.3 Escribir la info de este hijo\r\n                salida += this.getConsultaObjeto(hijo, nTabs + 1);\r\n            }\r\n        });\r\n        //2.4 Cerrar la etiqueta actual\r\n        if (elem.getTipo() != Tipo.ETIQUETA_UNIQUE) {\r\n            salida += this.addTabs(nTabs) + \"</\" + elem.nombre + \">\\n\";\r\n        }\r\n        return salida;\r\n    }\r\n    concatHijoTexto(son, nTabs) {\r\n        let salida = this.addTabs(nTabs) + \"\";\r\n        salida += \"\" + son.getValor() + \" \";\r\n        return salida + \"\\n\";\r\n    }\r\n}\r\n","export class Nodo {\r\n    constructor(id, valor, padre, hijos) {\r\n        this.id = id;\r\n        this.valor = valor;\r\n        this.padre = padre;\r\n        this.hijos = hijos;\r\n        this.hijos.forEach((hijo) => {\r\n            hijo.setPadre(this);\r\n        });\r\n    }\r\n    agregarHijo(hijo) {\r\n        this.hijos.push(hijo);\r\n    }\r\n    setPadre(padre) {\r\n        this.padre = padre;\r\n    }\r\n}\r\n"],"sourceRoot":""}